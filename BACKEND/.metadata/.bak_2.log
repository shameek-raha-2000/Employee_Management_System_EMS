!SESSION 2025-06-10 21:09:24.746 -----------------------------------------------
eclipse.buildId=4.15.3.202208110744
java.version=17.0.4
java.vendor=Eclipse Adoptium
BootLoader constants: OS=win32, ARCH=x86_64, WS=win32, NL=en_IN
Framework arguments:  -product org.springframework.boot.ide.branding.sts4
Command-line arguments:  -os win32 -ws win32 -arch x86_64 -product org.springframework.boot.ide.branding.sts4

This is a continuation of log file C:\Users\Shameek\Desktop\PROJECT\EMPLOYEE_MANAGEMENT_SYSTEM\BACKEND\.metadata\.bak_1.log
Created Time: 2025-06-10 23:50:15.990

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2025-06-10 23:50:15.992
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2038)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2243)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3278)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3055)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2025-06-10 23:50:15.995
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2038)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2243)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3278)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3055)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core 4 4 2025-06-10 23:50:17.348
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package com.example.EMSbackend.Service;

import java.util.ArrayList;
import java.util.List;
import java.util.Optional;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import com.example.EMSbackend.DTO.EMSGetAllDTO;
import com.example.EMSbackend.DTO.EMSInsertMultipleRequestDTO;
import com.example.EMSbackend.DTO.EMSInsertMultipleResponseDTO;
import com.example.EMSbackend.DTO.EMSInsertSingleRequestDTO;
import com.example.EMSbackend.DTO.EMSInsertSingleResponseDTO;
import com.example.EMSbackend.DTO.EMSUpdateRequestDTO;
import com.example.EMSbackend.DTO.EMSUpdateResponseDTO;
import com.example.EMSbackend.Model.EMSModel;
import com.example.EMSbackend.Repository.EMSRepository;

import lombok.extern.slf4j.Slf4j;

@Slf4j
@Service
public class EMSService {

	@Autowired
	private EMSRepository emsRepository;
	
	
//GET_ALL_EMPLOYEE_DETAILS
    public EMSGetAllDTO getEmployeeDetailsAll() {
    	EMSGetAllDTO response = new EMSGetAllDTO();
    
    	
    	//try { 	
    	List<EMSModel> modelDetails = (List<EMSModel>) emsRepository.findAll();
    	response.setEmployeeDetailsAll(modelDetails);
    	
    	/*if(modelDetails!=null) {
    		response.setEmployeeDetailsAll(modelDetails);
    	}
    	else {
    		System.out.println("Employee not found");
    		//log.info("Service response not found");
    	}
    	
    	}catch (Exception e) {
            System.out.println("Error while fetching employee list: " + e.getMessage());
            e.printStackTrace();
        }*/
    	    
    	return response;
    }
    
//INSERT_ALL_EMPLOYEE_DETAILS(SINGLE_DATA/NOT_LIST)
    public EMSInsertSingleResponseDTO insertEmployeeDetails(EMSInsertSingleRequestDTO requestData) {
    	EMSInsertSingleResponseDTO response = new EMSInsertSingleResponseDTO();
    	String message = "FAILURE";
    	List<EMSModel> entityList = new ArrayList<>();
  
    	try {
    	if (requestData != null) {
    		EMSModel entity = new EMSModel();
    		entity.setId(requestData.getId());
			entity.setRid(requestData.getRid());
			entity.setName(requestData.getName());
			entity.setParentName(requestData.getParentName());
			entity.setStreamName(requestData.getStreamName());
			entity.setDOB(requestData.getDOB());
			entity.setPOY(requestData.getPOY());
			entity.setMobileNumber(requestData.getMobileNumber());
			entity.setMailID(requestData.getMailID());
			entity.setAddress(requestData.getAddress());
			entity.setStatus(requestData.getStatus());
			 
			c
   
			List<EMSModel> savedEntities = emsRepository.saveAll(entityList);
			if (savedEntities != null && !savedEntities.isEmpty()) {
	            message = "SUCCESS";
	            response.setMessage(message);
	            response.setCode("200 OK");
	        } else {
	            response.setMessage("Insert failed");
	            response.setCode("500 INTERNAL SERVER ERROR");
	        }
    	}else {
            response.setMessage("Input list is null or empty");
            response.setCode("400 BAD REQUEST");
        }
    	}catch (Exception e) {
    		e.printStackTrace();
    		response.setMessage("Exception occurred");
            response.setCode("500 INTERNAL SERVER ERROR");
    	}
  
    	return response;
    	
    }
    
    
   
//INSERT_ALL_EMPLOYEE_DETAILS(MULTIPLE/LIST)
    
    public EMSInsertMultipleResponseDTO insertEmployeeDetailsAll(EMSInsertMultipleRequestDTO insertData) {
    	EMSInsertMultipleResponseDTO response = new EMSInsertMultipleResponseDTO();
    	String message = "FAILURE";
    	
    	try {
    		List<EMSModel> dtoList = insertData.getEmployeeDetailsRequestAll();
 
    		if (dtoList != null && !dtoList.isEmpty()) {
    			
    			List<EMSModel> entityList = new ArrayList<>();
    			
    			for (EMSModel dto : dtoList){
    				
    			EMSModel entity = new EMSModel();
    			 entity.setId(dto.getId());
    			 entity.setRid(dto.getRid());
    			 entity.setName(dto.getName());
    			 entity.setParentName(dto.getParentName());
    			 entity.setStreamName(dto.getStreamName());
    			 entity.setDOB(dto.getDOB());
    			 entity.setPOY(dto.getPOY());
    			 entity.setMobileNumber(dto.getMobileNumber());
    			 entity.setMailID(dto.getMailID());
    			 entity.setAddress(dto.getAddress());
    			 entity.setStatus(dto.getStatus());
    			 
    			 entityList.add(entity);
    			}
    			
    			List<EMSModel> savedEntities = emsRepository.saveAll(entityList);
                

                if (savedEntities != null && !savedEntities.isEmpty()) {
                    message = "SUCCESS";
                    response.setMessage(message);
                    response.setCode("200 OK");
                } else {
                    response.setMessage("Insert failed");
                    response.setCode("500 INTERNAL SERVER ERROR");
                }
    			
    		}else {
    			response.setMessage("Input list is null or empty");
                response.setCode("400 BAD REQUEST");
    		}
    	}catch (Exception e) {
    		e.printStackTrace();
    		response.setMessage("Exception occurred");
            response.setCode("500 INTERNAL SERVER ERROR");
    	}
    	return response;
    }
    
//UPDATE
    public EMSUpdateResponseDTO updateEmployeeDetails(EMSUpdateRequestDTO insertData) {
    	EMSUpdateResponseDTO response =new EMSUpdateResponseDTO();
    	List<EMSModel> saveEntities =  new ArrayList<>();
    	try {
    		Optional<EMSModel> dbResponse = emsRepository.findById(insertData.getId());
    		if(dbResponse.isPresent()) {
    			EMSModel entity = new EMSModel();
    			
    			if(insertData.getId()!=null && insertData.getRid()!=null) {
    			
    				entity.setId(dbResponse.get().getId());
    				entity.setRid(insertData.getRid());
    				entity.setName(dbResponse.get().getName());
    				entity.setParentName(dbResponse.get().getParentName());
    				entity.setStreamName(dbResponse.get().getStreamName());
    				entity.setDOB(dbResponse.get().getDOB());
    				entity.setPOY(dbResponse.get().getPOY());
    				entity.setMobileNumber(dbResponse.get().getMobileNumber());
    				entity.setMailID(dbResponse.get().getMailID());
    				entity.setAddress(dbResponse.get().getAddress());
    				entity.setStatus(dbResponse.get().getStatus());
    				
    				saveEntities.add(entity);
    				
    				
    			}else if(insertData.getId()!=null && insertData.getName()!=null) {
    				entity.setId(dbResponse.get().getId());
    				entity.setRid(dbResponse.get().getRid());
    				entity.setName(insertData.getName());
    				entity.setParentName(dbResponse.get().getParentName());
    				entity.setStreamName(dbResponse.get().getStreamName());
    				entity.setDOB(dbResponse.get().getDOB());
    				entity.setPOY(dbResponse.get().getPOY());
    				entity.setMobileNumber(dbResponse.get().getMobileNumber());
    				entity.setMailID(dbResponse.get().getMailID());
    				entity.setAddress(dbResponse.get().getAddress());
    				entity.setStatus(dbResponse.get().getStatus());
    				
    				saveEntities.add(entity);
    			}else if(insertData.getId()!=null && insertData.getParentName()!=null) {
    				entity.setId(dbResponse.get().getId());
    				entity.setRid(dbResponse.get().getRid());
    				entity.setName(dbResponse.get().getName());
    				entity.setParentName(insertData.getParentName());
    				entity.setStreamName(dbResponse.get().getStreamName());
    				entity.setDOB(dbResponse.get().getDOB());
    				entity.setPOY(dbResponse.get().getPOY());
    				entity.setMobileNumber(dbResponse.get().getMobileNumber());
    				entity.setMailID(dbResponse.get().getMailID());
    				entity.setAddress(dbResponse.get().getAddress());
    				entity.setStatus(dbResponse.get().getStatus());
    				
    				saveEntities.add(entity);
    			}else if(insertData.getId()!=null && insertData.getStreamName()!=null) {
    				entity.setId(dbResponse.get().getId());
    				entity.setRid(dbResponse.get().getRid());
    				entity.setName(dbResponse.get().getName());
    				entity.setParentName(d);
    				entity.setStreamName(dbResponse.get().getStreamName());
    				entity.setDOB(dbResponse.get().getDOB());
    				entity.setPOY(dbResponse.get().getPOY());
    				entity.setMobileNumber(dbResponse.get().getMobileNumber());
    				entity.setMailID(dbResponse.get().getMailID());
    				entity.setAddress(dbResponse.get().getAddress());
    				entity.setStatus(dbResponse.get().getStatus());
    				
    				saveEntities.add(entity);
    			}else if(insertData.getId()!=null && insertData.getDOB()!=null) {
    				
    			}else if(insertData.getId()!=null && insertData.getPOY()!=null) {
    				
    			}else if(insertData.getId()!=null && insertData.getMobileNumber()!=null) {
    				
    			}else if(insertData.getId()!=null && insertData.getMailID()!=null) {
    				
    			}else if(insertData.getId()!=null && insertData.getAddress()!=null) {
    				
    			}else (insertData.getId()!=null && insertData.getStatus()!=null) {
    				
    			}
    			
    		}
    	}catch() {
    		
    	}
    }
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2038)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2243)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3278)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3055)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:540)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:132)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:94)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:91)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:158)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)

!ENTRY org.eclipse.jdt.ui 4 2 2025-06-10 23:50:17.352
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2038)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2243)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3278)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3055)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:540)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:132)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:94)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:91)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:158)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)

!ENTRY org.eclipse.jdt.ui 4 0 2025-06-10 23:50:17.354
!MESSAGE Error in JDT Core during reconcile
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2038)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2243)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3278)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3055)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:540)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:132)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:94)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:91)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:158)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)

!ENTRY org.eclipse.jdt.core 4 4 2025-06-10 23:50:17.446
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package com.example.EMSbackend.Service;

import java.util.ArrayList;
import java.util.List;
import java.util.Optional;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import com.example.EMSbackend.DTO.EMSGetAllDTO;
import com.example.EMSbackend.DTO.EMSInsertMultipleRequestDTO;
import com.example.EMSbackend.DTO.EMSInsertMultipleResponseDTO;
import com.example.EMSbackend.DTO.EMSInsertSingleRequestDTO;
import com.example.EMSbackend.DTO.EMSInsertSingleResponseDTO;
import com.example.EMSbackend.DTO.EMSUpdateRequestDTO;
import com.example.EMSbackend.DTO.EMSUpdateResponseDTO;
import com.example.EMSbackend.Model.EMSModel;
import com.example.EMSbackend.Repository.EMSRepository;

import lombok.extern.slf4j.Slf4j;

@Slf4j
@Service
public class EMSService {

	@Autowired
	private EMSRepository emsRepository;
	
	
//GET_ALL_EMPLOYEE_DETAILS
    public EMSGetAllDTO getEmployeeDetailsAll() {
    	EMSGetAllDTO response = new EMSGetAllDTO();
    
    	
    	//try { 	
    	List<EMSModel> modelDetails = (List<EMSModel>) emsRepository.findAll();
    	response.setEmployeeDetailsAll(modelDetails);
    	
    	/*if(modelDetails!=null) {
    		response.setEmployeeDetailsAll(modelDetails);
    	}
    	else {
    		System.out.println("Employee not found");
    		//log.info("Service response not found");
    	}
    	
    	}catch (Exception e) {
            System.out.println("Error while fetching employee list: " + e.getMessage());
            e.printStackTrace();
        }*/
    	    
    	return response;
    }
    
//INSERT_ALL_EMPLOYEE_DETAILS(SINGLE_DATA/NOT_LIST)
    public EMSInsertSingleResponseDTO insertEmployeeDetails(EMSInsertSingleRequestDTO requestData) {
    	EMSInsertSingleResponseDTO response = new EMSInsertSingleResponseDTO();
    	String message = "FAILURE";
    	List<EMSModel> entityList = new ArrayList<>();
  
    	try {
    	if (requestData != null) {
    		EMSModel entity = new EMSModel();
    		entity.setId(requestData.getId());
			entity.setRid(requestData.getRid());
			entity.setName(requestData.getName());
			entity.setParentName(requestData.getParentName());
			entity.setStreamName(requestData.getStreamName());
			entity.setDOB(requestData.getDOB());
			entity.setPOY(requestData.getPOY());
			entity.setMobileNumber(requestData.getMobileNumber());
			entity.setMailID(requestData.getMailID());
			entity.setAddress(requestData.getAddress());
			entity.setStatus(requestData.getStatus());
			 
			c
   
			List<EMSModel> savedEntities = emsRepository.saveAll(entityList);
			if (savedEntities != null && !savedEntities.isEmpty()) {
	            message = "SUCCESS";
	            response.setMessage(message);
	            response.setCode("200 OK");
	        } else {
	            response.setMessage("Insert failed");
	            response.setCode("500 INTERNAL SERVER ERROR");
	        }
    	}else {
            response.setMessage("Input list is null or empty");
            response.setCode("400 BAD REQUEST");
        }
    	}catch (Exception e) {
    		e.printStackTrace();
    		response.setMessage("Exception occurred");
            response.setCode("500 INTERNAL SERVER ERROR");
    	}
  
    	return response;
    	
    }
    
    
   
//INSERT_ALL_EMPLOYEE_DETAILS(MULTIPLE/LIST)
    
    public EMSInsertMultipleResponseDTO insertEmployeeDetailsAll(EMSInsertMultipleRequestDTO insertData) {
    	EMSInsertMultipleResponseDTO response = new EMSInsertMultipleResponseDTO();
    	String message = "FAILURE";
    	
    	try {
    		List<EMSModel> dtoList = insertData.getEmployeeDetailsRequestAll();
 
    		if (dtoList != null && !dtoList.isEmpty()) {
    			
    			List<EMSModel> entityList = new ArrayList<>();
    			
    			for (EMSModel dto : dtoList){
    				
    			EMSModel entity = new EMSModel();
    			 entity.setId(dto.getId());
    			 entity.setRid(dto.getRid());
    			 entity.setName(dto.getName());
    			 entity.setParentName(dto.getParentName());
    			 entity.setStreamName(dto.getStreamName());
    			 entity.setDOB(dto.getDOB());
    			 entity.setPOY(dto.getPOY());
    			 entity.setMobileNumber(dto.getMobileNumber());
    			 entity.setMailID(dto.getMailID());
    			 entity.setAddress(dto.getAddress());
    			 entity.setStatus(dto.getStatus());
    			 
    			 entityList.add(entity);
    			}
    			
    			List<EMSModel> savedEntities = emsRepository.saveAll(entityList);
                

                if (savedEntities != null && !savedEntities.isEmpty()) {
                    message = "SUCCESS";
                    response.setMessage(message);
                    response.setCode("200 OK");
                } else {
                    response.setMessage("Insert failed");
                    response.setCode("500 INTERNAL SERVER ERROR");
                }
    			
    		}else {
    			response.setMessage("Input list is null or empty");
                response.setCode("400 BAD REQUEST");
    		}
    	}catch (Exception e) {
    		e.printStackTrace();
    		response.setMessage("Exception occurred");
            response.setCode("500 INTERNAL SERVER ERROR");
    	}
    	return response;
    }
    
//UPDATE
    public EMSUpdateResponseDTO updateEmployeeDetails(EMSUpdateRequestDTO insertData) {
    	EMSUpdateResponseDTO response =new EMSUpdateResponseDTO();
    	List<EMSModel> saveEntities =  new ArrayList<>();
    	try {
    		Optional<EMSModel> dbResponse = emsRepository.findById(insertData.getId());
    		if(dbResponse.isPresent()) {
    			EMSModel entity = new EMSModel();
    			
    			if(insertData.getId()!=null && insertData.getRid()!=null) {
    			
    				entity.setId(dbResponse.get().getId());
    				entity.setRid(insertData.getRid());
    				entity.setName(dbResponse.get().getName());
    				entity.setParentName(dbResponse.get().getParentName());
    				entity.setStreamName(dbResponse.get().getStreamName());
    				entity.setDOB(dbResponse.get().getDOB());
    				entity.setPOY(dbResponse.get().getPOY());
    				entity.setMobileNumber(dbResponse.get().getMobileNumber());
    				entity.setMailID(dbResponse.get().getMailID());
    				entity.setAddress(dbResponse.get().getAddress());
    				entity.setStatus(dbResponse.get().getStatus());
    				
    				saveEntities.add(entity);
    				
    				
    			}else if(insertData.getId()!=null && insertData.getName()!=null) {
    				entity.setId(dbResponse.get().getId());
    				entity.setRid(dbResponse.get().getRid());
    				entity.setName(insertData.getName());
    				entity.setParentName(dbResponse.get().getParentName());
    				entity.setStreamName(dbResponse.get().getStreamName());
    				entity.setDOB(dbResponse.get().getDOB());
    				entity.setPOY(dbResponse.get().getPOY());
    				entity.setMobileNumber(dbResponse.get().getMobileNumber());
    				entity.setMailID(dbResponse.get().getMailID());
    				entity.setAddress(dbResponse.get().getAddress());
    				entity.setStatus(dbResponse.get().getStatus());
    				
    				saveEntities.add(entity);
    			}else if(insertData.getId()!=null && insertData.getParentName()!=null) {
    				entity.setId(dbResponse.get().getId());
    				entity.setRid(dbResponse.get().getRid());
    				entity.setName(dbResponse.get().getName());
    				entity.setParentName(insertData.getParentName());
    				entity.setStreamName(dbResponse.get().getStreamName());
    				entity.setDOB(dbResponse.get().getDOB());
    				entity.setPOY(dbResponse.get().getPOY());
    				entity.setMobileNumber(dbResponse.get().getMobileNumber());
    				entity.setMailID(dbResponse.get().getMailID());
    				entity.setAddress(dbResponse.get().getAddress());
    				entity.setStatus(dbResponse.get().getStatus());
    				
    				saveEntities.add(entity);
    			}else if(insertData.getId()!=null && insertData.getStreamName()!=null) {
    				entity.setId(dbResponse.get().getId());
    				entity.setRid(dbResponse.get().getRid());
    				entity.setName(dbResponse.get().getName());
    				entity.setParentName(db);
    				entity.setStreamName(dbResponse.get().getStreamName());
    				entity.setDOB(dbResponse.get().getDOB());
    				entity.setPOY(dbResponse.get().getPOY());
    				entity.setMobileNumber(dbResponse.get().getMobileNumber());
    				entity.setMailID(dbResponse.get().getMailID());
    				entity.setAddress(dbResponse.get().getAddress());
    				entity.setStatus(dbResponse.get().getStatus());
    				
    				saveEntities.add(entity);
    			}else if(insertData.getId()!=null && insertData.getDOB()!=null) {
    				
    			}else if(insertData.getId()!=null && insertData.getPOY()!=null) {
    				
    			}else if(insertData.getId()!=null && insertData.getMobileNumber()!=null) {
    				
    			}else if(insertData.getId()!=null && insertData.getMailID()!=null) {
    				
    			}else if(insertData.getId()!=null && insertData.getAddress()!=null) {
    				
    			}else (insertData.getId()!=null && insertData.getStatus()!=null) {
    				
    			}
    			
    		}
    	}catch() {
    		
    	}
    }
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2038)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2243)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3278)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3055)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:540)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:132)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:94)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:91)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:158)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)

!ENTRY org.eclipse.jdt.ui 4 2 2025-06-10 23:50:17.452
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2038)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2243)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3278)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3055)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:540)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:132)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:94)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:91)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:158)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)

!ENTRY org.eclipse.jdt.ui 4 0 2025-06-10 23:50:17.454
!MESSAGE Error in JDT Core during reconcile
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2038)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2243)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3278)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3055)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:540)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:132)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:94)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:91)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:158)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)

!ENTRY org.eclipse.jdt.core 4 4 2025-06-10 23:50:17.483
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package com.example.EMSbackend.Service;

import java.util.ArrayList;
import java.util.List;
import java.util.Optional;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import com.example.EMSbackend.DTO.EMSGetAllDTO;
import com.example.EMSbackend.DTO.EMSInsertMultipleRequestDTO;
import com.example.EMSbackend.DTO.EMSInsertMultipleResponseDTO;
import com.example.EMSbackend.DTO.EMSInsertSingleRequestDTO;
import com.example.EMSbackend.DTO.EMSInsertSingleResponseDTO;
import com.example.EMSbackend.DTO.EMSUpdateRequestDTO;
import com.example.EMSbackend.DTO.EMSUpdateResponseDTO;
import com.example.EMSbackend.Model.EMSModel;
import com.example.EMSbackend.Repository.EMSRepository;

import lombok.extern.slf4j.Slf4j;

@Slf4j
@Service
public class EMSService {

	@Autowired
	private EMSRepository emsRepository;
	
	
//GET_ALL_EMPLOYEE_DETAILS
    public EMSGetAllDTO getEmployeeDetailsAll() {
    	EMSGetAllDTO response = new EMSGetAllDTO();
    
    	
    	//try { 	
    	List<EMSModel> modelDetails = (List<EMSModel>) emsRepository.findAll();
    	response.setEmployeeDetailsAll(modelDetails);
    	
    	/*if(modelDetails!=null) {
    		response.setEmployeeDetailsAll(modelDetails);
    	}
    	else {
    		System.out.println("Employee not found");
    		//log.info("Service response not found");
    	}
    	
    	}catch (Exception e) {
            System.out.println("Error while fetching employee list: " + e.getMessage());
            e.printStackTrace();
        }*/
    	    
    	return response;
    }
    
//INSERT_ALL_EMPLOYEE_DETAILS(SINGLE_DATA/NOT_LIST)
    public EMSInsertSingleResponseDTO insertEmployeeDetails(EMSInsertSingleRequestDTO requestData) {
    	EMSInsertSingleResponseDTO response = new EMSInsertSingleResponseDTO();
    	String message = "FAILURE";
    	List<EMSModel> entityList = new ArrayList<>();
  
    	try {
    	if (requestData != null) {
    		EMSModel entity = new EMSModel();
    		entity.setId(requestData.getId());
			entity.setRid(requestData.getRid());
			entity.setName(requestData.getName());
			entity.setParentName(requestData.getParentName());
			entity.setStreamName(requestData.getStreamName());
			entity.setDOB(requestData.getDOB());
			entity.setPOY(requestData.getPOY());
			entity.setMobileNumber(requestData.getMobileNumber());
			entity.setMailID(requestData.getMailID());
			entity.setAddress(requestData.getAddress());
			entity.setStatus(requestData.getStatus());
			 
			c
   
			List<EMSModel> savedEntities = emsRepository.saveAll(entityList);
			if (savedEntities != null && !savedEntities.isEmpty()) {
	            message = "SUCCESS";
	            response.setMessage(message);
	            response.setCode("200 OK");
	        } else {
	            response.setMessage("Insert failed");
	            response.setCode("500 INTERNAL SERVER ERROR");
	        }
    	}else {
            response.setMessage("Input list is null or empty");
            response.setCode("400 BAD REQUEST");
        }
    	}catch (Exception e) {
    		e.printStackTrace();
    		response.setMessage("Exception occurred");
            response.setCode("500 INTERNAL SERVER ERROR");
    	}
  
    	return response;
    	
    }
    
    
   
//INSERT_ALL_EMPLOYEE_DETAILS(MULTIPLE/LIST)
    
    public EMSInsertMultipleResponseDTO insertEmployeeDetailsAll(EMSInsertMultipleRequestDTO insertData) {
    	EMSInsertMultipleResponseDTO response = new EMSInsertMultipleResponseDTO();
    	String message = "FAILURE";
    	
    	try {
    		List<EMSModel> dtoList = insertData.getEmployeeDetailsRequestAll();
 
    		if (dtoList != null && !dtoList.isEmpty()) {
    			
    			List<EMSModel> entityList = new ArrayList<>();
    			
    			for (EMSModel dto : dtoList){
    				
    			EMSModel entity = new EMSModel();
    			 entity.setId(dto.getId());
    			 entity.setRid(dto.getRid());
    			 entity.setName(dto.getName());
    			 entity.setParentName(dto.getParentName());
    			 entity.setStreamName(dto.getStreamName());
    			 entity.setDOB(dto.getDOB());
    			 entity.setPOY(dto.getPOY());
    			 entity.setMobileNumber(dto.getMobileNumber());
    			 entity.setMailID(dto.getMailID());
    			 entity.setAddress(dto.getAddress());
    			 entity.setStatus(dto.getStatus());
    			 
    			 entityList.add(entity);
    			}
    			
    			List<EMSModel> savedEntities = emsRepository.saveAll(entityList);
                

                if (savedEntities != null && !savedEntities.isEmpty()) {
                    message = "SUCCESS";
                    response.setMessage(message);
                    response.setCode("200 OK");
                } else {
                    response.setMessage("Insert failed");
                    response.setCode("500 INTERNAL SERVER ERROR");
                }
    			
    		}else {
    			response.setMessage("Input list is null or empty");
                response.setCode("400 BAD REQUEST");
    		}
    	}catch (Exception e) {
    		e.printStackTrace();
    		response.setMessage("Exception occurred");
            response.setCode("500 INTERNAL SERVER ERROR");
    	}
    	return response;
    }
    
//UPDATE
    public EMSUpdateResponseDTO updateEmployeeDetails(EMSUpdateRequestDTO insertData) {
    	EMSUpdateResponseDTO response =new EMSUpdateResponseDTO();
    	List<EMSModel> saveEntities =  new ArrayList<>();
    	try {
    		Optional<EMSModel> dbResponse = emsRepository.findById(insertData.getId());
    		if(dbResponse.isPresent()) {
    			EMSModel entity = new EMSModel();
    			
    			if(insertData.getId()!=null && insertData.getRid()!=null) {
    			
    				entity.setId(dbResponse.get().getId());
    				entity.setRid(insertData.getRid());
    				entity.setName(dbResponse.get().getName());
    				entity.setParentName(dbResponse.get().getParentName());
    				entity.setStreamName(dbResponse.get().getStreamName());
    				entity.setDOB(dbResponse.get().getDOB());
    				entity.setPOY(dbResponse.get().getPOY());
    				entity.setMobileNumber(dbResponse.get().getMobileNumber());
    				entity.setMailID(dbResponse.get().getMailID());
    				entity.setAddress(dbResponse.get().getAddress());
    				entity.setStatus(dbResponse.get().getStatus());
    				
    				saveEntities.add(entity);
    				
    				
    			}else if(insertData.getId()!=null && insertData.getName()!=null) {
    				entity.setId(dbResponse.get().getId());
    				entity.setRid(dbResponse.get().getRid());
    				entity.setName(insertData.getName());
    				entity.setParentName(dbResponse.get().getParentName());
    				entity.setStreamName(dbResponse.get().getStreamName());
    				entity.setDOB(dbResponse.get().getDOB());
    				entity.setPOY(dbResponse.get().getPOY());
    				entity.setMobileNumber(dbResponse.get().getMobileNumber());
    				entity.setMailID(dbResponse.get().getMailID());
    				entity.setAddress(dbResponse.get().getAddress());
    				entity.setStatus(dbResponse.get().getStatus());
    				
    				saveEntities.add(entity);
    			}else if(insertData.getId()!=null && insertData.getParentName()!=null) {
    				entity.setId(dbResponse.get().getId());
    				entity.setRid(dbResponse.get().getRid());
    				entity.setName(dbResponse.get().getName());
    				entity.setParentName(insertData.getParentName());
    				entity.setStreamName(dbResponse.get().getStreamName());
    				entity.setDOB(dbResponse.get().getDOB());
    				entity.setPOY(dbResponse.get().getPOY());
    				entity.setMobileNumber(dbResponse.get().getMobileNumber());
    				entity.setMailID(dbResponse.get().getMailID());
    				entity.setAddress(dbResponse.get().getAddress());
    				entity.setStatus(dbResponse.get().getStatus());
    				
    				saveEntities.add(entity);
    			}else if(insertData.getId()!=null && insertData.getStreamName()!=null) {
    				entity.setId(dbResponse.get().getId());
    				entity.setRid(dbResponse.get().getRid());
    				entity.setName(dbResponse.get().getName());
    				entity.setParentName(db);
    				entity.setStreamName(dbResponse.get().getStreamName());
    				entity.setDOB(dbResponse.get().getDOB());
    				entity.setPOY(dbResponse.get().getPOY());
    				entity.setMobileNumber(dbResponse.get().getMobileNumber());
    				entity.setMailID(dbResponse.get().getMailID());
    				entity.setAddress(dbResponse.get().getAddress());
    				entity.setStatus(dbResponse.get().getStatus());
    				
    				saveEntities.add(entity);
    			}else if(insertData.getId()!=null && insertData.getDOB()!=null) {
    				
    			}else if(insertData.getId()!=null && insertData.getPOY()!=null) {
    				
    			}else if(insertData.getId()!=null && insertData.getMobileNumber()!=null) {
    				
    			}else if(insertData.getId()!=null && insertData.getMailID()!=null) {
    				
    			}else if(insertData.getId()!=null && insertData.getAddress()!=null) {
    				
    			}else (insertData.getId()!=null && insertData.getStatus()!=null) {
    				
    			}
    			
    		}
    	}catch() {
    		
    	}
    }
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2038)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2243)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3278)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3055)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:189)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2025-06-10 23:50:17.486
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2038)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2243)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3278)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3055)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:189)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2025-06-10 23:50:17.488
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2038)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2243)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3278)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3055)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:189)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core 4 4 2025-06-10 23:50:18.516
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package com.example.EMSbackend.Service;

import java.util.ArrayList;
import java.util.List;
import java.util.Optional;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import com.example.EMSbackend.DTO.EMSGetAllDTO;
import com.example.EMSbackend.DTO.EMSInsertMultipleRequestDTO;
import com.example.EMSbackend.DTO.EMSInsertMultipleResponseDTO;
import com.example.EMSbackend.DTO.EMSInsertSingleRequestDTO;
import com.example.EMSbackend.DTO.EMSInsertSingleResponseDTO;
import com.example.EMSbackend.DTO.EMSUpdateRequestDTO;
import com.example.EMSbackend.DTO.EMSUpdateResponseDTO;
import com.example.EMSbackend.Model.EMSModel;
import com.example.EMSbackend.Repository.EMSRepository;

import lombok.extern.slf4j.Slf4j;

@Slf4j
@Service
public class EMSService {

	@Autowired
	private EMSRepository emsRepository;
	
	
//GET_ALL_EMPLOYEE_DETAILS
    public EMSGetAllDTO getEmployeeDetailsAll() {
    	EMSGetAllDTO response = new EMSGetAllDTO();
    
    	
    	//try { 	
    	List<EMSModel> modelDetails = (List<EMSModel>) emsRepository.findAll();
    	response.setEmployeeDetailsAll(modelDetails);
    	
    	/*if(modelDetails!=null) {
    		response.setEmployeeDetailsAll(modelDetails);
    	}
    	else {
    		System.out.println("Employee not found");
    		//log.info("Service response not found");
    	}
    	
    	}catch (Exception e) {
            System.out.println("Error while fetching employee list: " + e.getMessage());
            e.printStackTrace();
        }*/
    	    
    	return response;
    }
    
//INSERT_ALL_EMPLOYEE_DETAILS(SINGLE_DATA/NOT_LIST)
    public EMSInsertSingleResponseDTO insertEmployeeDetails(EMSInsertSingleRequestDTO requestData) {
    	EMSInsertSingleResponseDTO response = new EMSInsertSingleResponseDTO();
    	String message = "FAILURE";
    	List<EMSModel> entityList = new ArrayList<>();
  
    	try {
    	if (requestData != null) {
    		EMSModel entity = new EMSModel();
    		entity.setId(requestData.getId());
			entity.setRid(requestData.getRid());
			entity.setName(requestData.getName());
			entity.setParentName(requestData.getParentName());
			entity.setStreamName(requestData.getStreamName());
			entity.setDOB(requestData.getDOB());
			entity.setPOY(requestData.getPOY());
			entity.setMobileNumber(requestData.getMobileNumber());
			entity.setMailID(requestData.getMailID());
			entity.setAddress(requestData.getAddress());
			entity.setStatus(requestData.getStatus());
			 
			c
   
			List<EMSModel> savedEntities = emsRepository.saveAll(entityList);
			if (savedEntities != null && !savedEntities.isEmpty()) {
	            message = "SUCCESS";
	            response.setMessage(message);
	            response.setCode("200 OK");
	        } else {
	            response.setMessage("Insert failed");
	            response.setCode("500 INTERNAL SERVER ERROR");
	        }
    	}else {
            response.setMessage("Input list is null or empty");
            response.setCode("400 BAD REQUEST");
        }
    	}catch (Exception e) {
    		e.printStackTrace();
    		response.setMessage("Exception occurred");
            response.setCode("500 INTERNAL SERVER ERROR");
    	}
  
    	return response;
    	
    }
    
    
   
//INSERT_ALL_EMPLOYEE_DETAILS(MULTIPLE/LIST)
    
    public EMSInsertMultipleResponseDTO insertEmployeeDetailsAll(EMSInsertMultipleRequestDTO insertData) {
    	EMSInsertMultipleResponseDTO response = new EMSInsertMultipleResponseDTO();
    	String message = "FAILURE";
    	
    	try {
    		List<EMSModel> dtoList = insertData.getEmployeeDetailsRequestAll();
 
    		if (dtoList != null && !dtoList.isEmpty()) {
    			
    			List<EMSModel> entityList = new ArrayList<>();
    			
    			for (EMSModel dto : dtoList){
    				
    			EMSModel entity = new EMSModel();
    			 entity.setId(dto.getId());
    			 entity.setRid(dto.getRid());
    			 entity.setName(dto.getName());
    			 entity.setParentName(dto.getParentName());
    			 entity.setStreamName(dto.getStreamName());
    			 entity.setDOB(dto.getDOB());
    			 entity.setPOY(dto.getPOY());
    			 entity.setMobileNumber(dto.getMobileNumber());
    			 entity.setMailID(dto.getMailID());
    			 entity.setAddress(dto.getAddress());
    			 entity.setStatus(dto.getStatus());
    			 
    			 entityList.add(entity);
    			}
    			
    			List<EMSModel> savedEntities = emsRepository.saveAll(entityList);
                

                if (savedEntities != null && !savedEntities.isEmpty()) {
                    message = "SUCCESS";
                    response.setMessage(message);
                    response.setCode("200 OK");
                } else {
                    response.setMessage("Insert failed");
                    response.setCode("500 INTERNAL SERVER ERROR");
                }
    			
    		}else {
    			response.setMessage("Input list is null or empty");
                response.setCode("400 BAD REQUEST");
    		}
    	}catch (Exception e) {
    		e.printStackTrace();
    		response.setMessage("Exception occurred");
            response.setCode("500 INTERNAL SERVER ERROR");
    	}
    	return response;
    }
    
//UPDATE
    public EMSUpdateResponseDTO updateEmployeeDetails(EMSUpdateRequestDTO insertData) {
    	EMSUpdateResponseDTO response =new EMSUpdateResponseDTO();
    	List<EMSModel> saveEntities =  new ArrayList<>();
    	try {
    		Optional<EMSModel> dbResponse = emsRepository.findById(insertData.getId());
    		if(dbResponse.isPresent()) {
    			EMSModel entity = new EMSModel();
    			
    			if(insertData.getId()!=null && insertData.getRid()!=null) {
    			
    				entity.setId(dbResponse.get().getId());
    				entity.setRid(insertData.getRid());
    				entity.setName(dbResponse.get().getName());
    				entity.setParentName(dbResponse.get().getParentName());
    				entity.setStreamName(dbResponse.get().getStreamName());
    				entity.setDOB(dbResponse.get().getDOB());
    				entity.setPOY(dbResponse.get().getPOY());
    				entity.setMobileNumber(dbResponse.get().getMobileNumber());
    				entity.setMailID(dbResponse.get().getMailID());
    				entity.setAddress(dbResponse.get().getAddress());
    				entity.setStatus(dbResponse.get().getStatus());
    				
    				saveEntities.add(entity);
    				
    				
    			}else if(insertData.getId()!=null && insertData.getName()!=null) {
    				entity.setId(dbResponse.get().getId());
    				entity.setRid(dbResponse.get().getRid());
    				entity.setName(insertData.getName());
    				entity.setParentName(dbResponse.get().getParentName());
    				entity.setStreamName(dbResponse.get().getStreamName());
    				entity.setDOB(dbResponse.get().getDOB());
    				entity.setPOY(dbResponse.get().getPOY());
    				entity.setMobileNumber(dbResponse.get().getMobileNumber());
    				entity.setMailID(dbResponse.get().getMailID());
    				entity.setAddress(dbResponse.get().getAddress());
    				entity.setStatus(dbResponse.get().getStatus());
    				
    				saveEntities.add(entity);
    			}else if(insertData.getId()!=null && insertData.getParentName()!=null) {
    				entity.setId(dbResponse.get().getId());
    				entity.setRid(dbResponse.get().getRid());
    				entity.setName(dbResponse.get().getName());
    				entity.setParentName(insertData.getParentName());
    				entity.setStreamName(dbResponse.get().getStreamName());
    				entity.setDOB(dbResponse.get().getDOB());
    				entity.setPOY(dbResponse.get().getPOY());
    				entity.setMobileNumber(dbResponse.get().getMobileNumber());
    				entity.setMailID(dbResponse.get().getMailID());
    				entity.setAddress(dbResponse.get().getAddress());
    				entity.setStatus(dbResponse.get().getStatus());
    				
    				saveEntities.add(entity);
    			}else if(insertData.getId()!=null && insertData.getStreamName()!=null) {
    				entity.setId(dbResponse.get().getId());
    				entity.setRid(dbResponse.get().getRid());
    				entity.setName(dbResponse.get().getName());
    				entity.setParentName(dbR);
    				entity.setStreamName(dbResponse.get().getStreamName());
    				entity.setDOB(dbResponse.get().getDOB());
    				entity.setPOY(dbResponse.get().getPOY());
    				entity.setMobileNumber(dbResponse.get().getMobileNumber());
    				entity.setMailID(dbResponse.get().getMailID());
    				entity.setAddress(dbResponse.get().getAddress());
    				entity.setStatus(dbResponse.get().getStatus());
    				
    				saveEntities.add(entity);
    			}else if(insertData.getId()!=null && insertData.getDOB()!=null) {
    				
    			}else if(insertData.getId()!=null && insertData.getPOY()!=null) {
    				
    			}else if(insertData.getId()!=null && insertData.getMobileNumber()!=null) {
    				
    			}else if(insertData.getId()!=null && insertData.getMailID()!=null) {
    				
    			}else if(insertData.getId()!=null && insertData.getAddress()!=null) {
    				
    			}else (insertData.getId()!=null && insertData.getStatus()!=null) {
    				
    			}
    			
    		}
    	}catch() {
    		
    	}
    }
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2038)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2243)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3278)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3055)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:540)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:132)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:94)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:91)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:158)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)

!ENTRY org.eclipse.jdt.ui 4 2 2025-06-10 23:50:18.520
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2038)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2243)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3278)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3055)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:540)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:132)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:94)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:91)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:158)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)

!ENTRY org.eclipse.jdt.ui 4 0 2025-06-10 23:50:18.523
!MESSAGE Error in JDT Core during reconcile
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2038)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2243)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3278)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3055)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:540)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:132)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:94)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:91)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:158)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)

!ENTRY org.eclipse.jdt.core 4 4 2025-06-10 23:50:18.662
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package com.example.EMSbackend.Service;

import java.util.ArrayList;
import java.util.List;
import java.util.Optional;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import com.example.EMSbackend.DTO.EMSGetAllDTO;
import com.example.EMSbackend.DTO.EMSInsertMultipleRequestDTO;
import com.example.EMSbackend.DTO.EMSInsertMultipleResponseDTO;
import com.example.EMSbackend.DTO.EMSInsertSingleRequestDTO;
import com.example.EMSbackend.DTO.EMSInsertSingleResponseDTO;
import com.example.EMSbackend.DTO.EMSUpdateRequestDTO;
import com.example.EMSbackend.DTO.EMSUpdateResponseDTO;
import com.example.EMSbackend.Model.EMSModel;
import com.example.EMSbackend.Repository.EMSRepository;

import lombok.extern.slf4j.Slf4j;

@Slf4j
@Service
public class EMSService {

	@Autowired
	private EMSRepository emsRepository;
	
	
//GET_ALL_EMPLOYEE_DETAILS
    public EMSGetAllDTO getEmployeeDetailsAll() {
    	EMSGetAllDTO response = new EMSGetAllDTO();
    
    	
    	//try { 	
    	List<EMSModel> modelDetails = (List<EMSModel>) emsRepository.findAll();
    	response.setEmployeeDetailsAll(modelDetails);
    	
    	/*if(modelDetails!=null) {
    		response.setEmployeeDetailsAll(modelDetails);
    	}
    	else {
    		System.out.println("Employee not found");
    		//log.info("Service response not found");
    	}
    	
    	}catch (Exception e) {
            System.out.println("Error while fetching employee list: " + e.getMessage());
            e.printStackTrace();
        }*/
    	    
    	return response;
    }
    
//INSERT_ALL_EMPLOYEE_DETAILS(SINGLE_DATA/NOT_LIST)
    public EMSInsertSingleResponseDTO insertEmployeeDetails(EMSInsertSingleRequestDTO requestData) {
    	EMSInsertSingleResponseDTO response = new EMSInsertSingleResponseDTO();
    	String message = "FAILURE";
    	List<EMSModel> entityList = new ArrayList<>();
  
    	try {
    	if (requestData != null) {
    		EMSModel entity = new EMSModel();
    		entity.setId(requestData.getId());
			entity.setRid(requestData.getRid());
			entity.setName(requestData.getName());
			entity.setParentName(requestData.getParentName());
			entity.setStreamName(requestData.getStreamName());
			entity.setDOB(requestData.getDOB());
			entity.setPOY(requestData.getPOY());
			entity.setMobileNumber(requestData.getMobileNumber());
			entity.setMailID(requestData.getMailID());
			entity.setAddress(requestData.getAddress());
			entity.setStatus(requestData.getStatus());
			 
			c
   
			List<EMSModel> savedEntities = emsRepository.saveAll(entityList);
			if (savedEntities != null && !savedEntities.isEmpty()) {
	            message = "SUCCESS";
	            response.setMessage(message);
	            response.setCode("200 OK");
	        } else {
	            response.setMessage("Insert failed");
	            response.setCode("500 INTERNAL SERVER ERROR");
	        }
    	}else {
            response.setMessage("Input list is null or empty");
            response.setCode("400 BAD REQUEST");
        }
    	}catch (Exception e) {
    		e.printStackTrace();
    		response.setMessage("Exception occurred");
            response.setCode("500 INTERNAL SERVER ERROR");
    	}
  
    	return response;
    	
    }
    
    
   
//INSERT_ALL_EMPLOYEE_DETAILS(MULTIPLE/LIST)
    
    public EMSInsertMultipleResponseDTO insertEmployeeDetailsAll(EMSInsertMultipleRequestDTO insertData) {
    	EMSInsertMultipleResponseDTO response = new EMSInsertMultipleResponseDTO();
    	String message = "FAILURE";
    	
    	try {
    		List<EMSModel> dtoList = insertData.getEmployeeDetailsRequestAll();
 
    		if (dtoList != null && !dtoList.isEmpty()) {
    			
    			List<EMSModel> entityList = new ArrayList<>();
    			
    			for (EMSModel dto : dtoList){
    				
    			EMSModel entity = new EMSModel();
    			 entity.setId(dto.getId());
    			 entity.setRid(dto.getRid());
    			 entity.setName(dto.getName());
    			 entity.setParentName(dto.getParentName());
    			 entity.setStreamName(dto.getStreamName());
    			 entity.setDOB(dto.getDOB());
    			 entity.setPOY(dto.getPOY());
    			 entity.setMobileNumber(dto.getMobileNumber());
    			 entity.setMailID(dto.getMailID());
    			 entity.setAddress(dto.getAddress());
    			 entity.setStatus(dto.getStatus());
    			 
    			 entityList.add(entity);
    			}
    			
    			List<EMSModel> savedEntities = emsRepository.saveAll(entityList);
                

                if (savedEntities != null && !savedEntities.isEmpty()) {
                    message = "SUCCESS";
                    response.setMessage(message);
                    response.setCode("200 OK");
                } else {
                    response.setMessage("Insert failed");
                    response.setCode("500 INTERNAL SERVER ERROR");
                }
    			
    		}else {
    			response.setMessage("Input list is null or empty");
                response.setCode("400 BAD REQUEST");
    		}
    	}catch (Exception e) {
    		e.printStackTrace();
    		response.setMessage("Exception occurred");
            response.setCode("500 INTERNAL SERVER ERROR");
    	}
    	return response;
    }
    
//UPDATE
    public EMSUpdateResponseDTO updateEmployeeDetails(EMSUpdateRequestDTO insertData) {
    	EMSUpdateResponseDTO response =new EMSUpdateResponseDTO();
    	List<EMSModel> saveEntities =  new ArrayList<>();
    	try {
    		Optional<EMSModel> dbResponse = emsRepository.findById(insertData.getId());
    		if(dbResponse.isPresent()) {
    			EMSModel entity = new EMSModel();
    			
    			if(insertData.getId()!=null && insertData.getRid()!=null) {
    			
    				entity.setId(dbResponse.get().getId());
    				entity.setRid(insertData.getRid());
    				entity.setName(dbResponse.get().getName());
    				entity.setParentName(dbResponse.get().getParentName());
    				entity.setStreamName(dbResponse.get().getStreamName());
    				entity.setDOB(dbResponse.get().getDOB());
    				entity.setPOY(dbResponse.get().getPOY());
    				entity.setMobileNumber(dbResponse.get().getMobileNumber());
    				entity.setMailID(dbResponse.get().getMailID());
    				entity.setAddress(dbResponse.get().getAddress());
    				entity.setStatus(dbResponse.get().getStatus());
    				
    				saveEntities.add(entity);
    				
    				
    			}else if(insertData.getId()!=null && insertData.getName()!=null) {
    				entity.setId(dbResponse.get().getId());
    				entity.setRid(dbResponse.get().getRid());
    				entity.setName(insertData.getName());
    				entity.setParentName(dbResponse.get().getParentName());
    				entity.setStreamName(dbResponse.get().getStreamName());
    				entity.setDOB(dbResponse.get().getDOB());
    				entity.setPOY(dbResponse.get().getPOY());
    				entity.setMobileNumber(dbResponse.get().getMobileNumber());
    				entity.setMailID(dbResponse.get().getMailID());
    				entity.setAddress(dbResponse.get().getAddress());
    				entity.setStatus(dbResponse.get().getStatus());
    				
    				saveEntities.add(entity);
    			}else if(insertData.getId()!=null && insertData.getParentName()!=null) {
    				entity.setId(dbResponse.get().getId());
    				entity.setRid(dbResponse.get().getRid());
    				entity.setName(dbResponse.get().getName());
    				entity.setParentName(insertData.getParentName());
    				entity.setStreamName(dbResponse.get().getStreamName());
    				entity.setDOB(dbResponse.get().getDOB());
    				entity.setPOY(dbResponse.get().getPOY());
    				entity.setMobileNumber(dbResponse.get().getMobileNumber());
    				entity.setMailID(dbResponse.get().getMailID());
    				entity.setAddress(dbResponse.get().getAddress());
    				entity.setStatus(dbResponse.get().getStatus());
    				
    				saveEntities.add(entity);
    			}else if(insertData.getId()!=null && insertData.getStreamName()!=null) {
    				entity.setId(dbResponse.get().getId());
    				entity.setRid(dbResponse.get().getRid());
    				entity.setName(dbResponse.get().getName());
    				entity.setParentName(dbR);
    				entity.setStreamName(dbResponse.get().getStreamName());
    				entity.setDOB(dbResponse.get().getDOB());
    				entity.setPOY(dbResponse.get().getPOY());
    				entity.setMobileNumber(dbResponse.get().getMobileNumber());
    				entity.setMailID(dbResponse.get().getMailID());
    				entity.setAddress(dbResponse.get().getAddress());
    				entity.setStatus(dbResponse.get().getStatus());
    				
    				saveEntities.add(entity);
    			}else if(insertData.getId()!=null && insertData.getDOB()!=null) {
    				
    			}else if(insertData.getId()!=null && insertData.getPOY()!=null) {
    				
    			}else if(insertData.getId()!=null && insertData.getMobileNumber()!=null) {
    				
    			}else if(insertData.getId()!=null && insertData.getMailID()!=null) {
    				
    			}else if(insertData.getId()!=null && insertData.getAddress()!=null) {
    				
    			}else (insertData.getId()!=null && insertData.getStatus()!=null) {
    				
    			}
    			
    		}
    	}catch() {
    		
    	}
    }
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2038)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2243)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3278)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3055)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2025-06-10 23:50:18.666
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2038)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2243)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3278)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3055)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2025-06-10 23:50:18.669
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2038)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2243)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3278)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3055)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core 4 4 2025-06-10 23:50:20.037
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package com.example.EMSbackend.Service;

import java.util.ArrayList;
import java.util.List;
import java.util.Optional;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import com.example.EMSbackend.DTO.EMSGetAllDTO;
import com.example.EMSbackend.DTO.EMSInsertMultipleRequestDTO;
import com.example.EMSbackend.DTO.EMSInsertMultipleResponseDTO;
import com.example.EMSbackend.DTO.EMSInsertSingleRequestDTO;
import com.example.EMSbackend.DTO.EMSInsertSingleResponseDTO;
import com.example.EMSbackend.DTO.EMSUpdateRequestDTO;
import com.example.EMSbackend.DTO.EMSUpdateResponseDTO;
import com.example.EMSbackend.Model.EMSModel;
import com.example.EMSbackend.Repository.EMSRepository;

import lombok.extern.slf4j.Slf4j;

@Slf4j
@Service
public class EMSService {

	@Autowired
	private EMSRepository emsRepository;
	
	
//GET_ALL_EMPLOYEE_DETAILS
    public EMSGetAllDTO getEmployeeDetailsAll() {
    	EMSGetAllDTO response = new EMSGetAllDTO();
    
    	
    	//try { 	
    	List<EMSModel> modelDetails = (List<EMSModel>) emsRepository.findAll();
    	response.setEmployeeDetailsAll(modelDetails);
    	
    	/*if(modelDetails!=null) {
    		response.setEmployeeDetailsAll(modelDetails);
    	}
    	else {
    		System.out.println("Employee not found");
    		//log.info("Service response not found");
    	}
    	
    	}catch (Exception e) {
            System.out.println("Error while fetching employee list: " + e.getMessage());
            e.printStackTrace();
        }*/
    	    
    	return response;
    }
    
//INSERT_ALL_EMPLOYEE_DETAILS(SINGLE_DATA/NOT_LIST)
    public EMSInsertSingleResponseDTO insertEmployeeDetails(EMSInsertSingleRequestDTO requestData) {
    	EMSInsertSingleResponseDTO response = new EMSInsertSingleResponseDTO();
    	String message = "FAILURE";
    	List<EMSModel> entityList = new ArrayList<>();
  
    	try {
    	if (requestData != null) {
    		EMSModel entity = new EMSModel();
    		entity.setId(requestData.getId());
			entity.setRid(requestData.getRid());
			entity.setName(requestData.getName());
			entity.setParentName(requestData.getParentName());
			entity.setStreamName(requestData.getStreamName());
			entity.setDOB(requestData.getDOB());
			entity.setPOY(requestData.getPOY());
			entity.setMobileNumber(requestData.getMobileNumber());
			entity.setMailID(requestData.getMailID());
			entity.setAddress(requestData.getAddress());
			entity.setStatus(requestData.getStatus());
			 
			c
   
			List<EMSModel> savedEntities = emsRepository.saveAll(entityList);
			if (savedEntities != null && !savedEntities.isEmpty()) {
	            message = "SUCCESS";
	            response.setMessage(message);
	            response.setCode("200 OK");
	        } else {
	            response.setMessage("Insert failed");
	            response.setCode("500 INTERNAL SERVER ERROR");
	        }
    	}else {
            response.setMessage("Input list is null or empty");
            response.setCode("400 BAD REQUEST");
        }
    	}catch (Exception e) {
    		e.printStackTrace();
    		response.setMessage("Exception occurred");
            response.setCode("500 INTERNAL SERVER ERROR");
    	}
  
    	return response;
    	
    }
    
    
   
//INSERT_ALL_EMPLOYEE_DETAILS(MULTIPLE/LIST)
    
    public EMSInsertMultipleResponseDTO insertEmployeeDetailsAll(EMSInsertMultipleRequestDTO insertData) {
    	EMSInsertMultipleResponseDTO response = new EMSInsertMultipleResponseDTO();
    	String message = "FAILURE";
    	
    	try {
    		List<EMSModel> dtoList = insertData.getEmployeeDetailsRequestAll();
 
    		if (dtoList != null && !dtoList.isEmpty()) {
    			
    			List<EMSModel> entityList = new ArrayList<>();
    			
    			for (EMSModel dto : dtoList){
    				
    			EMSModel entity = new EMSModel();
    			 entity.setId(dto.getId());
    			 entity.setRid(dto.getRid());
    			 entity.setName(dto.getName());
    			 entity.setParentName(dto.getParentName());
    			 entity.setStreamName(dto.getStreamName());
    			 entity.setDOB(dto.getDOB());
    			 entity.setPOY(dto.getPOY());
    			 entity.setMobileNumber(dto.getMobileNumber());
    			 entity.setMailID(dto.getMailID());
    			 entity.setAddress(dto.getAddress());
    			 entity.setStatus(dto.getStatus());
    			 
    			 entityList.add(entity);
    			}
    			
    			List<EMSModel> savedEntities = emsRepository.saveAll(entityList);
                

                if (savedEntities != null && !savedEntities.isEmpty()) {
                    message = "SUCCESS";
                    response.setMessage(message);
                    response.setCode("200 OK");
                } else {
                    response.setMessage("Insert failed");
                    response.setCode("500 INTERNAL SERVER ERROR");
                }
    			
    		}else {
    			response.setMessage("Input list is null or empty");
                response.setCode("400 BAD REQUEST");
    		}
    	}catch (Exception e) {
    		e.printStackTrace();
    		response.setMessage("Exception occurred");
            response.setCode("500 INTERNAL SERVER ERROR");
    	}
    	return response;
    }
    
//UPDATE
    public EMSUpdateResponseDTO updateEmployeeDetails(EMSUpdateRequestDTO insertData) {
    	EMSUpdateResponseDTO response =new EMSUpdateResponseDTO();
    	List<EMSModel> saveEntities =  new ArrayList<>();
    	try {
    		Optional<EMSModel> dbResponse = emsRepository.findById(insertData.getId());
    		if(dbResponse.isPresent()) {
    			EMSModel entity = new EMSModel();
    			
    			if(insertData.getId()!=null && insertData.getRid()!=null) {
    			
    				entity.setId(dbResponse.get().getId());
    				entity.setRid(insertData.getRid());
    				entity.setName(dbResponse.get().getName());
    				entity.setParentName(dbResponse.get().getParentName());
    				entity.setStreamName(dbResponse.get().getStreamName());
    				entity.setDOB(dbResponse.get().getDOB());
    				entity.setPOY(dbResponse.get().getPOY());
    				entity.setMobileNumber(dbResponse.get().getMobileNumber());
    				entity.setMailID(dbResponse.get().getMailID());
    				entity.setAddress(dbResponse.get().getAddress());
    				entity.setStatus(dbResponse.get().getStatus());
    				
    				saveEntities.add(entity);
    				
    				
    			}else if(insertData.getId()!=null && insertData.getName()!=null) {
    				entity.setId(dbResponse.get().getId());
    				entity.setRid(dbResponse.get().getRid());
    				entity.setName(insertData.getName());
    				entity.setParentName(dbResponse.get().getParentName());
    				entity.setStreamName(dbResponse.get().getStreamName());
    				entity.setDOB(dbResponse.get().getDOB());
    				entity.setPOY(dbResponse.get().getPOY());
    				entity.setMobileNumber(dbResponse.get().getMobileNumber());
    				entity.setMailID(dbResponse.get().getMailID());
    				entity.setAddress(dbResponse.get().getAddress());
    				entity.setStatus(dbResponse.get().getStatus());
    				
    				saveEntities.add(entity);
    			}else if(insertData.getId()!=null && insertData.getParentName()!=null) {
    				entity.setId(dbResponse.get().getId());
    				entity.setRid(dbResponse.get().getRid());
    				entity.setName(dbResponse.get().getName());
    				entity.setParentName(insertData.getParentName());
    				entity.setStreamName(dbResponse.get().getStreamName());
    				entity.setDOB(dbResponse.get().getDOB());
    				entity.setPOY(dbResponse.get().getPOY());
    				entity.setMobileNumber(dbResponse.get().getMobileNumber());
    				entity.setMailID(dbResponse.get().getMailID());
    				entity.setAddress(dbResponse.get().getAddress());
    				entity.setStatus(dbResponse.get().getStatus());
    				
    				saveEntities.add(entity);
    			}else if(insertData.getId()!=null && insertData.getStreamName()!=null) {
    				entity.setId(dbResponse.get().getId());
    				entity.setRid(dbResponse.get().getRid());
    				entity.setName(dbResponse.get().getName());
    				entity.setParentName(dbResp);
    				entity.setStreamName(dbResponse.get().getStreamName());
    				entity.setDOB(dbResponse.get().getDOB());
    				entity.setPOY(dbResponse.get().getPOY());
    				entity.setMobileNumber(dbResponse.get().getMobileNumber());
    				entity.setMailID(dbResponse.get().getMailID());
    				entity.setAddress(dbResponse.get().getAddress());
    				entity.setStatus(dbResponse.get().getStatus());
    				
    				saveEntities.add(entity);
    			}else if(insertData.getId()!=null && insertData.getDOB()!=null) {
    				
    			}else if(insertData.getId()!=null && insertData.getPOY()!=null) {
    				
    			}else if(insertData.getId()!=null && insertData.getMobileNumber()!=null) {
    				
    			}else if(insertData.getId()!=null && insertData.getMailID()!=null) {
    				
    			}else if(insertData.getId()!=null && insertData.getAddress()!=null) {
    				
    			}else (insertData.getId()!=null && insertData.getStatus()!=null) {
    				
    			}
    			
    		}
    	}catch() {
    		
    	}
    }
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2038)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2243)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3278)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3055)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2025-06-10 23:50:20.039
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2038)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2243)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3278)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3055)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2025-06-10 23:50:20.041
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2038)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2243)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3278)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3055)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core 4 4 2025-06-10 23:50:21.368
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package com.example.EMSbackend.Service;

import java.util.ArrayList;
import java.util.List;
import java.util.Optional;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import com.example.EMSbackend.DTO.EMSGetAllDTO;
import com.example.EMSbackend.DTO.EMSInsertMultipleRequestDTO;
import com.example.EMSbackend.DTO.EMSInsertMultipleResponseDTO;
import com.example.EMSbackend.DTO.EMSInsertSingleRequestDTO;
import com.example.EMSbackend.DTO.EMSInsertSingleResponseDTO;
import com.example.EMSbackend.DTO.EMSUpdateRequestDTO;
import com.example.EMSbackend.DTO.EMSUpdateResponseDTO;
import com.example.EMSbackend.Model.EMSModel;
import com.example.EMSbackend.Repository.EMSRepository;

import lombok.extern.slf4j.Slf4j;

@Slf4j
@Service
public class EMSService {

	@Autowired
	private EMSRepository emsRepository;
	
	
//GET_ALL_EMPLOYEE_DETAILS
    public EMSGetAllDTO getEmployeeDetailsAll() {
    	EMSGetAllDTO response = new EMSGetAllDTO();
    
    	
    	//try { 	
    	List<EMSModel> modelDetails = (List<EMSModel>) emsRepository.findAll();
    	response.setEmployeeDetailsAll(modelDetails);
    	
    	/*if(modelDetails!=null) {
    		response.setEmployeeDetailsAll(modelDetails);
    	}
    	else {
    		System.out.println("Employee not found");
    		//log.info("Service response not found");
    	}
    	
    	}catch (Exception e) {
            System.out.println("Error while fetching employee list: " + e.getMessage());
            e.printStackTrace();
        }*/
    	    
    	return response;
    }
    
//INSERT_ALL_EMPLOYEE_DETAILS(SINGLE_DATA/NOT_LIST)
    public EMSInsertSingleResponseDTO insertEmployeeDetails(EMSInsertSingleRequestDTO requestData) {
    	EMSInsertSingleResponseDTO response = new EMSInsertSingleResponseDTO();
    	String message = "FAILURE";
    	List<EMSModel> entityList = new ArrayList<>();
  
    	try {
    	if (requestData != null) {
    		EMSModel entity = new EMSModel();
    		entity.setId(requestData.getId());
			entity.setRid(requestData.getRid());
			entity.setName(requestData.getName());
			entity.setParentName(requestData.getParentName());
			entity.setStreamName(requestData.getStreamName());
			entity.setDOB(requestData.getDOB());
			entity.setPOY(requestData.getPOY());
			entity.setMobileNumber(requestData.getMobileNumber());
			entity.setMailID(requestData.getMailID());
			entity.setAddress(requestData.getAddress());
			entity.setStatus(requestData.getStatus());
			 
			c
   
			List<EMSModel> savedEntities = emsRepository.saveAll(entityList);
			if (savedEntities != null && !savedEntities.isEmpty()) {
	            message = "SUCCESS";
	            response.setMessage(message);
	            response.setCode("200 OK");
	        } else {
	            response.setMessage("Insert failed");
	            response.setCode("500 INTERNAL SERVER ERROR");
	        }
    	}else {
            response.setMessage("Input list is null or empty");
            response.setCode("400 BAD REQUEST");
        }
    	}catch (Exception e) {
    		e.printStackTrace();
    		response.setMessage("Exception occurred");
            response.setCode("500 INTERNAL SERVER ERROR");
    	}
  
    	return response;
    	
    }
    
    
   
//INSERT_ALL_EMPLOYEE_DETAILS(MULTIPLE/LIST)
    
    public EMSInsertMultipleResponseDTO insertEmployeeDetailsAll(EMSInsertMultipleRequestDTO insertData) {
    	EMSInsertMultipleResponseDTO response = new EMSInsertMultipleResponseDTO();
    	String message = "FAILURE";
    	
    	try {
    		List<EMSModel> dtoList = insertData.getEmployeeDetailsRequestAll();
 
    		if (dtoList != null && !dtoList.isEmpty()) {
    			
    			List<EMSModel> entityList = new ArrayList<>();
    			
    			for (EMSModel dto : dtoList){
    				
    			EMSModel entity = new EMSModel();
    			 entity.setId(dto.getId());
    			 entity.setRid(dto.getRid());
    			 entity.setName(dto.getName());
    			 entity.setParentName(dto.getParentName());
    			 entity.setStreamName(dto.getStreamName());
    			 entity.setDOB(dto.getDOB());
    			 entity.setPOY(dto.getPOY());
    			 entity.setMobileNumber(dto.getMobileNumber());
    			 entity.setMailID(dto.getMailID());
    			 entity.setAddress(dto.getAddress());
    			 entity.setStatus(dto.getStatus());
    			 
    			 entityList.add(entity);
    			}
    			
    			List<EMSModel> savedEntities = emsRepository.saveAll(entityList);
                

                if (savedEntities != null && !savedEntities.isEmpty()) {
                    message = "SUCCESS";
                    response.setMessage(message);
                    response.setCode("200 OK");
                } else {
                    response.setMessage("Insert failed");
                    response.setCode("500 INTERNAL SERVER ERROR");
                }
    			
    		}else {
    			response.setMessage("Input list is null or empty");
                response.setCode("400 BAD REQUEST");
    		}
    	}catch (Exception e) {
    		e.printStackTrace();
    		response.setMessage("Exception occurred");
            response.setCode("500 INTERNAL SERVER ERROR");
    	}
    	return response;
    }
    
//UPDATE
    public EMSUpdateResponseDTO updateEmployeeDetails(EMSUpdateRequestDTO insertData) {
    	EMSUpdateResponseDTO response =new EMSUpdateResponseDTO();
    	List<EMSModel> saveEntities =  new ArrayList<>();
    	try {
    		Optional<EMSModel> dbResponse = emsRepository.findById(insertData.getId());
    		if(dbResponse.isPresent()) {
    			EMSModel entity = new EMSModel();
    			
    			if(insertData.getId()!=null && insertData.getRid()!=null) {
    			
    				entity.setId(dbResponse.get().getId());
    				entity.setRid(insertData.getRid());
    				entity.setName(dbResponse.get().getName());
    				entity.setParentName(dbResponse.get().getParentName());
    				entity.setStreamName(dbResponse.get().getStreamName());
    				entity.setDOB(dbResponse.get().getDOB());
    				entity.setPOY(dbResponse.get().getPOY());
    				entity.setMobileNumber(dbResponse.get().getMobileNumber());
    				entity.setMailID(dbResponse.get().getMailID());
    				entity.setAddress(dbResponse.get().getAddress());
    				entity.setStatus(dbResponse.get().getStatus());
    				
    				saveEntities.add(entity);
    				
    				
    			}else if(insertData.getId()!=null && insertData.getName()!=null) {
    				entity.setId(dbResponse.get().getId());
    				entity.setRid(dbResponse.get().getRid());
    				entity.setName(insertData.getName());
    				entity.setParentName(dbResponse.get().getParentName());
    				entity.setStreamName(dbResponse.get().getStreamName());
    				entity.setDOB(dbResponse.get().getDOB());
    				entity.setPOY(dbResponse.get().getPOY());
    				entity.setMobileNumber(dbResponse.get().getMobileNumber());
    				entity.setMailID(dbResponse.get().getMailID());
    				entity.setAddress(dbResponse.get().getAddress());
    				entity.setStatus(dbResponse.get().getStatus());
    				
    				saveEntities.add(entity);
    			}else if(insertData.getId()!=null && insertData.getParentName()!=null) {
    				entity.setId(dbResponse.get().getId());
    				entity.setRid(dbResponse.get().getRid());
    				entity.setName(dbResponse.get().getName());
    				entity.setParentName(insertData.getParentName());
    				entity.setStreamName(dbResponse.get().getStreamName());
    				entity.setDOB(dbResponse.get().getDOB());
    				entity.setPOY(dbResponse.get().getPOY());
    				entity.setMobileNumber(dbResponse.get().getMobileNumber());
    				entity.setMailID(dbResponse.get().getMailID());
    				entity.setAddress(dbResponse.get().getAddress());
    				entity.setStatus(dbResponse.get().getStatus());
    				
    				saveEntities.add(entity);
    			}else if(insertData.getId()!=null && insertData.getStreamName()!=null) {
    				entity.setId(dbResponse.get().getId());
    				entity.setRid(dbResponse.get().getRid());
    				entity.setName(dbResponse.get().getName());
    				entity.setParentName(dbResponse);
    				entity.setStreamName(dbResponse.get().getStreamName());
    				entity.setDOB(dbResponse.get().getDOB());
    				entity.setPOY(dbResponse.get().getPOY());
    				entity.setMobileNumber(dbResponse.get().getMobileNumber());
    				entity.setMailID(dbResponse.get().getMailID());
    				entity.setAddress(dbResponse.get().getAddress());
    				entity.setStatus(dbResponse.get().getStatus());
    				
    				saveEntities.add(entity);
    			}else if(insertData.getId()!=null && insertData.getDOB()!=null) {
    				
    			}else if(insertData.getId()!=null && insertData.getPOY()!=null) {
    				
    			}else if(insertData.getId()!=null && insertData.getMobileNumber()!=null) {
    				
    			}else if(insertData.getId()!=null && insertData.getMailID()!=null) {
    				
    			}else if(insertData.getId()!=null && insertData.getAddress()!=null) {
    				
    			}else (insertData.getId()!=null && insertData.getStatus()!=null) {
    				
    			}
    			
    		}
    	}catch() {
    		
    	}
    }
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2038)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2243)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3278)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3055)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:540)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:132)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:94)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:91)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:158)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)

!ENTRY org.eclipse.jdt.ui 4 2 2025-06-10 23:50:21.372
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2038)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2243)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3278)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3055)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:540)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:132)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:94)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:91)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:158)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)

!ENTRY org.eclipse.jdt.ui 4 0 2025-06-10 23:50:21.375
!MESSAGE Error in JDT Core during reconcile
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2038)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2243)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3278)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3055)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:540)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:132)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:94)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:91)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:158)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)

!ENTRY org.eclipse.jdt.core 4 4 2025-06-10 23:50:21.477
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package com.example.EMSbackend.Service;

import java.util.ArrayList;
import java.util.List;
import java.util.Optional;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import com.example.EMSbackend.DTO.EMSGetAllDTO;
import com.example.EMSbackend.DTO.EMSInsertMultipleRequestDTO;
import com.example.EMSbackend.DTO.EMSInsertMultipleResponseDTO;
import com.example.EMSbackend.DTO.EMSInsertSingleRequestDTO;
import com.example.EMSbackend.DTO.EMSInsertSingleResponseDTO;
import com.example.EMSbackend.DTO.EMSUpdateRequestDTO;
import com.example.EMSbackend.DTO.EMSUpdateResponseDTO;
import com.example.EMSbackend.Model.EMSModel;
import com.example.EMSbackend.Repository.EMSRepository;

import lombok.extern.slf4j.Slf4j;

@Slf4j
@Service
public class EMSService {

	@Autowired
	private EMSRepository emsRepository;
	
	
//GET_ALL_EMPLOYEE_DETAILS
    public EMSGetAllDTO getEmployeeDetailsAll() {
    	EMSGetAllDTO response = new EMSGetAllDTO();
    
    	
    	//try { 	
    	List<EMSModel> modelDetails = (List<EMSModel>) emsRepository.findAll();
    	response.setEmployeeDetailsAll(modelDetails);
    	
    	/*if(modelDetails!=null) {
    		response.setEmployeeDetailsAll(modelDetails);
    	}
    	else {
    		System.out.println("Employee not found");
    		//log.info("Service response not found");
    	}
    	
    	}catch (Exception e) {
            System.out.println("Error while fetching employee list: " + e.getMessage());
            e.printStackTrace();
        }*/
    	    
    	return response;
    }
    
//INSERT_ALL_EMPLOYEE_DETAILS(SINGLE_DATA/NOT_LIST)
    public EMSInsertSingleResponseDTO insertEmployeeDetails(EMSInsertSingleRequestDTO requestData) {
    	EMSInsertSingleResponseDTO response = new EMSInsertSingleResponseDTO();
    	String message = "FAILURE";
    	List<EMSModel> entityList = new ArrayList<>();
  
    	try {
    	if (requestData != null) {
    		EMSModel entity = new EMSModel();
    		entity.setId(requestData.getId());
			entity.setRid(requestData.getRid());
			entity.setName(requestData.getName());
			entity.setParentName(requestData.getParentName());
			entity.setStreamName(requestData.getStreamName());
			entity.setDOB(requestData.getDOB());
			entity.setPOY(requestData.getPOY());
			entity.setMobileNumber(requestData.getMobileNumber());
			entity.setMailID(requestData.getMailID());
			entity.setAddress(requestData.getAddress());
			entity.setStatus(requestData.getStatus());
			 
			c
   
			List<EMSModel> savedEntities = emsRepository.saveAll(entityList);
			if (savedEntities != null && !savedEntities.isEmpty()) {
	            message = "SUCCESS";
	            response.setMessage(message);
	            response.setCode("200 OK");
	        } else {
	            response.setMessage("Insert failed");
	            response.setCode("500 INTERNAL SERVER ERROR");
	        }
    	}else {
            response.setMessage("Input list is null or empty");
            response.setCode("400 BAD REQUEST");
        }
    	}catch (Exception e) {
    		e.printStackTrace();
    		response.setMessage("Exception occurred");
            response.setCode("500 INTERNAL SERVER ERROR");
    	}
  
    	return response;
    	
    }
    
    
   
//INSERT_ALL_EMPLOYEE_DETAILS(MULTIPLE/LIST)
    
    public EMSInsertMultipleResponseDTO insertEmployeeDetailsAll(EMSInsertMultipleRequestDTO insertData) {
    	EMSInsertMultipleResponseDTO response = new EMSInsertMultipleResponseDTO();
    	String message = "FAILURE";
    	
    	try {
    		List<EMSModel> dtoList = insertData.getEmployeeDetailsRequestAll();
 
    		if (dtoList != null && !dtoList.isEmpty()) {
    			
    			List<EMSModel> entityList = new ArrayList<>();
    			
    			for (EMSModel dto : dtoList){
    				
    			EMSModel entity = new EMSModel();
    			 entity.setId(dto.getId());
    			 entity.setRid(dto.getRid());
    			 entity.setName(dto.getName());
    			 entity.setParentName(dto.getParentName());
    			 entity.setStreamName(dto.getStreamName());
    			 entity.setDOB(dto.getDOB());
    			 entity.setPOY(dto.getPOY());
    			 entity.setMobileNumber(dto.getMobileNumber());
    			 entity.setMailID(dto.getMailID());
    			 entity.setAddress(dto.getAddress());
    			 entity.setStatus(dto.getStatus());
    			 
    			 entityList.add(entity);
    			}
    			
    			List<EMSModel> savedEntities = emsRepository.saveAll(entityList);
                

                if (savedEntities != null && !savedEntities.isEmpty()) {
                    message = "SUCCESS";
                    response.setMessage(message);
                    response.setCode("200 OK");
                } else {
                    response.setMessage("Insert failed");
                    response.setCode("500 INTERNAL SERVER ERROR");
                }
    			
    		}else {
    			response.setMessage("Input list is null or empty");
                response.setCode("400 BAD REQUEST");
    		}
    	}catch (Exception e) {
    		e.printStackTrace();
    		response.setMessage("Exception occurred");
            response.setCode("500 INTERNAL SERVER ERROR");
    	}
    	return response;
    }
    
//UPDATE
    public EMSUpdateResponseDTO updateEmployeeDetails(EMSUpdateRequestDTO insertData) {
    	EMSUpdateResponseDTO response =new EMSUpdateResponseDTO();
    	List<EMSModel> saveEntities =  new ArrayList<>();
    	try {
    		Optional<EMSModel> dbResponse = emsRepository.findById(insertData.getId());
    		if(dbResponse.isPresent()) {
    			EMSModel entity = new EMSModel();
    			
    			if(insertData.getId()!=null && insertData.getRid()!=null) {
    			
    				entity.setId(dbResponse.get().getId());
    				entity.setRid(insertData.getRid());
    				entity.setName(dbResponse.get().getName());
    				entity.setParentName(dbResponse.get().getParentName());
    				entity.setStreamName(dbResponse.get().getStreamName());
    				entity.setDOB(dbResponse.get().getDOB());
    				entity.setPOY(dbResponse.get().getPOY());
    				entity.setMobileNumber(dbResponse.get().getMobileNumber());
    				entity.setMailID(dbResponse.get().getMailID());
    				entity.setAddress(dbResponse.get().getAddress());
    				entity.setStatus(dbResponse.get().getStatus());
    				
    				saveEntities.add(entity);
    				
    				
    			}else if(insertData.getId()!=null && insertData.getName()!=null) {
    				entity.setId(dbResponse.get().getId());
    				entity.setRid(dbResponse.get().getRid());
    				entity.setName(insertData.getName());
    				entity.setParentName(dbResponse.get().getParentName());
    				entity.setStreamName(dbResponse.get().getStreamName());
    				entity.setDOB(dbResponse.get().getDOB());
    				entity.setPOY(dbResponse.get().getPOY());
    				entity.setMobileNumber(dbResponse.get().getMobileNumber());
    				entity.setMailID(dbResponse.get().getMailID());
    				entity.setAddress(dbResponse.get().getAddress());
    				entity.setStatus(dbResponse.get().getStatus());
    				
    				saveEntities.add(entity);
    			}else if(insertData.getId()!=null && insertData.getParentName()!=null) {
    				entity.setId(dbResponse.get().getId());
    				entity.setRid(dbResponse.get().getRid());
    				entity.setName(dbResponse.get().getName());
    				entity.setParentName(insertData.getParentName());
    				entity.setStreamName(dbResponse.get().getStreamName());
    				entity.setDOB(dbResponse.get().getDOB());
    				entity.setPOY(dbResponse.get().getPOY());
    				entity.setMobileNumber(dbResponse.get().getMobileNumber());
    				entity.setMailID(dbResponse.get().getMailID());
    				entity.setAddress(dbResponse.get().getAddress());
    				entity.setStatus(dbResponse.get().getStatus());
    				
    				saveEntities.add(entity);
    			}else if(insertData.getId()!=null && insertData.getStreamName()!=null) {
    				entity.setId(dbResponse.get().getId());
    				entity.setRid(dbResponse.get().getRid());
    				entity.setName(dbResponse.get().getName());
    				entity.setParentName(dbResponse);
    				entity.setStreamName(dbResponse.get().getStreamName());
    				entity.setDOB(dbResponse.get().getDOB());
    				entity.setPOY(dbResponse.get().getPOY());
    				entity.setMobileNumber(dbResponse.get().getMobileNumber());
    				entity.setMailID(dbResponse.get().getMailID());
    				entity.setAddress(dbResponse.get().getAddress());
    				entity.setStatus(dbResponse.get().getStatus());
    				
    				saveEntities.add(entity);
    			}else if(insertData.getId()!=null && insertData.getDOB()!=null) {
    				
    			}else if(insertData.getId()!=null && insertData.getPOY()!=null) {
    				
    			}else if(insertData.getId()!=null && insertData.getMobileNumber()!=null) {
    				
    			}else if(insertData.getId()!=null && insertData.getMailID()!=null) {
    				
    			}else if(insertData.getId()!=null && insertData.getAddress()!=null) {
    				
    			}else (insertData.getId()!=null && insertData.getStatus()!=null) {
    				
    			}
    			
    		}
    	}catch() {
    		
    	}
    }
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2038)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2243)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3278)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3055)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2025-06-10 23:50:21.482
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2038)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2243)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3278)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3055)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2025-06-10 23:50:21.485
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2038)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2243)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3278)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3055)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core 4 4 2025-06-10 23:50:23.275
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package com.example.EMSbackend.Service;

import java.util.ArrayList;
import java.util.List;
import java.util.Optional;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import com.example.EMSbackend.DTO.EMSGetAllDTO;
import com.example.EMSbackend.DTO.EMSInsertMultipleRequestDTO;
import com.example.EMSbackend.DTO.EMSInsertMultipleResponseDTO;
import com.example.EMSbackend.DTO.EMSInsertSingleRequestDTO;
import com.example.EMSbackend.DTO.EMSInsertSingleResponseDTO;
import com.example.EMSbackend.DTO.EMSUpdateRequestDTO;
import com.example.EMSbackend.DTO.EMSUpdateResponseDTO;
import com.example.EMSbackend.Model.EMSModel;
import com.example.EMSbackend.Repository.EMSRepository;

import lombok.extern.slf4j.Slf4j;

@Slf4j
@Service
public class EMSService {

	@Autowired
	private EMSRepository emsRepository;
	
	
//GET_ALL_EMPLOYEE_DETAILS
    public EMSGetAllDTO getEmployeeDetailsAll() {
    	EMSGetAllDTO response = new EMSGetAllDTO();
    
    	
    	//try { 	
    	List<EMSModel> modelDetails = (List<EMSModel>) emsRepository.findAll();
    	response.setEmployeeDetailsAll(modelDetails);
    	
    	/*if(modelDetails!=null) {
    		response.setEmployeeDetailsAll(modelDetails);
    	}
    	else {
    		System.out.println("Employee not found");
    		//log.info("Service response not found");
    	}
    	
    	}catch (Exception e) {
            System.out.println("Error while fetching employee list: " + e.getMessage());
            e.printStackTrace();
        }*/
    	    
    	return response;
    }
    
//INSERT_ALL_EMPLOYEE_DETAILS(SINGLE_DATA/NOT_LIST)
    public EMSInsertSingleResponseDTO insertEmployeeDetails(EMSInsertSingleRequestDTO requestData) {
    	EMSInsertSingleResponseDTO response = new EMSInsertSingleResponseDTO();
    	String message = "FAILURE";
    	List<EMSModel> entityList = new ArrayList<>();
  
    	try {
    	if (requestData != null) {
    		EMSModel entity = new EMSModel();
    		entity.setId(requestData.getId());
			entity.setRid(requestData.getRid());
			entity.setName(requestData.getName());
			entity.setParentName(requestData.getParentName());
			entity.setStreamName(requestData.getStreamName());
			entity.setDOB(requestData.getDOB());
			entity.setPOY(requestData.getPOY());
			entity.setMobileNumber(requestData.getMobileNumber());
			entity.setMailID(requestData.getMailID());
			entity.setAddress(requestData.getAddress());
			entity.setStatus(requestData.getStatus());
			 
			c
   
			List<EMSModel> savedEntities = emsRepository.saveAll(entityList);
			if (savedEntities != null && !savedEntities.isEmpty()) {
	            message = "SUCCESS";
	            response.setMessage(message);
	            response.setCode("200 OK");
	        } else {
	            response.setMessage("Insert failed");
	            response.setCode("500 INTERNAL SERVER ERROR");
	        }
    	}else {
            response.setMessage("Input list is null or empty");
            response.setCode("400 BAD REQUEST");
        }
    	}catch (Exception e) {
    		e.printStackTrace();
    		response.setMessage("Exception occurred");
            response.setCode("500 INTERNAL SERVER ERROR");
    	}
  
    	return response;
    	
    }
    
    
   
//INSERT_ALL_EMPLOYEE_DETAILS(MULTIPLE/LIST)
    
    public EMSInsertMultipleResponseDTO insertEmployeeDetailsAll(EMSInsertMultipleRequestDTO insertData) {
    	EMSInsertMultipleResponseDTO response = new EMSInsertMultipleResponseDTO();
    	String message = "FAILURE";
    	
    	try {
    		List<EMSModel> dtoList = insertData.getEmployeeDetailsRequestAll();
 
    		if (dtoList != null && !dtoList.isEmpty()) {
    			
    			List<EMSModel> entityList = new ArrayList<>();
    			
    			for (EMSModel dto : dtoList){
    				
    			EMSModel entity = new EMSModel();
    			 entity.setId(dto.getId());
    			 entity.setRid(dto.getRid());
    			 entity.setName(dto.getName());
    			 entity.setParentName(dto.getParentName());
    			 entity.setStreamName(dto.getStreamName());
    			 entity.setDOB(dto.getDOB());
    			 entity.setPOY(dto.getPOY());
    			 entity.setMobileNumber(dto.getMobileNumber());
    			 entity.setMailID(dto.getMailID());
    			 entity.setAddress(dto.getAddress());
    			 entity.setStatus(dto.getStatus());
    			 
    			 entityList.add(entity);
    			}
    			
    			List<EMSModel> savedEntities = emsRepository.saveAll(entityList);
                

                if (savedEntities != null && !savedEntities.isEmpty()) {
                    message = "SUCCESS";
                    response.setMessage(message);
                    response.setCode("200 OK");
                } else {
                    response.setMessage("Insert failed");
                    response.setCode("500 INTERNAL SERVER ERROR");
                }
    			
    		}else {
    			response.setMessage("Input list is null or empty");
                response.setCode("400 BAD REQUEST");
    		}
    	}catch (Exception e) {
    		e.printStackTrace();
    		response.setMessage("Exception occurred");
            response.setCode("500 INTERNAL SERVER ERROR");
    	}
    	return response;
    }
    
//UPDATE
    public EMSUpdateResponseDTO updateEmployeeDetails(EMSUpdateRequestDTO insertData) {
    	EMSUpdateResponseDTO response =new EMSUpdateResponseDTO();
    	List<EMSModel> saveEntities =  new ArrayList<>();
    	try {
    		Optional<EMSModel> dbResponse = emsRepository.findById(insertData.getId());
    		if(dbResponse.isPresent()) {
    			EMSModel entity = new EMSModel();
    			
    			if(insertData.getId()!=null && insertData.getRid()!=null) {
    			
    				entity.setId(dbResponse.get().getId());
    				entity.setRid(insertData.getRid());
    				entity.setName(dbResponse.get().getName());
    				entity.setParentName(dbResponse.get().getParentName());
    				entity.setStreamName(dbResponse.get().getStreamName());
    				entity.setDOB(dbResponse.get().getDOB());
    				entity.setPOY(dbResponse.get().getPOY());
    				entity.setMobileNumber(dbResponse.get().getMobileNumber());
    				entity.setMailID(dbResponse.get().getMailID());
    				entity.setAddress(dbResponse.get().getAddress());
    				entity.setStatus(dbResponse.get().getStatus());
    				
    				saveEntities.add(entity);
    				
    				
    			}else if(insertData.getId()!=null && insertData.getName()!=null) {
    				entity.setId(dbResponse.get().getId());
    				entity.setRid(dbResponse.get().getRid());
    				entity.setName(insertData.getName());
    				entity.setParentName(dbResponse.get().getParentName());
    				entity.setStreamName(dbResponse.get().getStreamName());
    				entity.setDOB(dbResponse.get().getDOB());
    				entity.setPOY(dbResponse.get().getPOY());
    				entity.setMobileNumber(dbResponse.get().getMobileNumber());
    				entity.setMailID(dbResponse.get().getMailID());
    				entity.setAddress(dbResponse.get().getAddress());
    				entity.setStatus(dbResponse.get().getStatus());
    				
    				saveEntities.add(entity);
    			}else if(insertData.getId()!=null && insertData.getParentName()!=null) {
    				entity.setId(dbResponse.get().getId());
    				entity.setRid(dbResponse.get().getRid());
    				entity.setName(dbResponse.get().getName());
    				entity.setParentName(insertData.getParentName());
    				entity.setStreamName(dbResponse.get().getStreamName());
    				entity.setDOB(dbResponse.get().getDOB());
    				entity.setPOY(dbResponse.get().getPOY());
    				entity.setMobileNumber(dbResponse.get().getMobileNumber());
    				entity.setMailID(dbResponse.get().getMailID());
    				entity.setAddress(dbResponse.get().getAddress());
    				entity.setStatus(dbResponse.get().getStatus());
    				
    				saveEntities.add(entity);
    			}else if(insertData.getId()!=null && insertData.getStreamName()!=null) {
    				entity.setId(dbResponse.get().getId());
    				entity.setRid(dbResponse.get().getRid());
    				entity.setName(dbResponse.get().getName());
    				entity.setParentName(dbResponse.);
    				entity.setStreamName(dbResponse.get().getStreamName());
    				entity.setDOB(dbResponse.get().getDOB());
    				entity.setPOY(dbResponse.get().getPOY());
    				entity.setMobileNumber(dbResponse.get().getMobileNumber());
    				entity.setMailID(dbResponse.get().getMailID());
    				entity.setAddress(dbResponse.get().getAddress());
    				entity.setStatus(dbResponse.get().getStatus());
    				
    				saveEntities.add(entity);
    			}else if(insertData.getId()!=null && insertData.getDOB()!=null) {
    				
    			}else if(insertData.getId()!=null && insertData.getPOY()!=null) {
    				
    			}else if(insertData.getId()!=null && insertData.getMobileNumber()!=null) {
    				
    			}else if(insertData.getId()!=null && insertData.getMailID()!=null) {
    				
    			}else if(insertData.getId()!=null && insertData.getAddress()!=null) {
    				
    			}else (insertData.getId()!=null && insertData.getStatus()!=null) {
    				
    			}
    			
    		}
    	}catch() {
    		
    	}
    }
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2038)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2243)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3278)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3055)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:540)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:132)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:94)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:91)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:158)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)

!ENTRY org.eclipse.jdt.ui 4 2 2025-06-10 23:50:23.280
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2038)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2243)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3278)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3055)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:540)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:132)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:94)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:91)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:158)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)

!ENTRY org.eclipse.jdt.ui 4 0 2025-06-10 23:50:23.282
!MESSAGE Error in JDT Core during reconcile
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2038)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2243)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3278)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3055)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:540)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:132)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:94)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:91)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:158)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)

!ENTRY org.eclipse.jdt.core 4 4 2025-06-10 23:50:23.373
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package com.example.EMSbackend.Service;

import java.util.ArrayList;
import java.util.List;
import java.util.Optional;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import com.example.EMSbackend.DTO.EMSGetAllDTO;
import com.example.EMSbackend.DTO.EMSInsertMultipleRequestDTO;
import com.example.EMSbackend.DTO.EMSInsertMultipleResponseDTO;
import com.example.EMSbackend.DTO.EMSInsertSingleRequestDTO;
import com.example.EMSbackend.DTO.EMSInsertSingleResponseDTO;
import com.example.EMSbackend.DTO.EMSUpdateRequestDTO;
import com.example.EMSbackend.DTO.EMSUpdateResponseDTO;
import com.example.EMSbackend.Model.EMSModel;
import com.example.EMSbackend.Repository.EMSRepository;

import lombok.extern.slf4j.Slf4j;

@Slf4j
@Service
public class EMSService {

	@Autowired
	private EMSRepository emsRepository;
	
	
//GET_ALL_EMPLOYEE_DETAILS
    public EMSGetAllDTO getEmployeeDetailsAll() {
    	EMSGetAllDTO response = new EMSGetAllDTO();
    
    	
    	//try { 	
    	List<EMSModel> modelDetails = (List<EMSModel>) emsRepository.findAll();
    	response.setEmployeeDetailsAll(modelDetails);
    	
    	/*if(modelDetails!=null) {
    		response.setEmployeeDetailsAll(modelDetails);
    	}
    	else {
    		System.out.println("Employee not found");
    		//log.info("Service response not found");
    	}
    	
    	}catch (Exception e) {
            System.out.println("Error while fetching employee list: " + e.getMessage());
            e.printStackTrace();
        }*/
    	    
    	return response;
    }
    
//INSERT_ALL_EMPLOYEE_DETAILS(SINGLE_DATA/NOT_LIST)
    public EMSInsertSingleResponseDTO insertEmployeeDetails(EMSInsertSingleRequestDTO requestData) {
    	EMSInsertSingleResponseDTO response = new EMSInsertSingleResponseDTO();
    	String message = "FAILURE";
    	List<EMSModel> entityList = new ArrayList<>();
  
    	try {
    	if (requestData != null) {
    		EMSModel entity = new EMSModel();
    		entity.setId(requestData.getId());
			entity.setRid(requestData.getRid());
			entity.setName(requestData.getName());
			entity.setParentName(requestData.getParentName());
			entity.setStreamName(requestData.getStreamName());
			entity.setDOB(requestData.getDOB());
			entity.setPOY(requestData.getPOY());
			entity.setMobileNumber(requestData.getMobileNumber());
			entity.setMailID(requestData.getMailID());
			entity.setAddress(requestData.getAddress());
			entity.setStatus(requestData.getStatus());
			 
			c
   
			List<EMSModel> savedEntities = emsRepository.saveAll(entityList);
			if (savedEntities != null && !savedEntities.isEmpty()) {
	            message = "SUCCESS";
	            response.setMessage(message);
	            response.setCode("200 OK");
	        } else {
	            response.setMessage("Insert failed");
	            response.setCode("500 INTERNAL SERVER ERROR");
	        }
    	}else {
            response.setMessage("Input list is null or empty");
            response.setCode("400 BAD REQUEST");
        }
    	}catch (Exception e) {
    		e.printStackTrace();
    		response.setMessage("Exception occurred");
            response.setCode("500 INTERNAL SERVER ERROR");
    	}
  
    	return response;
    	
    }
    
    
   
//INSERT_ALL_EMPLOYEE_DETAILS(MULTIPLE/LIST)
    
    public EMSInsertMultipleResponseDTO insertEmployeeDetailsAll(EMSInsertMultipleRequestDTO insertData) {
    	EMSInsertMultipleResponseDTO response = new EMSInsertMultipleResponseDTO();
    	String message = "FAILURE";
    	
    	try {
    		List<EMSModel> dtoList = insertData.getEmployeeDetailsRequestAll();
 
    		if (dtoList != null && !dtoList.isEmpty()) {
    			
    			List<EMSModel> entityList = new ArrayList<>();
    			
    			for (EMSModel dto : dtoList){
    				
    			EMSModel entity = new EMSModel();
    			 entity.setId(dto.getId());
    			 entity.setRid(dto.getRid());
    			 entity.setName(dto.getName());
    			 entity.setParentName(dto.getParentName());
    			 entity.setStreamName(dto.getStreamName());
    			 entity.setDOB(dto.getDOB());
    			 entity.setPOY(dto.getPOY());
    			 entity.setMobileNumber(dto.getMobileNumber());
    			 entity.setMailID(dto.getMailID());
    			 entity.setAddress(dto.getAddress());
    			 entity.setStatus(dto.getStatus());
    			 
    			 entityList.add(entity);
    			}
    			
    			List<EMSModel> savedEntities = emsRepository.saveAll(entityList);
                

                if (savedEntities != null && !savedEntities.isEmpty()) {
                    message = "SUCCESS";
                    response.setMessage(message);
                    response.setCode("200 OK");
                } else {
                    response.setMessage("Insert failed");
                    response.setCode("500 INTERNAL SERVER ERROR");
                }
    			
    		}else {
    			response.setMessage("Input list is null or empty");
                response.setCode("400 BAD REQUEST");
    		}
    	}catch (Exception e) {
    		e.printStackTrace();
    		response.setMessage("Exception occurred");
            response.setCode("500 INTERNAL SERVER ERROR");
    	}
    	return response;
    }
    
//UPDATE
    public EMSUpdateResponseDTO updateEmployeeDetails(EMSUpdateRequestDTO insertData) {
    	EMSUpdateResponseDTO response =new EMSUpdateResponseDTO();
    	List<EMSModel> saveEntities =  new ArrayList<>();
    	try {
    		Optional<EMSModel> dbResponse = emsRepository.findById(insertData.getId());
    		if(dbResponse.isPresent()) {
    			EMSModel entity = new EMSModel();
    			
    			if(insertData.getId()!=null && insertData.getRid()!=null) {
    			
    				entity.setId(dbResponse.get().getId());
    				entity.setRid(insertData.getRid());
    				entity.setName(dbResponse.get().getName());
    				entity.setParentName(dbResponse.get().getParentName());
    				entity.setStreamName(dbResponse.get().getStreamName());
    				entity.setDOB(dbResponse.get().getDOB());
    				entity.setPOY(dbResponse.get().getPOY());
    				entity.setMobileNumber(dbResponse.get().getMobileNumber());
    				entity.setMailID(dbResponse.get().getMailID());
    				entity.setAddress(dbResponse.get().getAddress());
    				entity.setStatus(dbResponse.get().getStatus());
    				
    				saveEntities.add(entity);
    				
    				
    			}else if(insertData.getId()!=null && insertData.getName()!=null) {
    				entity.setId(dbResponse.get().getId());
    				entity.setRid(dbResponse.get().getRid());
    				entity.setName(insertData.getName());
    				entity.setParentName(dbResponse.get().getParentName());
    				entity.setStreamName(dbResponse.get().getStreamName());
    				entity.setDOB(dbResponse.get().getDOB());
    				entity.setPOY(dbResponse.get().getPOY());
    				entity.setMobileNumber(dbResponse.get().getMobileNumber());
    				entity.setMailID(dbResponse.get().getMailID());
    				entity.setAddress(dbResponse.get().getAddress());
    				entity.setStatus(dbResponse.get().getStatus());
    				
    				saveEntities.add(entity);
    			}else if(insertData.getId()!=null && insertData.getParentName()!=null) {
    				entity.setId(dbResponse.get().getId());
    				entity.setRid(dbResponse.get().getRid());
    				entity.setName(dbResponse.get().getName());
    				entity.setParentName(insertData.getParentName());
    				entity.setStreamName(dbResponse.get().getStreamName());
    				entity.setDOB(dbResponse.get().getDOB());
    				entity.setPOY(dbResponse.get().getPOY());
    				entity.setMobileNumber(dbResponse.get().getMobileNumber());
    				entity.setMailID(dbResponse.get().getMailID());
    				entity.setAddress(dbResponse.get().getAddress());
    				entity.setStatus(dbResponse.get().getStatus());
    				
    				saveEntities.add(entity);
    			}else if(insertData.getId()!=null && insertData.getStreamName()!=null) {
    				entity.setId(dbResponse.get().getId());
    				entity.setRid(dbResponse.get().getRid());
    				entity.setName(dbResponse.get().getName());
    				entity.setParentName(dbResponse.);
    				entity.setStreamName(dbResponse.get().getStreamName());
    				entity.setDOB(dbResponse.get().getDOB());
    				entity.setPOY(dbResponse.get().getPOY());
    				entity.setMobileNumber(dbResponse.get().getMobileNumber());
    				entity.setMailID(dbResponse.get().getMailID());
    				entity.setAddress(dbResponse.get().getAddress());
    				entity.setStatus(dbResponse.get().getStatus());
    				
    				saveEntities.add(entity);
    			}else if(insertData.getId()!=null && insertData.getDOB()!=null) {
    				
    			}else if(insertData.getId()!=null && insertData.getPOY()!=null) {
    				
    			}else if(insertData.getId()!=null && insertData.getMobileNumber()!=null) {
    				
    			}else if(insertData.getId()!=null && insertData.getMailID()!=null) {
    				
    			}else if(insertData.getId()!=null && insertData.getAddress()!=null) {
    				
    			}else (insertData.getId()!=null && insertData.getStatus()!=null) {
    				
    			}
    			
    		}
    	}catch() {
    		
    	}
    }
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2038)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2243)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3278)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3055)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2025-06-10 23:50:23.377
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2038)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2243)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3278)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3055)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2025-06-10 23:50:23.379
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2038)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2243)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3278)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3055)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core 4 4 2025-06-10 23:50:24.492
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package com.example.EMSbackend.Service;

import java.util.ArrayList;
import java.util.List;
import java.util.Optional;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import com.example.EMSbackend.DTO.EMSGetAllDTO;
import com.example.EMSbackend.DTO.EMSInsertMultipleRequestDTO;
import com.example.EMSbackend.DTO.EMSInsertMultipleResponseDTO;
import com.example.EMSbackend.DTO.EMSInsertSingleRequestDTO;
import com.example.EMSbackend.DTO.EMSInsertSingleResponseDTO;
import com.example.EMSbackend.DTO.EMSUpdateRequestDTO;
import com.example.EMSbackend.DTO.EMSUpdateResponseDTO;
import com.example.EMSbackend.Model.EMSModel;
import com.example.EMSbackend.Repository.EMSRepository;

import lombok.extern.slf4j.Slf4j;

@Slf4j
@Service
public class EMSService {

	@Autowired
	private EMSRepository emsRepository;
	
	
//GET_ALL_EMPLOYEE_DETAILS
    public EMSGetAllDTO getEmployeeDetailsAll() {
    	EMSGetAllDTO response = new EMSGetAllDTO();
    
    	
    	//try { 	
    	List<EMSModel> modelDetails = (List<EMSModel>) emsRepository.findAll();
    	response.setEmployeeDetailsAll(modelDetails);
    	
    	/*if(modelDetails!=null) {
    		response.setEmployeeDetailsAll(modelDetails);
    	}
    	else {
    		System.out.println("Employee not found");
    		//log.info("Service response not found");
    	}
    	
    	}catch (Exception e) {
            System.out.println("Error while fetching employee list: " + e.getMessage());
            e.printStackTrace();
        }*/
    	    
    	return response;
    }
    
//INSERT_ALL_EMPLOYEE_DETAILS(SINGLE_DATA/NOT_LIST)
    public EMSInsertSingleResponseDTO insertEmployeeDetails(EMSInsertSingleRequestDTO requestData) {
    	EMSInsertSingleResponseDTO response = new EMSInsertSingleResponseDTO();
    	String message = "FAILURE";
    	List<EMSModel> entityList = new ArrayList<>();
  
    	try {
    	if (requestData != null) {
    		EMSModel entity = new EMSModel();
    		entity.setId(requestData.getId());
			entity.setRid(requestData.getRid());
			entity.setName(requestData.getName());
			entity.setParentName(requestData.getParentName());
			entity.setStreamName(requestData.getStreamName());
			entity.setDOB(requestData.getDOB());
			entity.setPOY(requestData.getPOY());
			entity.setMobileNumber(requestData.getMobileNumber());
			entity.setMailID(requestData.getMailID());
			entity.setAddress(requestData.getAddress());
			entity.setStatus(requestData.getStatus());
			 
			c
   
			List<EMSModel> savedEntities = emsRepository.saveAll(entityList);
			if (savedEntities != null && !savedEntities.isEmpty()) {
	            message = "SUCCESS";
	            response.setMessage(message);
	            response.setCode("200 OK");
	        } else {
	            response.setMessage("Insert failed");
	            response.setCode("500 INTERNAL SERVER ERROR");
	        }
    	}else {
            response.setMessage("Input list is null or empty");
            response.setCode("400 BAD REQUEST");
        }
    	}catch (Exception e) {
    		e.printStackTrace();
    		response.setMessage("Exception occurred");
            response.setCode("500 INTERNAL SERVER ERROR");
    	}
  
    	return response;
    	
    }
    
    
   
//INSERT_ALL_EMPLOYEE_DETAILS(MULTIPLE/LIST)
    
    public EMSInsertMultipleResponseDTO insertEmployeeDetailsAll(EMSInsertMultipleRequestDTO insertData) {
    	EMSInsertMultipleResponseDTO response = new EMSInsertMultipleResponseDTO();
    	String message = "FAILURE";
    	
    	try {
    		List<EMSModel> dtoList = insertData.getEmployeeDetailsRequestAll();
 
    		if (dtoList != null && !dtoList.isEmpty()) {
    			
    			List<EMSModel> entityList = new ArrayList<>();
    			
    			for (EMSModel dto : dtoList){
    				
    			EMSModel entity = new EMSModel();
    			 entity.setId(dto.getId());
    			 entity.setRid(dto.getRid());
    			 entity.setName(dto.getName());
    			 entity.setParentName(dto.getParentName());
    			 entity.setStreamName(dto.getStreamName());
    			 entity.setDOB(dto.getDOB());
    			 entity.setPOY(dto.getPOY());
    			 entity.setMobileNumber(dto.getMobileNumber());
    			 entity.setMailID(dto.getMailID());
    			 entity.setAddress(dto.getAddress());
    			 entity.setStatus(dto.getStatus());
    			 
    			 entityList.add(entity);
    			}
    			
    			List<EMSModel> savedEntities = emsRepository.saveAll(entityList);
                

                if (savedEntities != null && !savedEntities.isEmpty()) {
                    message = "SUCCESS";
                    response.setMessage(message);
                    response.setCode("200 OK");
                } else {
                    response.setMessage("Insert failed");
                    response.setCode("500 INTERNAL SERVER ERROR");
                }
    			
    		}else {
    			response.setMessage("Input list is null or empty");
                response.setCode("400 BAD REQUEST");
    		}
    	}catch (Exception e) {
    		e.printStackTrace();
    		response.setMessage("Exception occurred");
            response.setCode("500 INTERNAL SERVER ERROR");
    	}
    	return response;
    }
    
//UPDATE
    public EMSUpdateResponseDTO updateEmployeeDetails(EMSUpdateRequestDTO insertData) {
    	EMSUpdateResponseDTO response =new EMSUpdateResponseDTO();
    	List<EMSModel> saveEntities =  new ArrayList<>();
    	try {
    		Optional<EMSModel> dbResponse = emsRepository.findById(insertData.getId());
    		if(dbResponse.isPresent()) {
    			EMSModel entity = new EMSModel();
    			
    			if(insertData.getId()!=null && insertData.getRid()!=null) {
    			
    				entity.setId(dbResponse.get().getId());
    				entity.setRid(insertData.getRid());
    				entity.setName(dbResponse.get().getName());
    				entity.setParentName(dbResponse.get().getParentName());
    				entity.setStreamName(dbResponse.get().getStreamName());
    				entity.setDOB(dbResponse.get().getDOB());
    				entity.setPOY(dbResponse.get().getPOY());
    				entity.setMobileNumber(dbResponse.get().getMobileNumber());
    				entity.setMailID(dbResponse.get().getMailID());
    				entity.setAddress(dbResponse.get().getAddress());
    				entity.setStatus(dbResponse.get().getStatus());
    				
    				saveEntities.add(entity);
    				
    				
    			}else if(insertData.getId()!=null && insertData.getName()!=null) {
    				entity.setId(dbResponse.get().getId());
    				entity.setRid(dbResponse.get().getRid());
    				entity.setName(insertData.getName());
    				entity.setParentName(dbResponse.get().getParentName());
    				entity.setStreamName(dbResponse.get().getStreamName());
    				entity.setDOB(dbResponse.get().getDOB());
    				entity.setPOY(dbResponse.get().getPOY());
    				entity.setMobileNumber(dbResponse.get().getMobileNumber());
    				entity.setMailID(dbResponse.get().getMailID());
    				entity.setAddress(dbResponse.get().getAddress());
    				entity.setStatus(dbResponse.get().getStatus());
    				
    				saveEntities.add(entity);
    			}else if(insertData.getId()!=null && insertData.getParentName()!=null) {
    				entity.setId(dbResponse.get().getId());
    				entity.setRid(dbResponse.get().getRid());
    				entity.setName(dbResponse.get().getName());
    				entity.setParentName(insertData.getParentName());
    				entity.setStreamName(dbResponse.get().getStreamName());
    				entity.setDOB(dbResponse.get().getDOB());
    				entity.setPOY(dbResponse.get().getPOY());
    				entity.setMobileNumber(dbResponse.get().getMobileNumber());
    				entity.setMailID(dbResponse.get().getMailID());
    				entity.setAddress(dbResponse.get().getAddress());
    				entity.setStatus(dbResponse.get().getStatus());
    				
    				saveEntities.add(entity);
    			}else if(insertData.getId()!=null && insertData.getStreamName()!=null) {
    				entity.setId(dbResponse.get().getId());
    				entity.setRid(dbResponse.get().getRid());
    				entity.setName(dbResponse.get().getName());
    				entity.setParentName(dbResponse.ger);
    				entity.setStreamName(dbResponse.get().getStreamName());
    				entity.setDOB(dbResponse.get().getDOB());
    				entity.setPOY(dbResponse.get().getPOY());
    				entity.setMobileNumber(dbResponse.get().getMobileNumber());
    				entity.setMailID(dbResponse.get().getMailID());
    				entity.setAddress(dbResponse.get().getAddress());
    				entity.setStatus(dbResponse.get().getStatus());
    				
    				saveEntities.add(entity);
    			}else if(insertData.getId()!=null && insertData.getDOB()!=null) {
    				
    			}else if(insertData.getId()!=null && insertData.getPOY()!=null) {
    				
    			}else if(insertData.getId()!=null && insertData.getMobileNumber()!=null) {
    				
    			}else if(insertData.getId()!=null && insertData.getMailID()!=null) {
    				
    			}else if(insertData.getId()!=null && insertData.getAddress()!=null) {
    				
    			}else (insertData.getId()!=null && insertData.getStatus()!=null) {
    				
    			}
    			
    		}
    	}catch() {
    		
    	}
    }
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2038)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2243)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3278)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3055)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:540)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:132)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:94)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:91)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:158)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)

!ENTRY org.eclipse.jdt.ui 4 2 2025-06-10 23:50:24.496
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2038)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2243)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3278)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3055)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:540)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:132)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:94)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:91)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:158)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)

!ENTRY org.eclipse.jdt.ui 4 0 2025-06-10 23:50:24.498
!MESSAGE Error in JDT Core during reconcile
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2038)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2243)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3278)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3055)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:540)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:132)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:94)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:91)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:158)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)

!ENTRY org.eclipse.jdt.core 4 4 2025-06-10 23:50:24.556
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package com.example.EMSbackend.Service;

import java.util.ArrayList;
import java.util.List;
import java.util.Optional;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import com.example.EMSbackend.DTO.EMSGetAllDTO;
import com.example.EMSbackend.DTO.EMSInsertMultipleRequestDTO;
import com.example.EMSbackend.DTO.EMSInsertMultipleResponseDTO;
import com.example.EMSbackend.DTO.EMSInsertSingleRequestDTO;
import com.example.EMSbackend.DTO.EMSInsertSingleResponseDTO;
import com.example.EMSbackend.DTO.EMSUpdateRequestDTO;
import com.example.EMSbackend.DTO.EMSUpdateResponseDTO;
import com.example.EMSbackend.Model.EMSModel;
import com.example.EMSbackend.Repository.EMSRepository;

import lombok.extern.slf4j.Slf4j;

@Slf4j
@Service
public class EMSService {

	@Autowired
	private EMSRepository emsRepository;
	
	
//GET_ALL_EMPLOYEE_DETAILS
    public EMSGetAllDTO getEmployeeDetailsAll() {
    	EMSGetAllDTO response = new EMSGetAllDTO();
    
    	
    	//try { 	
    	List<EMSModel> modelDetails = (List<EMSModel>) emsRepository.findAll();
    	response.setEmployeeDetailsAll(modelDetails);
    	
    	/*if(modelDetails!=null) {
    		response.setEmployeeDetailsAll(modelDetails);
    	}
    	else {
    		System.out.println("Employee not found");
    		//log.info("Service response not found");
    	}
    	
    	}catch (Exception e) {
            System.out.println("Error while fetching employee list: " + e.getMessage());
            e.printStackTrace();
        }*/
    	    
    	return response;
    }
    
//INSERT_ALL_EMPLOYEE_DETAILS(SINGLE_DATA/NOT_LIST)
    public EMSInsertSingleResponseDTO insertEmployeeDetails(EMSInsertSingleRequestDTO requestData) {
    	EMSInsertSingleResponseDTO response = new EMSInsertSingleResponseDTO();
    	String message = "FAILURE";
    	List<EMSModel> entityList = new ArrayList<>();
  
    	try {
    	if (requestData != null) {
    		EMSModel entity = new EMSModel();
    		entity.setId(requestData.getId());
			entity.setRid(requestData.getRid());
			entity.setName(requestData.getName());
			entity.setParentName(requestData.getParentName());
			entity.setStreamName(requestData.getStreamName());
			entity.setDOB(requestData.getDOB());
			entity.setPOY(requestData.getPOY());
			entity.setMobileNumber(requestData.getMobileNumber());
			entity.setMailID(requestData.getMailID());
			entity.setAddress(requestData.getAddress());
			entity.setStatus(requestData.getStatus());
			 
			c
   
			List<EMSModel> savedEntities = emsRepository.saveAll(entityList);
			if (savedEntities != null && !savedEntities.isEmpty()) {
	            message = "SUCCESS";
	            response.setMessage(message);
	            response.setCode("200 OK");
	        } else {
	            response.setMessage("Insert failed");
	            response.setCode("500 INTERNAL SERVER ERROR");
	        }
    	}else {
            response.setMessage("Input list is null or empty");
            response.setCode("400 BAD REQUEST");
        }
    	}catch (Exception e) {
    		e.printStackTrace();
    		response.setMessage("Exception occurred");
            response.setCode("500 INTERNAL SERVER ERROR");
    	}
  
    	return response;
    	
    }
    
    
   
//INSERT_ALL_EMPLOYEE_DETAILS(MULTIPLE/LIST)
    
    public EMSInsertMultipleResponseDTO insertEmployeeDetailsAll(EMSInsertMultipleRequestDTO insertData) {
    	EMSInsertMultipleResponseDTO response = new EMSInsertMultipleResponseDTO();
    	String message = "FAILURE";
    	
    	try {
    		List<EMSModel> dtoList = insertData.getEmployeeDetailsRequestAll();
 
    		if (dtoList != null && !dtoList.isEmpty()) {
    			
    			List<EMSModel> entityList = new ArrayList<>();
    			
    			for (EMSModel dto : dtoList){
    				
    			EMSModel entity = new EMSModel();
    			 entity.setId(dto.getId());
    			 entity.setRid(dto.getRid());
    			 entity.setName(dto.getName());
    			 entity.setParentName(dto.getParentName());
    			 entity.setStreamName(dto.getStreamName());
    			 entity.setDOB(dto.getDOB());
    			 entity.setPOY(dto.getPOY());
    			 entity.setMobileNumber(dto.getMobileNumber());
    			 entity.setMailID(dto.getMailID());
    			 entity.setAddress(dto.getAddress());
    			 entity.setStatus(dto.getStatus());
    			 
    			 entityList.add(entity);
    			}
    			
    			List<EMSModel> savedEntities = emsRepository.saveAll(entityList);
                

                if (savedEntities != null && !savedEntities.isEmpty()) {
                    message = "SUCCESS";
                    response.setMessage(message);
                    response.setCode("200 OK");
                } else {
                    response.setMessage("Insert failed");
                    response.setCode("500 INTERNAL SERVER ERROR");
                }
    			
    		}else {
    			response.setMessage("Input list is null or empty");
                response.setCode("400 BAD REQUEST");
    		}
    	}catch (Exception e) {
    		e.printStackTrace();
    		response.setMessage("Exception occurred");
            response.setCode("500 INTERNAL SERVER ERROR");
    	}
    	return response;
    }
    
//UPDATE
    public EMSUpdateResponseDTO updateEmployeeDetails(EMSUpdateRequestDTO insertData) {
    	EMSUpdateResponseDTO response =new EMSUpdateResponseDTO();
    	List<EMSModel> saveEntities =  new ArrayList<>();
    	try {
    		Optional<EMSModel> dbResponse = emsRepository.findById(insertData.getId());
    		if(dbResponse.isPresent()) {
    			EMSModel entity = new EMSModel();
    			
    			if(insertData.getId()!=null && insertData.getRid()!=null) {
    			
    				entity.setId(dbResponse.get().getId());
    				entity.setRid(insertData.getRid());
    				entity.setName(dbResponse.get().getName());
    				entity.setParentName(dbResponse.get().getParentName());
    				entity.setStreamName(dbResponse.get().getStreamName());
    				entity.setDOB(dbResponse.get().getDOB());
    				entity.setPOY(dbResponse.get().getPOY());
    				entity.setMobileNumber(dbResponse.get().getMobileNumber());
    				entity.setMailID(dbResponse.get().getMailID());
    				entity.setAddress(dbResponse.get().getAddress());
    				entity.setStatus(dbResponse.get().getStatus());
    				
    				saveEntities.add(entity);
    				
    				
    			}else if(insertData.getId()!=null && insertData.getName()!=null) {
    				entity.setId(dbResponse.get().getId());
    				entity.setRid(dbResponse.get().getRid());
    				entity.setName(insertData.getName());
    				entity.setParentName(dbResponse.get().getParentName());
    				entity.setStreamName(dbResponse.get().getStreamName());
    				entity.setDOB(dbResponse.get().getDOB());
    				entity.setPOY(dbResponse.get().getPOY());
    				entity.setMobileNumber(dbResponse.get().getMobileNumber());
    				entity.setMailID(dbResponse.get().getMailID());
    				entity.setAddress(dbResponse.get().getAddress());
    				entity.setStatus(dbResponse.get().getStatus());
    				
    				saveEntities.add(entity);
    			}else if(insertData.getId()!=null && insertData.getParentName()!=null) {
    				entity.setId(dbResponse.get().getId());
    				entity.setRid(dbResponse.get().getRid());
    				entity.setName(dbResponse.get().getName());
    				entity.setParentName(insertData.getParentName());
    				entity.setStreamName(dbResponse.get().getStreamName());
    				entity.setDOB(dbResponse.get().getDOB());
    				entity.setPOY(dbResponse.get().getPOY());
    				entity.setMobileNumber(dbResponse.get().getMobileNumber());
    				entity.setMailID(dbResponse.get().getMailID());
    				entity.setAddress(dbResponse.get().getAddress());
    				entity.setStatus(dbResponse.get().getStatus());
    				
    				saveEntities.add(entity);
    			}else if(insertData.getId()!=null && insertData.getStreamName()!=null) {
    				entity.setId(dbResponse.get().getId());
    				entity.setRid(dbResponse.get().getRid());
    				entity.setName(dbResponse.get().getName());
    				entity.setParentName(dbResponse.ger);
    				entity.setStreamName(dbResponse.get().getStreamName());
    				entity.setDOB(dbResponse.get().getDOB());
    				entity.setPOY(dbResponse.get().getPOY());
    				entity.setMobileNumber(dbResponse.get().getMobileNumber());
    				entity.setMailID(dbResponse.get().getMailID());
    				entity.setAddress(dbResponse.get().getAddress());
    				entity.setStatus(dbResponse.get().getStatus());
    				
    				saveEntities.add(entity);
    			}else if(insertData.getId()!=null && insertData.getDOB()!=null) {
    				
    			}else if(insertData.getId()!=null && insertData.getPOY()!=null) {
    				
    			}else if(insertData.getId()!=null && insertData.getMobileNumber()!=null) {
    				
    			}else if(insertData.getId()!=null && insertData.getMailID()!=null) {
    				
    			}else if(insertData.getId()!=null && insertData.getAddress()!=null) {
    				
    			}else (insertData.getId()!=null && insertData.getStatus()!=null) {
    				
    			}
    			
    		}
    	}catch() {
    		
    	}
    }
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2038)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2243)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3278)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3055)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2025-06-10 23:50:24.559
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2038)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2243)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3278)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3055)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2025-06-10 23:50:24.563
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2038)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2243)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3278)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3055)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core 4 4 2025-06-10 23:50:26.512
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package com.example.EMSbackend.Service;

import java.util.ArrayList;
import java.util.List;
import java.util.Optional;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import com.example.EMSbackend.DTO.EMSGetAllDTO;
import com.example.EMSbackend.DTO.EMSInsertMultipleRequestDTO;
import com.example.EMSbackend.DTO.EMSInsertMultipleResponseDTO;
import com.example.EMSbackend.DTO.EMSInsertSingleRequestDTO;
import com.example.EMSbackend.DTO.EMSInsertSingleResponseDTO;
import com.example.EMSbackend.DTO.EMSUpdateRequestDTO;
import com.example.EMSbackend.DTO.EMSUpdateResponseDTO;
import com.example.EMSbackend.Model.EMSModel;
import com.example.EMSbackend.Repository.EMSRepository;

import lombok.extern.slf4j.Slf4j;

@Slf4j
@Service
public class EMSService {

	@Autowired
	private EMSRepository emsRepository;
	
	
//GET_ALL_EMPLOYEE_DETAILS
    public EMSGetAllDTO getEmployeeDetailsAll() {
    	EMSGetAllDTO response = new EMSGetAllDTO();
    
    	
    	//try { 	
    	List<EMSModel> modelDetails = (List<EMSModel>) emsRepository.findAll();
    	response.setEmployeeDetailsAll(modelDetails);
    	
    	/*if(modelDetails!=null) {
    		response.setEmployeeDetailsAll(modelDetails);
    	}
    	else {
    		System.out.println("Employee not found");
    		//log.info("Service response not found");
    	}
    	
    	}catch (Exception e) {
            System.out.println("Error while fetching employee list: " + e.getMessage());
            e.printStackTrace();
        }*/
    	    
    	return response;
    }
    
//INSERT_ALL_EMPLOYEE_DETAILS(SINGLE_DATA/NOT_LIST)
    public EMSInsertSingleResponseDTO insertEmployeeDetails(EMSInsertSingleRequestDTO requestData) {
    	EMSInsertSingleResponseDTO response = new EMSInsertSingleResponseDTO();
    	String message = "FAILURE";
    	List<EMSModel> entityList = new ArrayList<>();
  
    	try {
    	if (requestData != null) {
    		EMSModel entity = new EMSModel();
    		entity.setId(requestData.getId());
			entity.setRid(requestData.getRid());
			entity.setName(requestData.getName());
			entity.setParentName(requestData.getParentName());
			entity.setStreamName(requestData.getStreamName());
			entity.setDOB(requestData.getDOB());
			entity.setPOY(requestData.getPOY());
			entity.setMobileNumber(requestData.getMobileNumber());
			entity.setMailID(requestData.getMailID());
			entity.setAddress(requestData.getAddress());
			entity.setStatus(requestData.getStatus());
			 
			c
   
			List<EMSModel> savedEntities = emsRepository.saveAll(entityList);
			if (savedEntities != null && !savedEntities.isEmpty()) {
	            message = "SUCCESS";
	            response.setMessage(message);
	            response.setCode("200 OK");
	        } else {
	            response.setMessage("Insert failed");
	            response.setCode("500 INTERNAL SERVER ERROR");
	        }
    	}else {
            response.setMessage("Input list is null or empty");
            response.setCode("400 BAD REQUEST");
        }
    	}catch (Exception e) {
    		e.printStackTrace();
    		response.setMessage("Exception occurred");
            response.setCode("500 INTERNAL SERVER ERROR");
    	}
  
    	return response;
    	
    }
    
    
   
//INSERT_ALL_EMPLOYEE_DETAILS(MULTIPLE/LIST)
    
    public EMSInsertMultipleResponseDTO insertEmployeeDetailsAll(EMSInsertMultipleRequestDTO insertData) {
    	EMSInsertMultipleResponseDTO response = new EMSInsertMultipleResponseDTO();
    	String message = "FAILURE";
    	
    	try {
    		List<EMSModel> dtoList = insertData.getEmployeeDetailsRequestAll();
 
    		if (dtoList != null && !dtoList.isEmpty()) {
    			
    			List<EMSModel> entityList = new ArrayList<>();
    			
    			for (EMSModel dto : dtoList){
    				
    			EMSModel entity = new EMSModel();
    			 entity.setId(dto.getId());
    			 entity.setRid(dto.getRid());
    			 entity.setName(dto.getName());
    			 entity.setParentName(dto.getParentName());
    			 entity.setStreamName(dto.getStreamName());
    			 entity.setDOB(dto.getDOB());
    			 entity.setPOY(dto.getPOY());
    			 entity.setMobileNumber(dto.getMobileNumber());
    			 entity.setMailID(dto.getMailID());
    			 entity.setAddress(dto.getAddress());
    			 entity.setStatus(dto.getStatus());
    			 
    			 entityList.add(entity);
    			}
    			
    			List<EMSModel> savedEntities = emsRepository.saveAll(entityList);
                

                if (savedEntities != null && !savedEntities.isEmpty()) {
                    message = "SUCCESS";
                    response.setMessage(message);
                    response.setCode("200 OK");
                } else {
                    response.setMessage("Insert failed");
                    response.setCode("500 INTERNAL SERVER ERROR");
                }
    			
    		}else {
    			response.setMessage("Input list is null or empty");
                response.setCode("400 BAD REQUEST");
    		}
    	}catch (Exception e) {
    		e.printStackTrace();
    		response.setMessage("Exception occurred");
            response.setCode("500 INTERNAL SERVER ERROR");
    	}
    	return response;
    }
    
//UPDATE
    public EMSUpdateResponseDTO updateEmployeeDetails(EMSUpdateRequestDTO insertData) {
    	EMSUpdateResponseDTO response =new EMSUpdateResponseDTO();
    	List<EMSModel> saveEntities =  new ArrayList<>();
    	try {
    		Optional<EMSModel> dbResponse = emsRepository.findById(insertData.getId());
    		if(dbResponse.isPresent()) {
    			EMSModel entity = new EMSModel();
    			
    			if(insertData.getId()!=null && insertData.getRid()!=null) {
    			
    				entity.setId(dbResponse.get().getId());
    				entity.setRid(insertData.getRid());
    				entity.setName(dbResponse.get().getName());
    				entity.setParentName(dbResponse.get().getParentName());
    				entity.setStreamName(dbResponse.get().getStreamName());
    				entity.setDOB(dbResponse.get().getDOB());
    				entity.setPOY(dbResponse.get().getPOY());
    				entity.setMobileNumber(dbResponse.get().getMobileNumber());
    				entity.setMailID(dbResponse.get().getMailID());
    				entity.setAddress(dbResponse.get().getAddress());
    				entity.setStatus(dbResponse.get().getStatus());
    				
    				saveEntities.add(entity);
    				
    				
    			}else if(insertData.getId()!=null && insertData.getName()!=null) {
    				entity.setId(dbResponse.get().getId());
    				entity.setRid(dbResponse.get().getRid());
    				entity.setName(insertData.getName());
    				entity.setParentName(dbResponse.get().getParentName());
    				entity.setStreamName(dbResponse.get().getStreamName());
    				entity.setDOB(dbResponse.get().getDOB());
    				entity.setPOY(dbResponse.get().getPOY());
    				entity.setMobileNumber(dbResponse.get().getMobileNumber());
    				entity.setMailID(dbResponse.get().getMailID());
    				entity.setAddress(dbResponse.get().getAddress());
    				entity.setStatus(dbResponse.get().getStatus());
    				
    				saveEntities.add(entity);
    			}else if(insertData.getId()!=null && insertData.getParentName()!=null) {
    				entity.setId(dbResponse.get().getId());
    				entity.setRid(dbResponse.get().getRid());
    				entity.setName(dbResponse.get().getName());
    				entity.setParentName(insertData.getParentName());
    				entity.setStreamName(dbResponse.get().getStreamName());
    				entity.setDOB(dbResponse.get().getDOB());
    				entity.setPOY(dbResponse.get().getPOY());
    				entity.setMobileNumber(dbResponse.get().getMobileNumber());
    				entity.setMailID(dbResponse.get().getMailID());
    				entity.setAddress(dbResponse.get().getAddress());
    				entity.setStatus(dbResponse.get().getStatus());
    				
    				saveEntities.add(entity);
    			}else if(insertData.getId()!=null && insertData.getStreamName()!=null) {
    				entity.setId(dbResponse.get().getId());
    				entity.setRid(dbResponse.get().getRid());
    				entity.setName(dbResponse.get().getName());
    				entity.setParentName(dbResponse.get);
    				entity.setStreamName(dbResponse.get().getStreamName());
    				entity.setDOB(dbResponse.get().getDOB());
    				entity.setPOY(dbResponse.get().getPOY());
    				entity.setMobileNumber(dbResponse.get().getMobileNumber());
    				entity.setMailID(dbResponse.get().getMailID());
    				entity.setAddress(dbResponse.get().getAddress());
    				entity.setStatus(dbResponse.get().getStatus());
    				
    				saveEntities.add(entity);
    			}else if(insertData.getId()!=null && insertData.getDOB()!=null) {
    				
    			}else if(insertData.getId()!=null && insertData.getPOY()!=null) {
    				
    			}else if(insertData.getId()!=null && insertData.getMobileNumber()!=null) {
    				
    			}else if(insertData.getId()!=null && insertData.getMailID()!=null) {
    				
    			}else if(insertData.getId()!=null && insertData.getAddress()!=null) {
    				
    			}else (insertData.getId()!=null && insertData.getStatus()!=null) {
    				
    			}
    			
    		}
    	}catch() {
    		
    	}
    }
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2038)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2243)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3278)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3055)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:540)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:132)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:94)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:91)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:158)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)

!ENTRY org.eclipse.jdt.ui 4 2 2025-06-10 23:50:26.516
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2038)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2243)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3278)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3055)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:540)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:132)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:94)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:91)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:158)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)

!ENTRY org.eclipse.jdt.ui 4 0 2025-06-10 23:50:26.517
!MESSAGE Error in JDT Core during reconcile
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2038)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2243)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3278)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3055)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:540)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:132)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:94)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:91)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:158)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)

!ENTRY org.eclipse.jdt.core 4 4 2025-06-10 23:50:27.115
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package com.example.EMSbackend.Service;

import java.util.ArrayList;
import java.util.List;
import java.util.Optional;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import com.example.EMSbackend.DTO.EMSGetAllDTO;
import com.example.EMSbackend.DTO.EMSInsertMultipleRequestDTO;
import com.example.EMSbackend.DTO.EMSInsertMultipleResponseDTO;
import com.example.EMSbackend.DTO.EMSInsertSingleRequestDTO;
import com.example.EMSbackend.DTO.EMSInsertSingleResponseDTO;
import com.example.EMSbackend.DTO.EMSUpdateRequestDTO;
import com.example.EMSbackend.DTO.EMSUpdateResponseDTO;
import com.example.EMSbackend.Model.EMSModel;
import com.example.EMSbackend.Repository.EMSRepository;

import lombok.extern.slf4j.Slf4j;

@Slf4j
@Service
public class EMSService {

	@Autowired
	private EMSRepository emsRepository;
	
	
//GET_ALL_EMPLOYEE_DETAILS
    public EMSGetAllDTO getEmployeeDetailsAll() {
    	EMSGetAllDTO response = new EMSGetAllDTO();
    
    	
    	//try { 	
    	List<EMSModel> modelDetails = (List<EMSModel>) emsRepository.findAll();
    	response.setEmployeeDetailsAll(modelDetails);
    	
    	/*if(modelDetails!=null) {
    		response.setEmployeeDetailsAll(modelDetails);
    	}
    	else {
    		System.out.println("Employee not found");
    		//log.info("Service response not found");
    	}
    	
    	}catch (Exception e) {
            System.out.println("Error while fetching employee list: " + e.getMessage());
            e.printStackTrace();
        }*/
    	    
    	return response;
    }
    
//INSERT_ALL_EMPLOYEE_DETAILS(SINGLE_DATA/NOT_LIST)
    public EMSInsertSingleResponseDTO insertEmployeeDetails(EMSInsertSingleRequestDTO requestData) {
    	EMSInsertSingleResponseDTO response = new EMSInsertSingleResponseDTO();
    	String message = "FAILURE";
    	List<EMSModel> entityList = new ArrayList<>();
  
    	try {
    	if (requestData != null) {
    		EMSModel entity = new EMSModel();
    		entity.setId(requestData.getId());
			entity.setRid(requestData.getRid());
			entity.setName(requestData.getName());
			entity.setParentName(requestData.getParentName());
			entity.setStreamName(requestData.getStreamName());
			entity.setDOB(requestData.getDOB());
			entity.setPOY(requestData.getPOY());
			entity.setMobileNumber(requestData.getMobileNumber());
			entity.setMailID(requestData.getMailID());
			entity.setAddress(requestData.getAddress());
			entity.setStatus(requestData.getStatus());
			 
			c
   
			List<EMSModel> savedEntities = emsRepository.saveAll(entityList);
			if (savedEntities != null && !savedEntities.isEmpty()) {
	            message = "SUCCESS";
	            response.setMessage(message);
	            response.setCode("200 OK");
	        } else {
	            response.setMessage("Insert failed");
	            response.setCode("500 INTERNAL SERVER ERROR");
	        }
    	}else {
            response.setMessage("Input list is null or empty");
            response.setCode("400 BAD REQUEST");
        }
    	}catch (Exception e) {
    		e.printStackTrace();
    		response.setMessage("Exception occurred");
            response.setCode("500 INTERNAL SERVER ERROR");
    	}
  
    	return response;
    	
    }
    
    
   
//INSERT_ALL_EMPLOYEE_DETAILS(MULTIPLE/LIST)
    
    public EMSInsertMultipleResponseDTO insertEmployeeDetailsAll(EMSInsertMultipleRequestDTO insertData) {
    	EMSInsertMultipleResponseDTO response = new EMSInsertMultipleResponseDTO();
    	String message = "FAILURE";
    	
    	try {
    		List<EMSModel> dtoList = insertData.getEmployeeDetailsRequestAll();
 
    		if (dtoList != null && !dtoList.isEmpty()) {
    			
    			List<EMSModel> entityList = new ArrayList<>();
    			
    			for (EMSModel dto : dtoList){
    				
    			EMSModel entity = new EMSModel();
    			 entity.setId(dto.getId());
    			 entity.setRid(dto.getRid());
    			 entity.setName(dto.getName());
    			 entity.setParentName(dto.getParentName());
    			 entity.setStreamName(dto.getStreamName());
    			 entity.setDOB(dto.getDOB());
    			 entity.setPOY(dto.getPOY());
    			 entity.setMobileNumber(dto.getMobileNumber());
    			 entity.setMailID(dto.getMailID());
    			 entity.setAddress(dto.getAddress());
    			 entity.setStatus(dto.getStatus());
    			 
    			 entityList.add(entity);
    			}
    			
    			List<EMSModel> savedEntities = emsRepository.saveAll(entityList);
                

                if (savedEntities != null && !savedEntities.isEmpty()) {
                    message = "SUCCESS";
                    response.setMessage(message);
                    response.setCode("200 OK");
                } else {
                    response.setMessage("Insert failed");
                    response.setCode("500 INTERNAL SERVER ERROR");
                }
    			
    		}else {
    			response.setMessage("Input list is null or empty");
                response.setCode("400 BAD REQUEST");
    		}
    	}catch (Exception e) {
    		e.printStackTrace();
    		response.setMessage("Exception occurred");
            response.setCode("500 INTERNAL SERVER ERROR");
    	}
    	return response;
    }
    
//UPDATE
    public EMSUpdateResponseDTO updateEmployeeDetails(EMSUpdateRequestDTO insertData) {
    	EMSUpdateResponseDTO response =new EMSUpdateResponseDTO();
    	List<EMSModel> saveEntities =  new ArrayList<>();
    	try {
    		Optional<EMSModel> dbResponse = emsRepository.findById(insertData.getId());
    		if(dbResponse.isPresent()) {
    			EMSModel entity = new EMSModel();
    			
    			if(insertData.getId()!=null && insertData.getRid()!=null) {
    			
    				entity.setId(dbResponse.get().getId());
    				entity.setRid(insertData.getRid());
    				entity.setName(dbResponse.get().getName());
    				entity.setParentName(dbResponse.get().getParentName());
    				entity.setStreamName(dbResponse.get().getStreamName());
    				entity.setDOB(dbResponse.get().getDOB());
    				entity.setPOY(dbResponse.get().getPOY());
    				entity.setMobileNumber(dbResponse.get().getMobileNumber());
    				entity.setMailID(dbResponse.get().getMailID());
    				entity.setAddress(dbResponse.get().getAddress());
    				entity.setStatus(dbResponse.get().getStatus());
    				
    				saveEntities.add(entity);
    				
    				
    			}else if(insertData.getId()!=null && insertData.getName()!=null) {
    				entity.setId(dbResponse.get().getId());
    				entity.setRid(dbResponse.get().getRid());
    				entity.setName(insertData.getName());
    				entity.setParentName(dbResponse.get().getParentName());
    				entity.setStreamName(dbResponse.get().getStreamName());
    				entity.setDOB(dbResponse.get().getDOB());
    				entity.setPOY(dbResponse.get().getPOY());
    				entity.setMobileNumber(dbResponse.get().getMobileNumber());
    				entity.setMailID(dbResponse.get().getMailID());
    				entity.setAddress(dbResponse.get().getAddress());
    				entity.setStatus(dbResponse.get().getStatus());
    				
    				saveEntities.add(entity);
    			}else if(insertData.getId()!=null && insertData.getParentName()!=null) {
    				entity.setId(dbResponse.get().getId());
    				entity.setRid(dbResponse.get().getRid());
    				entity.setName(dbResponse.get().getName());
    				entity.setParentName(insertData.getParentName());
    				entity.setStreamName(dbResponse.get().getStreamName());
    				entity.setDOB(dbResponse.get().getDOB());
    				entity.setPOY(dbResponse.get().getPOY());
    				entity.setMobileNumber(dbResponse.get().getMobileNumber());
    				entity.setMailID(dbResponse.get().getMailID());
    				entity.setAddress(dbResponse.get().getAddress());
    				entity.setStatus(dbResponse.get().getStatus());
    				
    				saveEntities.add(entity);
    			}else if(insertData.getId()!=null && insertData.getStreamName()!=null) {
    				entity.setId(dbResponse.get().getId());
    				entity.setRid(dbResponse.get().getRid());
    				entity.setName(dbResponse.get().getName());
    				entity.setParentName(dbResponse.get.);
    				entity.setStreamName(dbResponse.get().getStreamName());
    				entity.setDOB(dbResponse.get().getDOB());
    				entity.setPOY(dbResponse.get().getPOY());
    				entity.setMobileNumber(dbResponse.get().getMobileNumber());
    				entity.setMailID(dbResponse.get().getMailID());
    				entity.setAddress(dbResponse.get().getAddress());
    				entity.setStatus(dbResponse.get().getStatus());
    				
    				saveEntities.add(entity);
    			}else if(insertData.getId()!=null && insertData.getDOB()!=null) {
    				
    			}else if(insertData.getId()!=null && insertData.getPOY()!=null) {
    				
    			}else if(insertData.getId()!=null && insertData.getMobileNumber()!=null) {
    				
    			}else if(insertData.getId()!=null && insertData.getMailID()!=null) {
    				
    			}else if(insertData.getId()!=null && insertData.getAddress()!=null) {
    				
    			}else (insertData.getId()!=null && insertData.getStatus()!=null) {
    				
    			}
    			
    		}
    	}catch() {
    		
    	}
    }
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2038)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2243)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3278)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3055)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:540)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:132)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:94)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:91)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:158)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)

!ENTRY org.eclipse.jdt.ui 4 2 2025-06-10 23:50:27.118
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2038)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2243)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3278)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3055)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:540)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:132)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:94)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:91)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:158)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)

!ENTRY org.eclipse.jdt.ui 4 0 2025-06-10 23:50:27.120
!MESSAGE Error in JDT Core during reconcile
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2038)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2243)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3278)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3055)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:540)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:132)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:94)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:91)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:158)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)

!ENTRY org.eclipse.jdt.core 4 4 2025-06-10 23:50:27.236
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package com.example.EMSbackend.Service;

import java.util.ArrayList;
import java.util.List;
import java.util.Optional;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import com.example.EMSbackend.DTO.EMSGetAllDTO;
import com.example.EMSbackend.DTO.EMSInsertMultipleRequestDTO;
import com.example.EMSbackend.DTO.EMSInsertMultipleResponseDTO;
import com.example.EMSbackend.DTO.EMSInsertSingleRequestDTO;
import com.example.EMSbackend.DTO.EMSInsertSingleResponseDTO;
import com.example.EMSbackend.DTO.EMSUpdateRequestDTO;
import com.example.EMSbackend.DTO.EMSUpdateResponseDTO;
import com.example.EMSbackend.Model.EMSModel;
import com.example.EMSbackend.Repository.EMSRepository;

import lombok.extern.slf4j.Slf4j;

@Slf4j
@Service
public class EMSService {

	@Autowired
	private EMSRepository emsRepository;
	
	
//GET_ALL_EMPLOYEE_DETAILS
    public EMSGetAllDTO getEmployeeDetailsAll() {
    	EMSGetAllDTO response = new EMSGetAllDTO();
    
    	
    	//try { 	
    	List<EMSModel> modelDetails = (List<EMSModel>) emsRepository.findAll();
    	response.setEmployeeDetailsAll(modelDetails);
    	
    	/*if(modelDetails!=null) {
    		response.setEmployeeDetailsAll(modelDetails);
    	}
    	else {
    		System.out.println("Employee not found");
    		//log.info("Service response not found");
    	}
    	
    	}catch (Exception e) {
            System.out.println("Error while fetching employee list: " + e.getMessage());
            e.printStackTrace();
        }*/
    	    
    	return response;
    }
    
//INSERT_ALL_EMPLOYEE_DETAILS(SINGLE_DATA/NOT_LIST)
    public EMSInsertSingleResponseDTO insertEmployeeDetails(EMSInsertSingleRequestDTO requestData) {
    	EMSInsertSingleResponseDTO response = new EMSInsertSingleResponseDTO();
    	String message = "FAILURE";
    	List<EMSModel> entityList = new ArrayList<>();
  
    	try {
    	if (requestData != null) {
    		EMSModel entity = new EMSModel();
    		entity.setId(requestData.getId());
			entity.setRid(requestData.getRid());
			entity.setName(requestData.getName());
			entity.setParentName(requestData.getParentName());
			entity.setStreamName(requestData.getStreamName());
			entity.setDOB(requestData.getDOB());
			entity.setPOY(requestData.getPOY());
			entity.setMobileNumber(requestData.getMobileNumber());
			entity.setMailID(requestData.getMailID());
			entity.setAddress(requestData.getAddress());
			entity.setStatus(requestData.getStatus());
			 
			c
   
			List<EMSModel> savedEntities = emsRepository.saveAll(entityList);
			if (savedEntities != null && !savedEntities.isEmpty()) {
	            message = "SUCCESS";
	            response.setMessage(message);
	            response.setCode("200 OK");
	        } else {
	            response.setMessage("Insert failed");
	            response.setCode("500 INTERNAL SERVER ERROR");
	        }
    	}else {
            response.setMessage("Input list is null or empty");
            response.setCode("400 BAD REQUEST");
        }
    	}catch (Exception e) {
    		e.printStackTrace();
    		response.setMessage("Exception occurred");
            response.setCode("500 INTERNAL SERVER ERROR");
    	}
  
    	return response;
    	
    }
    
    
   
//INSERT_ALL_EMPLOYEE_DETAILS(MULTIPLE/LIST)
    
    public EMSInsertMultipleResponseDTO insertEmployeeDetailsAll(EMSInsertMultipleRequestDTO insertData) {
    	EMSInsertMultipleResponseDTO response = new EMSInsertMultipleResponseDTO();
    	String message = "FAILURE";
    	
    	try {
    		List<EMSModel> dtoList = insertData.getEmployeeDetailsRequestAll();
 
    		if (dtoList != null && !dtoList.isEmpty()) {
    			
    			List<EMSModel> entityList = new ArrayList<>();
    			
    			for (EMSModel dto : dtoList){
    				
    			EMSModel entity = new EMSModel();
    			 entity.setId(dto.getId());
    			 entity.setRid(dto.getRid());
    			 entity.setName(dto.getName());
    			 entity.setParentName(dto.getParentName());
    			 entity.setStreamName(dto.getStreamName());
    			 entity.setDOB(dto.getDOB());
    			 entity.setPOY(dto.getPOY());
    			 entity.setMobileNumber(dto.getMobileNumber());
    			 entity.setMailID(dto.getMailID());
    			 entity.setAddress(dto.getAddress());
    			 entity.setStatus(dto.getStatus());
    			 
    			 entityList.add(entity);
    			}
    			
    			List<EMSModel> savedEntities = emsRepository.saveAll(entityList);
                

                if (savedEntities != null && !savedEntities.isEmpty()) {
                    message = "SUCCESS";
                    response.setMessage(message);
                    response.setCode("200 OK");
                } else {
                    response.setMessage("Insert failed");
                    response.setCode("500 INTERNAL SERVER ERROR");
                }
    			
    		}else {
    			response.setMessage("Input list is null or empty");
                response.setCode("400 BAD REQUEST");
    		}
    	}catch (Exception e) {
    		e.printStackTrace();
    		response.setMessage("Exception occurred");
            response.setCode("500 INTERNAL SERVER ERROR");
    	}
    	return response;
    }
    
//UPDATE
    public EMSUpdateResponseDTO updateEmployeeDetails(EMSUpdateRequestDTO insertData) {
    	EMSUpdateResponseDTO response =new EMSUpdateResponseDTO();
    	List<EMSModel> saveEntities =  new ArrayList<>();
    	try {
    		Optional<EMSModel> dbResponse = emsRepository.findById(insertData.getId());
    		if(dbResponse.isPresent()) {
    			EMSModel entity = new EMSModel();
    			
    			if(insertData.getId()!=null && insertData.getRid()!=null) {
    			
    				entity.setId(dbResponse.get().getId());
    				entity.setRid(insertData.getRid());
    				entity.setName(dbResponse.get().getName());
    				entity.setParentName(dbResponse.get().getParentName());
    				entity.setStreamName(dbResponse.get().getStreamName());
    				entity.setDOB(dbResponse.get().getDOB());
    				entity.setPOY(dbResponse.get().getPOY());
    				entity.setMobileNumber(dbResponse.get().getMobileNumber());
    				entity.setMailID(dbResponse.get().getMailID());
    				entity.setAddress(dbResponse.get().getAddress());
    				entity.setStatus(dbResponse.get().getStatus());
    				
    				saveEntities.add(entity);
    				
    				
    			}else if(insertData.getId()!=null && insertData.getName()!=null) {
    				entity.setId(dbResponse.get().getId());
    				entity.setRid(dbResponse.get().getRid());
    				entity.setName(insertData.getName());
    				entity.setParentName(dbResponse.get().getParentName());
    				entity.setStreamName(dbResponse.get().getStreamName());
    				entity.setDOB(dbResponse.get().getDOB());
    				entity.setPOY(dbResponse.get().getPOY());
    				entity.setMobileNumber(dbResponse.get().getMobileNumber());
    				entity.setMailID(dbResponse.get().getMailID());
    				entity.setAddress(dbResponse.get().getAddress());
    				entity.setStatus(dbResponse.get().getStatus());
    				
    				saveEntities.add(entity);
    			}else if(insertData.getId()!=null && insertData.getParentName()!=null) {
    				entity.setId(dbResponse.get().getId());
    				entity.setRid(dbResponse.get().getRid());
    				entity.setName(dbResponse.get().getName());
    				entity.setParentName(insertData.getParentName());
    				entity.setStreamName(dbResponse.get().getStreamName());
    				entity.setDOB(dbResponse.get().getDOB());
    				entity.setPOY(dbResponse.get().getPOY());
    				entity.setMobileNumber(dbResponse.get().getMobileNumber());
    				entity.setMailID(dbResponse.get().getMailID());
    				entity.setAddress(dbResponse.get().getAddress());
    				entity.setStatus(dbResponse.get().getStatus());
    				
    				saveEntities.add(entity);
    			}else if(insertData.getId()!=null && insertData.getStreamName()!=null) {
    				entity.setId(dbResponse.get().getId());
    				entity.setRid(dbResponse.get().getRid());
    				entity.setName(dbResponse.get().getName());
    				entity.setParentName(dbResponse.get.);
    				entity.setStreamName(dbResponse.get().getStreamName());
    				entity.setDOB(dbResponse.get().getDOB());
    				entity.setPOY(dbResponse.get().getPOY());
    				entity.setMobileNumber(dbResponse.get().getMobileNumber());
    				entity.setMailID(dbResponse.get().getMailID());
    				entity.setAddress(dbResponse.get().getAddress());
    				entity.setStatus(dbResponse.get().getStatus());
    				
    				saveEntities.add(entity);
    			}else if(insertData.getId()!=null && insertData.getDOB()!=null) {
    				
    			}else if(insertData.getId()!=null && insertData.getPOY()!=null) {
    				
    			}else if(insertData.getId()!=null && insertData.getMobileNumber()!=null) {
    				
    			}else if(insertData.getId()!=null && insertData.getMailID()!=null) {
    				
    			}else if(insertData.getId()!=null && insertData.getAddress()!=null) {
    				
    			}else (insertData.getId()!=null && insertData.getStatus()!=null) {
    				
    			}
    			
    		}
    	}catch() {
    		
    	}
    }
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2038)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2243)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3278)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3055)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2025-06-10 23:50:27.239
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2038)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2243)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3278)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3055)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2025-06-10 23:50:27.242
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2038)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2243)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3278)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3055)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core 4 4 2025-06-10 23:50:28.390
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package com.example.EMSbackend.Service;

import java.util.ArrayList;
import java.util.List;
import java.util.Optional;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import com.example.EMSbackend.DTO.EMSGetAllDTO;
import com.example.EMSbackend.DTO.EMSInsertMultipleRequestDTO;
import com.example.EMSbackend.DTO.EMSInsertMultipleResponseDTO;
import com.example.EMSbackend.DTO.EMSInsertSingleRequestDTO;
import com.example.EMSbackend.DTO.EMSInsertSingleResponseDTO;
import com.example.EMSbackend.DTO.EMSUpdateRequestDTO;
import com.example.EMSbackend.DTO.EMSUpdateResponseDTO;
import com.example.EMSbackend.Model.EMSModel;
import com.example.EMSbackend.Repository.EMSRepository;

import lombok.extern.slf4j.Slf4j;

@Slf4j
@Service
public class EMSService {

	@Autowired
	private EMSRepository emsRepository;
	
	
//GET_ALL_EMPLOYEE_DETAILS
    public EMSGetAllDTO getEmployeeDetailsAll() {
    	EMSGetAllDTO response = new EMSGetAllDTO();
    
    	
    	//try { 	
    	List<EMSModel> modelDetails = (List<EMSModel>) emsRepository.findAll();
    	response.setEmployeeDetailsAll(modelDetails);
    	
    	/*if(modelDetails!=null) {
    		response.setEmployeeDetailsAll(modelDetails);
    	}
    	else {
    		System.out.println("Employee not found");
    		//log.info("Service response not found");
    	}
    	
    	}catch (Exception e) {
            System.out.println("Error while fetching employee list: " + e.getMessage());
            e.printStackTrace();
        }*/
    	    
    	return response;
    }
    
//INSERT_ALL_EMPLOYEE_DETAILS(SINGLE_DATA/NOT_LIST)
    public EMSInsertSingleResponseDTO insertEmployeeDetails(EMSInsertSingleRequestDTO requestData) {
    	EMSInsertSingleResponseDTO response = new EMSInsertSingleResponseDTO();
    	String message = "FAILURE";
    	List<EMSModel> entityList = new ArrayList<>();
  
    	try {
    	if (requestData != null) {
    		EMSModel entity = new EMSModel();
    		entity.setId(requestData.getId());
			entity.setRid(requestData.getRid());
			entity.setName(requestData.getName());
			entity.setParentName(requestData.getParentName());
			entity.setStreamName(requestData.getStreamName());
			entity.setDOB(requestData.getDOB());
			entity.setPOY(requestData.getPOY());
			entity.setMobileNumber(requestData.getMobileNumber());
			entity.setMailID(requestData.getMailID());
			entity.setAddress(requestData.getAddress());
			entity.setStatus(requestData.getStatus());
			 
			c
   
			List<EMSModel> savedEntities = emsRepository.saveAll(entityList);
			if (savedEntities != null && !savedEntities.isEmpty()) {
	            message = "SUCCESS";
	            response.setMessage(message);
	            response.setCode("200 OK");
	        } else {
	            response.setMessage("Insert failed");
	            response.setCode("500 INTERNAL SERVER ERROR");
	        }
    	}else {
            response.setMessage("Input list is null or empty");
            response.setCode("400 BAD REQUEST");
        }
    	}catch (Exception e) {
    		e.printStackTrace();
    		response.setMessage("Exception occurred");
            response.setCode("500 INTERNAL SERVER ERROR");
    	}
  
    	return response;
    	
    }
    
    
   
//INSERT_ALL_EMPLOYEE_DETAILS(MULTIPLE/LIST)
    
    public EMSInsertMultipleResponseDTO insertEmployeeDetailsAll(EMSInsertMultipleRequestDTO insertData) {
    	EMSInsertMultipleResponseDTO response = new EMSInsertMultipleResponseDTO();
    	String message = "FAILURE";
    	
    	try {
    		List<EMSModel> dtoList = insertData.getEmployeeDetailsRequestAll();
 
    		if (dtoList != null && !dtoList.isEmpty()) {
    			
    			List<EMSModel> entityList = new ArrayList<>();
    			
    			for (EMSModel dto : dtoList){
    				
    			EMSModel entity = new EMSModel();
    			 entity.setId(dto.getId());
    			 entity.setRid(dto.getRid());
    			 entity.setName(dto.getName());
    			 entity.setParentName(dto.getParentName());
    			 entity.setStreamName(dto.getStreamName());
    			 entity.setDOB(dto.getDOB());
    			 entity.setPOY(dto.getPOY());
    			 entity.setMobileNumber(dto.getMobileNumber());
    			 entity.setMailID(dto.getMailID());
    			 entity.setAddress(dto.getAddress());
    			 entity.setStatus(dto.getStatus());
    			 
    			 entityList.add(entity);
    			}
    			
    			List<EMSModel> savedEntities = emsRepository.saveAll(entityList);
                

                if (savedEntities != null && !savedEntities.isEmpty()) {
                    message = "SUCCESS";
                    response.setMessage(message);
                    response.setCode("200 OK");
                } else {
                    response.setMessage("Insert failed");
                    response.setCode("500 INTERNAL SERVER ERROR");
                }
    			
    		}else {
    			response.setMessage("Input list is null or empty");
                response.setCode("400 BAD REQUEST");
    		}
    	}catch (Exception e) {
    		e.printStackTrace();
    		response.setMessage("Exception occurred");
            response.setCode("500 INTERNAL SERVER ERROR");
    	}
    	return response;
    }
    
//UPDATE
    public EMSUpdateResponseDTO updateEmployeeDetails(EMSUpdateRequestDTO insertData) {
    	EMSUpdateResponseDTO response =new EMSUpdateResponseDTO();
    	List<EMSModel> saveEntities =  new ArrayList<>();
    	try {
    		Optional<EMSModel> dbResponse = emsRepository.findById(insertData.getId());
    		if(dbResponse.isPresent()) {
    			EMSModel entity = new EMSModel();
    			
    			if(insertData.getId()!=null && insertData.getRid()!=null) {
    			
    				entity.setId(dbResponse.get().getId());
    				entity.setRid(insertData.getRid());
    				entity.setName(dbResponse.get().getName());
    				entity.setParentName(dbResponse.get().getParentName());
    				entity.setStreamName(dbResponse.get().getStreamName());
    				entity.setDOB(dbResponse.get().getDOB());
    				entity.setPOY(dbResponse.get().getPOY());
    				entity.setMobileNumber(dbResponse.get().getMobileNumber());
    				entity.setMailID(dbResponse.get().getMailID());
    				entity.setAddress(dbResponse.get().getAddress());
    				entity.setStatus(dbResponse.get().getStatus());
    				
    				saveEntities.add(entity);
    				
    				
    			}else if(insertData.getId()!=null && insertData.getName()!=null) {
    				entity.setId(dbResponse.get().getId());
    				entity.setRid(dbResponse.get().getRid());
    				entity.setName(insertData.getName());
    				entity.setParentName(dbResponse.get().getParentName());
    				entity.setStreamName(dbResponse.get().getStreamName());
    				entity.setDOB(dbResponse.get().getDOB());
    				entity.setPOY(dbResponse.get().getPOY());
    				entity.setMobileNumber(dbResponse.get().getMobileNumber());
    				entity.setMailID(dbResponse.get().getMailID());
    				entity.setAddress(dbResponse.get().getAddress());
    				entity.setStatus(dbResponse.get().getStatus());
    				
    				saveEntities.add(entity);
    			}else if(insertData.getId()!=null && insertData.getParentName()!=null) {
    				entity.setId(dbResponse.get().getId());
    				entity.setRid(dbResponse.get().getRid());
    				entity.setName(dbResponse.get().getName());
    				entity.setParentName(insertData.getParentName());
    				entity.setStreamName(dbResponse.get().getStreamName());
    				entity.setDOB(dbResponse.get().getDOB());
    				entity.setPOY(dbResponse.get().getPOY());
    				entity.setMobileNumber(dbResponse.get().getMobileNumber());
    				entity.setMailID(dbResponse.get().getMailID());
    				entity.setAddress(dbResponse.get().getAddress());
    				entity.setStatus(dbResponse.get().getStatus());
    				
    				saveEntities.add(entity);
    			}else if(insertData.getId()!=null && insertData.getStreamName()!=null) {
    				entity.setId(dbResponse.get().getId());
    				entity.setRid(dbResponse.get().getRid());
    				entity.setName(dbResponse.get().getName());
    				entity.setParentName(dbResponse.get.get);
    				entity.setStreamName(dbResponse.get().getStreamName());
    				entity.setDOB(dbResponse.get().getDOB());
    				entity.setPOY(dbResponse.get().getPOY());
    				entity.setMobileNumber(dbResponse.get().getMobileNumber());
    				entity.setMailID(dbResponse.get().getMailID());
    				entity.setAddress(dbResponse.get().getAddress());
    				entity.setStatus(dbResponse.get().getStatus());
    				
    				saveEntities.add(entity);
    			}else if(insertData.getId()!=null && insertData.getDOB()!=null) {
    				
    			}else if(insertData.getId()!=null && insertData.getPOY()!=null) {
    				
    			}else if(insertData.getId()!=null && insertData.getMobileNumber()!=null) {
    				
    			}else if(insertData.getId()!=null && insertData.getMailID()!=null) {
    				
    			}else if(insertData.getId()!=null && insertData.getAddress()!=null) {
    				
    			}else (insertData.getId()!=null && insertData.getStatus()!=null) {
    				
    			}
    			
    		}
    	}catch() {
    		
    	}
    }
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2038)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2243)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3278)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3055)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:540)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:132)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:94)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:91)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:158)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)

!ENTRY org.eclipse.jdt.ui 4 2 2025-06-10 23:50:28.395
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2038)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2243)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3278)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3055)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:540)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:132)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:94)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:91)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:158)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)

!ENTRY org.eclipse.jdt.ui 4 0 2025-06-10 23:50:28.398
!MESSAGE Error in JDT Core during reconcile
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2038)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2243)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3278)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3055)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:540)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:132)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:94)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:91)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:158)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)

!ENTRY org.eclipse.jdt.core 4 4 2025-06-10 23:50:28.494
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package com.example.EMSbackend.Service;

import java.util.ArrayList;
import java.util.List;
import java.util.Optional;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import com.example.EMSbackend.DTO.EMSGetAllDTO;
import com.example.EMSbackend.DTO.EMSInsertMultipleRequestDTO;
import com.example.EMSbackend.DTO.EMSInsertMultipleResponseDTO;
import com.example.EMSbackend.DTO.EMSInsertSingleRequestDTO;
import com.example.EMSbackend.DTO.EMSInsertSingleResponseDTO;
import com.example.EMSbackend.DTO.EMSUpdateRequestDTO;
import com.example.EMSbackend.DTO.EMSUpdateResponseDTO;
import com.example.EMSbackend.Model.EMSModel;
import com.example.EMSbackend.Repository.EMSRepository;

import lombok.extern.slf4j.Slf4j;

@Slf4j
@Service
public class EMSService {

	@Autowired
	private EMSRepository emsRepository;
	
	
//GET_ALL_EMPLOYEE_DETAILS
    public EMSGetAllDTO getEmployeeDetailsAll() {
    	EMSGetAllDTO response = new EMSGetAllDTO();
    
    	
    	//try { 	
    	List<EMSModel> modelDetails = (List<EMSModel>) emsRepository.findAll();
    	response.setEmployeeDetailsAll(modelDetails);
    	
    	/*if(modelDetails!=null) {
    		response.setEmployeeDetailsAll(modelDetails);
    	}
    	else {
    		System.out.println("Employee not found");
    		//log.info("Service response not found");
    	}
    	
    	}catch (Exception e) {
            System.out.println("Error while fetching employee list: " + e.getMessage());
            e.printStackTrace();
        }*/
    	    
    	return response;
    }
    
//INSERT_ALL_EMPLOYEE_DETAILS(SINGLE_DATA/NOT_LIST)
    public EMSInsertSingleResponseDTO insertEmployeeDetails(EMSInsertSingleRequestDTO requestData) {
    	EMSInsertSingleResponseDTO response = new EMSInsertSingleResponseDTO();
    	String message = "FAILURE";
    	List<EMSModel> entityList = new ArrayList<>();
  
    	try {
    	if (requestData != null) {
    		EMSModel entity = new EMSModel();
    		entity.setId(requestData.getId());
			entity.setRid(requestData.getRid());
			entity.setName(requestData.getName());
			entity.setParentName(requestData.getParentName());
			entity.setStreamName(requestData.getStreamName());
			entity.setDOB(requestData.getDOB());
			entity.setPOY(requestData.getPOY());
			entity.setMobileNumber(requestData.getMobileNumber());
			entity.setMailID(requestData.getMailID());
			entity.setAddress(requestData.getAddress());
			entity.setStatus(requestData.getStatus());
			 
			c
   
			List<EMSModel> savedEntities = emsRepository.saveAll(entityList);
			if (savedEntities != null && !savedEntities.isEmpty()) {
	            message = "SUCCESS";
	            response.setMessage(message);
	            response.setCode("200 OK");
	        } else {
	            response.setMessage("Insert failed");
	            response.setCode("500 INTERNAL SERVER ERROR");
	        }
    	}else {
            response.setMessage("Input list is null or empty");
            response.setCode("400 BAD REQUEST");
        }
    	}catch (Exception e) {
    		e.printStackTrace();
    		response.setMessage("Exception occurred");
            response.setCode("500 INTERNAL SERVER ERROR");
    	}
  
    	return response;
    	
    }
    
    
   
//INSERT_ALL_EMPLOYEE_DETAILS(MULTIPLE/LIST)
    
    public EMSInsertMultipleResponseDTO insertEmployeeDetailsAll(EMSInsertMultipleRequestDTO insertData) {
    	EMSInsertMultipleResponseDTO response = new EMSInsertMultipleResponseDTO();
    	String message = "FAILURE";
    	
    	try {
    		List<EMSModel> dtoList = insertData.getEmployeeDetailsRequestAll();
 
    		if (dtoList != null && !dtoList.isEmpty()) {
    			
    			List<EMSModel> entityList = new ArrayList<>();
    			
    			for (EMSModel dto : dtoList){
    				
    			EMSModel entity = new EMSModel();
    			 entity.setId(dto.getId());
    			 entity.setRid(dto.getRid());
    			 entity.setName(dto.getName());
    			 entity.setParentName(dto.getParentName());
    			 entity.setStreamName(dto.getStreamName());
    			 entity.setDOB(dto.getDOB());
    			 entity.setPOY(dto.getPOY());
    			 entity.setMobileNumber(dto.getMobileNumber());
    			 entity.setMailID(dto.getMailID());
    			 entity.setAddress(dto.getAddress());
    			 entity.setStatus(dto.getStatus());
    			 
    			 entityList.add(entity);
    			}
    			
    			List<EMSModel> savedEntities = emsRepository.saveAll(entityList);
                

                if (savedEntities != null && !savedEntities.isEmpty()) {
                    message = "SUCCESS";
                    response.setMessage(message);
                    response.setCode("200 OK");
                } else {
                    response.setMessage("Insert failed");
                    response.setCode("500 INTERNAL SERVER ERROR");
                }
    			
    		}else {
    			response.setMessage("Input list is null or empty");
                response.setCode("400 BAD REQUEST");
    		}
    	}catch (Exception e) {
    		e.printStackTrace();
    		response.setMessage("Exception occurred");
            response.setCode("500 INTERNAL SERVER ERROR");
    	}
    	return response;
    }
    
//UPDATE
    public EMSUpdateResponseDTO updateEmployeeDetails(EMSUpdateRequestDTO insertData) {
    	EMSUpdateResponseDTO response =new EMSUpdateResponseDTO();
    	List<EMSModel> saveEntities =  new ArrayList<>();
    	try {
    		Optional<EMSModel> dbResponse = emsRepository.findById(insertData.getId());
    		if(dbResponse.isPresent()) {
    			EMSModel entity = new EMSModel();
    			
    			if(insertData.getId()!=null && insertData.getRid()!=null) {
    			
    				entity.setId(dbResponse.get().getId());
    				entity.setRid(insertData.getRid());
    				entity.setName(dbResponse.get().getName());
    				entity.setParentName(dbResponse.get().getParentName());
    				entity.setStreamName(dbResponse.get().getStreamName());
    				entity.setDOB(dbResponse.get().getDOB());
    				entity.setPOY(dbResponse.get().getPOY());
    				entity.setMobileNumber(dbResponse.get().getMobileNumber());
    				entity.setMailID(dbResponse.get().getMailID());
    				entity.setAddress(dbResponse.get().getAddress());
    				entity.setStatus(dbResponse.get().getStatus());
    				
    				saveEntities.add(entity);
    				
    				
    			}else if(insertData.getId()!=null && insertData.getName()!=null) {
    				entity.setId(dbResponse.get().getId());
    				entity.setRid(dbResponse.get().getRid());
    				entity.setName(insertData.getName());
    				entity.setParentName(dbResponse.get().getParentName());
    				entity.setStreamName(dbResponse.get().getStreamName());
    				entity.setDOB(dbResponse.get().getDOB());
    				entity.setPOY(dbResponse.get().getPOY());
    				entity.setMobileNumber(dbResponse.get().getMobileNumber());
    				entity.setMailID(dbResponse.get().getMailID());
    				entity.setAddress(dbResponse.get().getAddress());
    				entity.setStatus(dbResponse.get().getStatus());
    				
    				saveEntities.add(entity);
    			}else if(insertData.getId()!=null && insertData.getParentName()!=null) {
    				entity.setId(dbResponse.get().getId());
    				entity.setRid(dbResponse.get().getRid());
    				entity.setName(dbResponse.get().getName());
    				entity.setParentName(insertData.getParentName());
    				entity.setStreamName(dbResponse.get().getStreamName());
    				entity.setDOB(dbResponse.get().getDOB());
    				entity.setPOY(dbResponse.get().getPOY());
    				entity.setMobileNumber(dbResponse.get().getMobileNumber());
    				entity.setMailID(dbResponse.get().getMailID());
    				entity.setAddress(dbResponse.get().getAddress());
    				entity.setStatus(dbResponse.get().getStatus());
    				
    				saveEntities.add(entity);
    			}else if(insertData.getId()!=null && insertData.getStreamName()!=null) {
    				entity.setId(dbResponse.get().getId());
    				entity.setRid(dbResponse.get().getRid());
    				entity.setName(dbResponse.get().getName());
    				entity.setParentName(dbResponse.get.ge);
    				entity.setStreamName(dbResponse.get().getStreamName());
    				entity.setDOB(dbResponse.get().getDOB());
    				entity.setPOY(dbResponse.get().getPOY());
    				entity.setMobileNumber(dbResponse.get().getMobileNumber());
    				entity.setMailID(dbResponse.get().getMailID());
    				entity.setAddress(dbResponse.get().getAddress());
    				entity.setStatus(dbResponse.get().getStatus());
    				
    				saveEntities.add(entity);
    			}else if(insertData.getId()!=null && insertData.getDOB()!=null) {
    				
    			}else if(insertData.getId()!=null && insertData.getPOY()!=null) {
    				
    			}else if(insertData.getId()!=null && insertData.getMobileNumber()!=null) {
    				
    			}else if(insertData.getId()!=null && insertData.getMailID()!=null) {
    				
    			}else if(insertData.getId()!=null && insertData.getAddress()!=null) {
    				
    			}else (insertData.getId()!=null && insertData.getStatus()!=null) {
    				
    			}
    			
    		}
    	}catch() {
    		
    	}
    }
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2038)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2243)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3278)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3055)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:540)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:132)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:94)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:91)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:158)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)

!ENTRY org.eclipse.jdt.ui 4 2 2025-06-10 23:50:28.497
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2038)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2243)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3278)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3055)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:540)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:132)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:94)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:91)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:158)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)

!ENTRY org.eclipse.jdt.ui 4 0 2025-06-10 23:50:28.500
!MESSAGE Error in JDT Core during reconcile
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2038)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2243)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3278)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3055)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:540)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:132)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:94)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:91)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:158)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)

!ENTRY org.eclipse.jdt.core 4 4 2025-06-10 23:50:28.536
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package com.example.EMSbackend.Service;

import java.util.ArrayList;
import java.util.List;
import java.util.Optional;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import com.example.EMSbackend.DTO.EMSGetAllDTO;
import com.example.EMSbackend.DTO.EMSInsertMultipleRequestDTO;
import com.example.EMSbackend.DTO.EMSInsertMultipleResponseDTO;
import com.example.EMSbackend.DTO.EMSInsertSingleRequestDTO;
import com.example.EMSbackend.DTO.EMSInsertSingleResponseDTO;
import com.example.EMSbackend.DTO.EMSUpdateRequestDTO;
import com.example.EMSbackend.DTO.EMSUpdateResponseDTO;
import com.example.EMSbackend.Model.EMSModel;
import com.example.EMSbackend.Repository.EMSRepository;

import lombok.extern.slf4j.Slf4j;

@Slf4j
@Service
public class EMSService {

	@Autowired
	private EMSRepository emsRepository;
	
	
//GET_ALL_EMPLOYEE_DETAILS
    public EMSGetAllDTO getEmployeeDetailsAll() {
    	EMSGetAllDTO response = new EMSGetAllDTO();
    
    	
    	//try { 	
    	List<EMSModel> modelDetails = (List<EMSModel>) emsRepository.findAll();
    	response.setEmployeeDetailsAll(modelDetails);
    	
    	/*if(modelDetails!=null) {
    		response.setEmployeeDetailsAll(modelDetails);
    	}
    	else {
    		System.out.println("Employee not found");
    		//log.info("Service response not found");
    	}
    	
    	}catch (Exception e) {
            System.out.println("Error while fetching employee list: " + e.getMessage());
            e.printStackTrace();
        }*/
    	    
    	return response;
    }
    
//INSERT_ALL_EMPLOYEE_DETAILS(SINGLE_DATA/NOT_LIST)
    public EMSInsertSingleResponseDTO insertEmployeeDetails(EMSInsertSingleRequestDTO requestData) {
    	EMSInsertSingleResponseDTO response = new EMSInsertSingleResponseDTO();
    	String message = "FAILURE";
    	List<EMSModel> entityList = new ArrayList<>();
  
    	try {
    	if (requestData != null) {
    		EMSModel entity = new EMSModel();
    		entity.setId(requestData.getId());
			entity.setRid(requestData.getRid());
			entity.setName(requestData.getName());
			entity.setParentName(requestData.getParentName());
			entity.setStreamName(requestData.getStreamName());
			entity.setDOB(requestData.getDOB());
			entity.setPOY(requestData.getPOY());
			entity.setMobileNumber(requestData.getMobileNumber());
			entity.setMailID(requestData.getMailID());
			entity.setAddress(requestData.getAddress());
			entity.setStatus(requestData.getStatus());
			 
			c
   
			List<EMSModel> savedEntities = emsRepository.saveAll(entityList);
			if (savedEntities != null && !savedEntities.isEmpty()) {
	            message = "SUCCESS";
	            response.setMessage(message);
	            response.setCode("200 OK");
	        } else {
	            response.setMessage("Insert failed");
	            response.setCode("500 INTERNAL SERVER ERROR");
	        }
    	}else {
            response.setMessage("Input list is null or empty");
            response.setCode("400 BAD REQUEST");
        }
    	}catch (Exception e) {
    		e.printStackTrace();
    		response.setMessage("Exception occurred");
            response.setCode("500 INTERNAL SERVER ERROR");
    	}
  
    	return response;
    	
    }
    
    
   
//INSERT_ALL_EMPLOYEE_DETAILS(MULTIPLE/LIST)
    
    public EMSInsertMultipleResponseDTO insertEmployeeDetailsAll(EMSInsertMultipleRequestDTO insertData) {
    	EMSInsertMultipleResponseDTO response = new EMSInsertMultipleResponseDTO();
    	String message = "FAILURE";
    	
    	try {
    		List<EMSModel> dtoList = insertData.getEmployeeDetailsRequestAll();
 
    		if (dtoList != null && !dtoList.isEmpty()) {
    			
    			List<EMSModel> entityList = new ArrayList<>();
    			
    			for (EMSModel dto : dtoList){
    				
    			EMSModel entity = new EMSModel();
    			 entity.setId(dto.getId());
    			 entity.setRid(dto.getRid());
    			 entity.setName(dto.getName());
    			 entity.setParentName(dto.getParentName());
    			 entity.setStreamName(dto.getStreamName());
    			 entity.setDOB(dto.getDOB());
    			 entity.setPOY(dto.getPOY());
    			 entity.setMobileNumber(dto.getMobileNumber());
    			 entity.setMailID(dto.getMailID());
    			 entity.setAddress(dto.getAddress());
    			 entity.setStatus(dto.getStatus());
    			 
    			 entityList.add(entity);
    			}
    			
    			List<EMSModel> savedEntities = emsRepository.saveAll(entityList);
                

                if (savedEntities != null && !savedEntities.isEmpty()) {
                    message = "SUCCESS";
                    response.setMessage(message);
                    response.setCode("200 OK");
                } else {
                    response.setMessage("Insert failed");
                    response.setCode("500 INTERNAL SERVER ERROR");
                }
    			
    		}else {
    			response.setMessage("Input list is null or empty");
                response.setCode("400 BAD REQUEST");
    		}
    	}catch (Exception e) {
    		e.printStackTrace();
    		response.setMessage("Exception occurred");
            response.setCode("500 INTERNAL SERVER ERROR");
    	}
    	return response;
    }
    
//UPDATE
    public EMSUpdateResponseDTO updateEmployeeDetails(EMSUpdateRequestDTO insertData) {
    	EMSUpdateResponseDTO response =new EMSUpdateResponseDTO();
    	List<EMSModel> saveEntities =  new ArrayList<>();
    	try {
    		Optional<EMSModel> dbResponse = emsRepository.findById(insertData.getId());
    		if(dbResponse.isPresent()) {
    			EMSModel entity = new EMSModel();
    			
    			if(insertData.getId()!=null && insertData.getRid()!=null) {
    			
    				entity.setId(dbResponse.get().getId());
    				entity.setRid(insertData.getRid());
    				entity.setName(dbResponse.get().getName());
    				entity.setParentName(dbResponse.get().getParentName());
    				entity.setStreamName(dbResponse.get().getStreamName());
    				entity.setDOB(dbResponse.get().getDOB());
    				entity.setPOY(dbResponse.get().getPOY());
    				entity.setMobileNumber(dbResponse.get().getMobileNumber());
    				entity.setMailID(dbResponse.get().getMailID());
    				entity.setAddress(dbResponse.get().getAddress());
    				entity.setStatus(dbResponse.get().getStatus());
    				
    				saveEntities.add(entity);
    				
    				
    			}else if(insertData.getId()!=null && insertData.getName()!=null) {
    				entity.setId(dbResponse.get().getId());
    				entity.setRid(dbResponse.get().getRid());
    				entity.setName(insertData.getName());
    				entity.setParentName(dbResponse.get().getParentName());
    				entity.setStreamName(dbResponse.get().getStreamName());
    				entity.setDOB(dbResponse.get().getDOB());
    				entity.setPOY(dbResponse.get().getPOY());
    				entity.setMobileNumber(dbResponse.get().getMobileNumber());
    				entity.setMailID(dbResponse.get().getMailID());
    				entity.setAddress(dbResponse.get().getAddress());
    				entity.setStatus(dbResponse.get().getStatus());
    				
    				saveEntities.add(entity);
    			}else if(insertData.getId()!=null && insertData.getParentName()!=null) {
    				entity.setId(dbResponse.get().getId());
    				entity.setRid(dbResponse.get().getRid());
    				entity.setName(dbResponse.get().getName());
    				entity.setParentName(insertData.getParentName());
    				entity.setStreamName(dbResponse.get().getStreamName());
    				entity.setDOB(dbResponse.get().getDOB());
    				entity.setPOY(dbResponse.get().getPOY());
    				entity.setMobileNumber(dbResponse.get().getMobileNumber());
    				entity.setMailID(dbResponse.get().getMailID());
    				entity.setAddress(dbResponse.get().getAddress());
    				entity.setStatus(dbResponse.get().getStatus());
    				
    				saveEntities.add(entity);
    			}else if(insertData.getId()!=null && insertData.getStreamName()!=null) {
    				entity.setId(dbResponse.get().getId());
    				entity.setRid(dbResponse.get().getRid());
    				entity.setName(dbResponse.get().getName());
    				entity.setParentName(dbResponse.get.ge);
    				entity.setStreamName(dbResponse.get().getStreamName());
    				entity.setDOB(dbResponse.get().getDOB());
    				entity.setPOY(dbResponse.get().getPOY());
    				entity.setMobileNumber(dbResponse.get().getMobileNumber());
    				entity.setMailID(dbResponse.get().getMailID());
    				entity.setAddress(dbResponse.get().getAddress());
    				entity.setStatus(dbResponse.get().getStatus());
    				
    				saveEntities.add(entity);
    			}else if(insertData.getId()!=null && insertData.getDOB()!=null) {
    				
    			}else if(insertData.getId()!=null && insertData.getPOY()!=null) {
    				
    			}else if(insertData.getId()!=null && insertData.getMobileNumber()!=null) {
    				
    			}else if(insertData.getId()!=null && insertData.getMailID()!=null) {
    				
    			}else if(insertData.getId()!=null && insertData.getAddress()!=null) {
    				
    			}else (insertData.getId()!=null && insertData.getStatus()!=null) {
    				
    			}
    			
    		}
    	}catch() {
    		
    	}
    }
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2038)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2243)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3278)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3055)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:189)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2025-06-10 23:50:28.538
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2038)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2243)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3278)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3055)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:189)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2025-06-10 23:50:28.541
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2038)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2243)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3278)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3055)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:189)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core 4 4 2025-06-10 23:50:29.969
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package com.example.EMSbackend.Service;

import java.util.ArrayList;
import java.util.List;
import java.util.Optional;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import com.example.EMSbackend.DTO.EMSGetAllDTO;
import com.example.EMSbackend.DTO.EMSInsertMultipleRequestDTO;
import com.example.EMSbackend.DTO.EMSInsertMultipleResponseDTO;
import com.example.EMSbackend.DTO.EMSInsertSingleRequestDTO;
import com.example.EMSbackend.DTO.EMSInsertSingleResponseDTO;
import com.example.EMSbackend.DTO.EMSUpdateRequestDTO;
import com.example.EMSbackend.DTO.EMSUpdateResponseDTO;
import com.example.EMSbackend.Model.EMSModel;
import com.example.EMSbackend.Repository.EMSRepository;

import lombok.extern.slf4j.Slf4j;

@Slf4j
@Service
public class EMSService {

	@Autowired
	private EMSRepository emsRepository;
	
	
//GET_ALL_EMPLOYEE_DETAILS
    public EMSGetAllDTO getEmployeeDetailsAll() {
    	EMSGetAllDTO response = new EMSGetAllDTO();
    
    	
    	//try { 	
    	List<EMSModel> modelDetails = (List<EMSModel>) emsRepository.findAll();
    	response.setEmployeeDetailsAll(modelDetails);
    	
    	/*if(modelDetails!=null) {
    		response.setEmployeeDetailsAll(modelDetails);
    	}
    	else {
    		System.out.println("Employee not found");
    		//log.info("Service response not found");
    	}
    	
    	}catch (Exception e) {
            System.out.println("Error while fetching employee list: " + e.getMessage());
            e.printStackTrace();
        }*/
    	    
    	return response;
    }
    
//INSERT_ALL_EMPLOYEE_DETAILS(SINGLE_DATA/NOT_LIST)
    public EMSInsertSingleResponseDTO insertEmployeeDetails(EMSInsertSingleRequestDTO requestData) {
    	EMSInsertSingleResponseDTO response = new EMSInsertSingleResponseDTO();
    	String message = "FAILURE";
    	List<EMSModel> entityList = new ArrayList<>();
  
    	try {
    	if (requestData != null) {
    		EMSModel entity = new EMSModel();
    		entity.setId(requestData.getId());
			entity.setRid(requestData.getRid());
			entity.setName(requestData.getName());
			entity.setParentName(requestData.getParentName());
			entity.setStreamName(requestData.getStreamName());
			entity.setDOB(requestData.getDOB());
			entity.setPOY(requestData.getPOY());
			entity.setMobileNumber(requestData.getMobileNumber());
			entity.setMailID(requestData.getMailID());
			entity.setAddress(requestData.getAddress());
			entity.setStatus(requestData.getStatus());
			 
			c
   
			List<EMSModel> savedEntities = emsRepository.saveAll(entityList);
			if (savedEntities != null && !savedEntities.isEmpty()) {
	            message = "SUCCESS";
	            response.setMessage(message);
	            response.setCode("200 OK");
	        } else {
	            response.setMessage("Insert failed");
	            response.setCode("500 INTERNAL SERVER ERROR");
	        }
    	}else {
            response.setMessage("Input list is null or empty");
            response.setCode("400 BAD REQUEST");
        }
    	}catch (Exception e) {
    		e.printStackTrace();
    		response.setMessage("Exception occurred");
            response.setCode("500 INTERNAL SERVER ERROR");
    	}
  
    	return response;
    	
    }
    
    
   
//INSERT_ALL_EMPLOYEE_DETAILS(MULTIPLE/LIST)
    
    public EMSInsertMultipleResponseDTO insertEmployeeDetailsAll(EMSInsertMultipleRequestDTO insertData) {
    	EMSInsertMultipleResponseDTO response = new EMSInsertMultipleResponseDTO();
    	String message = "FAILURE";
    	
    	try {
    		List<EMSModel> dtoList = insertData.getEmployeeDetailsRequestAll();
 
    		if (dtoList != null && !dtoList.isEmpty()) {
    			
    			List<EMSModel> entityList = new ArrayList<>();
    			
    			for (EMSModel dto : dtoList){
    				
    			EMSModel entity = new EMSModel();
    			 entity.setId(dto.getId());
    			 entity.setRid(dto.getRid());
    			 entity.setName(dto.getName());
    			 entity.setParentName(dto.getParentName());
    			 entity.setStreamName(dto.getStreamName());
    			 entity.setDOB(dto.getDOB());
    			 entity.setPOY(dto.getPOY());
    			 entity.setMobileNumber(dto.getMobileNumber());
    			 entity.setMailID(dto.getMailID());
    			 entity.setAddress(dto.getAddress());
    			 entity.setStatus(dto.getStatus());
    			 
    			 entityList.add(entity);
    			}
    			
    			List<EMSModel> savedEntities = emsRepository.saveAll(entityList);
                

                if (savedEntities != null && !savedEntities.isEmpty()) {
                    message = "SUCCESS";
                    response.setMessage(message);
                    response.setCode("200 OK");
                } else {
                    response.setMessage("Insert failed");
                    response.setCode("500 INTERNAL SERVER ERROR");
                }
    			
    		}else {
    			response.setMessage("Input list is null or empty");
                response.setCode("400 BAD REQUEST");
    		}
    	}catch (Exception e) {
    		e.printStackTrace();
    		response.setMessage("Exception occurred");
            response.setCode("500 INTERNAL SERVER ERROR");
    	}
    	return response;
    }
    
//UPDATE
    public EMSUpdateResponseDTO updateEmployeeDetails(EMSUpdateRequestDTO insertData) {
    	EMSUpdateResponseDTO response =new EMSUpdateResponseDTO();
    	List<EMSModel> saveEntities =  new ArrayList<>();
    	try {
    		Optional<EMSModel> dbResponse = emsRepository.findById(insertData.getId());
    		if(dbResponse.isPresent()) {
    			EMSModel entity = new EMSModel();
    			
    			if(insertData.getId()!=null && insertData.getRid()!=null) {
    			
    				entity.setId(dbResponse.get().getId());
    				entity.setRid(insertData.getRid());
    				entity.setName(dbResponse.get().getName());
    				entity.setParentName(dbResponse.get().getParentName());
    				entity.setStreamName(dbResponse.get().getStreamName());
    				entity.setDOB(dbResponse.get().getDOB());
    				entity.setPOY(dbResponse.get().getPOY());
    				entity.setMobileNumber(dbResponse.get().getMobileNumber());
    				entity.setMailID(dbResponse.get().getMailID());
    				entity.setAddress(dbResponse.get().getAddress());
    				entity.setStatus(dbResponse.get().getStatus());
    				
    				saveEntities.add(entity);
    				
    				
    			}else if(insertData.getId()!=null && insertData.getName()!=null) {
    				entity.setId(dbResponse.get().getId());
    				entity.setRid(dbResponse.get().getRid());
    				entity.setName(insertData.getName());
    				entity.setParentName(dbResponse.get().getParentName());
    				entity.setStreamName(dbResponse.get().getStreamName());
    				entity.setDOB(dbResponse.get().getDOB());
    				entity.setPOY(dbResponse.get().getPOY());
    				entity.setMobileNumber(dbResponse.get().getMobileNumber());
    				entity.setMailID(dbResponse.get().getMailID());
    				entity.setAddress(dbResponse.get().getAddress());
    				entity.setStatus(dbResponse.get().getStatus());
    				
    				saveEntities.add(entity);
    			}else if(insertData.getId()!=null && insertData.getParentName()!=null) {
    				entity.setId(dbResponse.get().getId());
    				entity.setRid(dbResponse.get().getRid());
    				entity.setName(dbResponse.get().getName());
    				entity.setParentName(insertData.getParentName());
    				entity.setStreamName(dbResponse.get().getStreamName());
    				entity.setDOB(dbResponse.get().getDOB());
    				entity.setPOY(dbResponse.get().getPOY());
    				entity.setMobileNumber(dbResponse.get().getMobileNumber());
    				entity.setMailID(dbResponse.get().getMailID());
    				entity.setAddress(dbResponse.get().getAddress());
    				entity.setStatus(dbResponse.get().getStatus());
    				
    				saveEntities.add(entity);
    			}else if(insertData.getId()!=null && insertData.getStreamName()!=null) {
    				entity.setId(dbResponse.get().getId());
    				entity.setRid(dbResponse.get().getRid());
    				entity.setName(dbResponse.get().getName());
    				entity.setParentName(dbResponse.get);
    				entity.setStreamName(dbResponse.get().getStreamName());
    				entity.setDOB(dbResponse.get().getDOB());
    				entity.setPOY(dbResponse.get().getPOY());
    				entity.setMobileNumber(dbResponse.get().getMobileNumber());
    				entity.setMailID(dbResponse.get().getMailID());
    				entity.setAddress(dbResponse.get().getAddress());
    				entity.setStatus(dbResponse.get().getStatus());
    				
    				saveEntities.add(entity);
    			}else if(insertData.getId()!=null && insertData.getDOB()!=null) {
    				
    			}else if(insertData.getId()!=null && insertData.getPOY()!=null) {
    				
    			}else if(insertData.getId()!=null && insertData.getMobileNumber()!=null) {
    				
    			}else if(insertData.getId()!=null && insertData.getMailID()!=null) {
    				
    			}else if(insertData.getId()!=null && insertData.getAddress()!=null) {
    				
    			}else (insertData.getId()!=null && insertData.getStatus()!=null) {
    				
    			}
    			
    		}
    	}catch() {
    		
    	}
    }
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2038)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2243)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3278)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3055)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:540)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:132)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:94)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:91)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:158)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)

!ENTRY org.eclipse.jdt.ui 4 2 2025-06-10 23:50:29.973
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2038)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2243)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3278)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3055)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:540)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:132)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:94)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:91)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:158)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)

!ENTRY org.eclipse.jdt.ui 4 0 2025-06-10 23:50:29.976
!MESSAGE Error in JDT Core during reconcile
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2038)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2243)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3278)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3055)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:540)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:132)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:94)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:91)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:158)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)

!ENTRY org.eclipse.jdt.core 4 4 2025-06-10 23:50:30.046
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package com.example.EMSbackend.Service;

import java.util.ArrayList;
import java.util.List;
import java.util.Optional;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import com.example.EMSbackend.DTO.EMSGetAllDTO;
import com.example.EMSbackend.DTO.EMSInsertMultipleRequestDTO;
import com.example.EMSbackend.DTO.EMSInsertMultipleResponseDTO;
import com.example.EMSbackend.DTO.EMSInsertSingleRequestDTO;
import com.example.EMSbackend.DTO.EMSInsertSingleResponseDTO;
import com.example.EMSbackend.DTO.EMSUpdateRequestDTO;
import com.example.EMSbackend.DTO.EMSUpdateResponseDTO;
import com.example.EMSbackend.Model.EMSModel;
import com.example.EMSbackend.Repository.EMSRepository;

import lombok.extern.slf4j.Slf4j;

@Slf4j
@Service
public class EMSService {

	@Autowired
	private EMSRepository emsRepository;
	
	
//GET_ALL_EMPLOYEE_DETAILS
    public EMSGetAllDTO getEmployeeDetailsAll() {
    	EMSGetAllDTO response = new EMSGetAllDTO();
    
    	
    	//try { 	
    	List<EMSModel> modelDetails = (List<EMSModel>) emsRepository.findAll();
    	response.setEmployeeDetailsAll(modelDetails);
    	
    	/*if(modelDetails!=null) {
    		response.setEmployeeDetailsAll(modelDetails);
    	}
    	else {
    		System.out.println("Employee not found");
    		//log.info("Service response not found");
    	}
    	
    	}catch (Exception e) {
            System.out.println("Error while fetching employee list: " + e.getMessage());
            e.printStackTrace();
        }*/
    	    
    	return response;
    }
    
//INSERT_ALL_EMPLOYEE_DETAILS(SINGLE_DATA/NOT_LIST)
    public EMSInsertSingleResponseDTO insertEmployeeDetails(EMSInsertSingleRequestDTO requestData) {
    	EMSInsertSingleResponseDTO response = new EMSInsertSingleResponseDTO();
    	String message = "FAILURE";
    	List<EMSModel> entityList = new ArrayList<>();
  
    	try {
    	if (requestData != null) {
    		EMSModel entity = new EMSModel();
    		entity.setId(requestData.getId());
			entity.setRid(requestData.getRid());
			entity.setName(requestData.getName());
			entity.setParentName(requestData.getParentName());
			entity.setStreamName(requestData.getStreamName());
			entity.setDOB(requestData.getDOB());
			entity.setPOY(requestData.getPOY());
			entity.setMobileNumber(requestData.getMobileNumber());
			entity.setMailID(requestData.getMailID());
			entity.setAddress(requestData.getAddress());
			entity.setStatus(requestData.getStatus());
			 
			c
   
			List<EMSModel> savedEntities = emsRepository.saveAll(entityList);
			if (savedEntities != null && !savedEntities.isEmpty()) {
	            message = "SUCCESS";
	            response.setMessage(message);
	            response.setCode("200 OK");
	        } else {
	            response.setMessage("Insert failed");
	            response.setCode("500 INTERNAL SERVER ERROR");
	        }
    	}else {
            response.setMessage("Input list is null or empty");
            response.setCode("400 BAD REQUEST");
        }
    	}catch (Exception e) {
    		e.printStackTrace();
    		response.setMessage("Exception occurred");
            response.setCode("500 INTERNAL SERVER ERROR");
    	}
  
    	return response;
    	
    }
    
    
   
//INSERT_ALL_EMPLOYEE_DETAILS(MULTIPLE/LIST)
    
    public EMSInsertMultipleResponseDTO insertEmployeeDetailsAll(EMSInsertMultipleRequestDTO insertData) {
    	EMSInsertMultipleResponseDTO response = new EMSInsertMultipleResponseDTO();
    	String message = "FAILURE";
    	
    	try {
    		List<EMSModel> dtoList = insertData.getEmployeeDetailsRequestAll();
 
    		if (dtoList != null && !dtoList.isEmpty()) {
    			
    			List<EMSModel> entityList = new ArrayList<>();
    			
    			for (EMSModel dto : dtoList){
    				
    			EMSModel entity = new EMSModel();
    			 entity.setId(dto.getId());
    			 entity.setRid(dto.getRid());
    			 entity.setName(dto.getName());
    			 entity.setParentName(dto.getParentName());
    			 entity.setStreamName(dto.getStreamName());
    			 entity.setDOB(dto.getDOB());
    			 entity.setPOY(dto.getPOY());
    			 entity.setMobileNumber(dto.getMobileNumber());
    			 entity.setMailID(dto.getMailID());
    			 entity.setAddress(dto.getAddress());
    			 entity.setStatus(dto.getStatus());
    			 
    			 entityList.add(entity);
    			}
    			
    			List<EMSModel> savedEntities = emsRepository.saveAll(entityList);
                

                if (savedEntities != null && !savedEntities.isEmpty()) {
                    message = "SUCCESS";
                    response.setMessage(message);
                    response.setCode("200 OK");
                } else {
                    response.setMessage("Insert failed");
                    response.setCode("500 INTERNAL SERVER ERROR");
                }
    			
    		}else {
    			response.setMessage("Input list is null or empty");
                response.setCode("400 BAD REQUEST");
    		}
    	}catch (Exception e) {
    		e.printStackTrace();
    		response.setMessage("Exception occurred");
            response.setCode("500 INTERNAL SERVER ERROR");
    	}
    	return response;
    }
    
//UPDATE
    public EMSUpdateResponseDTO updateEmployeeDetails(EMSUpdateRequestDTO insertData) {
    	EMSUpdateResponseDTO response =new EMSUpdateResponseDTO();
    	List<EMSModel> saveEntities =  new ArrayList<>();
    	try {
    		Optional<EMSModel> dbResponse = emsRepository.findById(insertData.getId());
    		if(dbResponse.isPresent()) {
    			EMSModel entity = new EMSModel();
    			
    			if(insertData.getId()!=null && insertData.getRid()!=null) {
    			
    				entity.setId(dbResponse.get().getId());
    				entity.setRid(insertData.getRid());
    				entity.setName(dbResponse.get().getName());
    				entity.setParentName(dbResponse.get().getParentName());
    				entity.setStreamName(dbResponse.get().getStreamName());
    				entity.setDOB(dbResponse.get().getDOB());
    				entity.setPOY(dbResponse.get().getPOY());
    				entity.setMobileNumber(dbResponse.get().getMobileNumber());
    				entity.setMailID(dbResponse.get().getMailID());
    				entity.setAddress(dbResponse.get().getAddress());
    				entity.setStatus(dbResponse.get().getStatus());
    				
    				saveEntities.add(entity);
    				
    				
    			}else if(insertData.getId()!=null && insertData.getName()!=null) {
    				entity.setId(dbResponse.get().getId());
    				entity.setRid(dbResponse.get().getRid());
    				entity.setName(insertData.getName());
    				entity.setParentName(dbResponse.get().getParentName());
    				entity.setStreamName(dbResponse.get().getStreamName());
    				entity.setDOB(dbResponse.get().getDOB());
    				entity.setPOY(dbResponse.get().getPOY());
    				entity.setMobileNumber(dbResponse.get().getMobileNumber());
    				entity.setMailID(dbResponse.get().getMailID());
    				entity.setAddress(dbResponse.get().getAddress());
    				entity.setStatus(dbResponse.get().getStatus());
    				
    				saveEntities.add(entity);
    			}else if(insertData.getId()!=null && insertData.getParentName()!=null) {
    				entity.setId(dbResponse.get().getId());
    				entity.setRid(dbResponse.get().getRid());
    				entity.setName(dbResponse.get().getName());
    				entity.setParentName(insertData.getParentName());
    				entity.setStreamName(dbResponse.get().getStreamName());
    				entity.setDOB(dbResponse.get().getDOB());
    				entity.setPOY(dbResponse.get().getPOY());
    				entity.setMobileNumber(dbResponse.get().getMobileNumber());
    				entity.setMailID(dbResponse.get().getMailID());
    				entity.setAddress(dbResponse.get().getAddress());
    				entity.setStatus(dbResponse.get().getStatus());
    				
    				saveEntities.add(entity);
    			}else if(insertData.getId()!=null && insertData.getStreamName()!=null) {
    				entity.setId(dbResponse.get().getId());
    				entity.setRid(dbResponse.get().getRid());
    				entity.setName(dbResponse.get().getName());
    				entity.setParentName(dbResponse.ge);
    				entity.setStreamName(dbResponse.get().getStreamName());
    				entity.setDOB(dbResponse.get().getDOB());
    				entity.setPOY(dbResponse.get().getPOY());
    				entity.setMobileNumber(dbResponse.get().getMobileNumber());
    				entity.setMailID(dbResponse.get().getMailID());
    				entity.setAddress(dbResponse.get().getAddress());
    				entity.setStatus(dbResponse.get().getStatus());
    				
    				saveEntities.add(entity);
    			}else if(insertData.getId()!=null && insertData.getDOB()!=null) {
    				
    			}else if(insertData.getId()!=null && insertData.getPOY()!=null) {
    				
    			}else if(insertData.getId()!=null && insertData.getMobileNumber()!=null) {
    				
    			}else if(insertData.getId()!=null && insertData.getMailID()!=null) {
    				
    			}else if(insertData.getId()!=null && insertData.getAddress()!=null) {
    				
    			}else (insertData.getId()!=null && insertData.getStatus()!=null) {
    				
    			}
    			
    		}
    	}catch() {
    		
    	}
    }
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2038)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2243)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3278)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3055)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:540)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:132)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:94)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:91)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:158)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)

!ENTRY org.eclipse.jdt.ui 4 2 2025-06-10 23:50:30.049
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2038)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2243)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3278)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3055)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:540)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:132)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:94)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:91)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:158)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)

!ENTRY org.eclipse.jdt.ui 4 0 2025-06-10 23:50:30.051
!MESSAGE Error in JDT Core during reconcile
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2038)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2243)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3278)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3055)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:540)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:132)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:94)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:91)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:158)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)

!ENTRY org.eclipse.jdt.core 4 4 2025-06-10 23:50:30.082
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package com.example.EMSbackend.Service;

import java.util.ArrayList;
import java.util.List;
import java.util.Optional;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import com.example.EMSbackend.DTO.EMSGetAllDTO;
import com.example.EMSbackend.DTO.EMSInsertMultipleRequestDTO;
import com.example.EMSbackend.DTO.EMSInsertMultipleResponseDTO;
import com.example.EMSbackend.DTO.EMSInsertSingleRequestDTO;
import com.example.EMSbackend.DTO.EMSInsertSingleResponseDTO;
import com.example.EMSbackend.DTO.EMSUpdateRequestDTO;
import com.example.EMSbackend.DTO.EMSUpdateResponseDTO;
import com.example.EMSbackend.Model.EMSModel;
import com.example.EMSbackend.Repository.EMSRepository;

import lombok.extern.slf4j.Slf4j;

@Slf4j
@Service
public class EMSService {

	@Autowired
	private EMSRepository emsRepository;
	
	
//GET_ALL_EMPLOYEE_DETAILS
    public EMSGetAllDTO getEmployeeDetailsAll() {
    	EMSGetAllDTO response = new EMSGetAllDTO();
    
    	
    	//try { 	
    	List<EMSModel> modelDetails = (List<EMSModel>) emsRepository.findAll();
    	response.setEmployeeDetailsAll(modelDetails);
    	
    	/*if(modelDetails!=null) {
    		response.setEmployeeDetailsAll(modelDetails);
    	}
    	else {
    		System.out.println("Employee not found");
    		//log.info("Service response not found");
    	}
    	
    	}catch (Exception e) {
            System.out.println("Error while fetching employee list: " + e.getMessage());
            e.printStackTrace();
        }*/
    	    
    	return response;
    }
    
//INSERT_ALL_EMPLOYEE_DETAILS(SINGLE_DATA/NOT_LIST)
    public EMSInsertSingleResponseDTO insertEmployeeDetails(EMSInsertSingleRequestDTO requestData) {
    	EMSInsertSingleResponseDTO response = new EMSInsertSingleResponseDTO();
    	String message = "FAILURE";
    	List<EMSModel> entityList = new ArrayList<>();
  
    	try {
    	if (requestData != null) {
    		EMSModel entity = new EMSModel();
    		entity.setId(requestData.getId());
			entity.setRid(requestData.getRid());
			entity.setName(requestData.getName());
			entity.setParentName(requestData.getParentName());
			entity.setStreamName(requestData.getStreamName());
			entity.setDOB(requestData.getDOB());
			entity.setPOY(requestData.getPOY());
			entity.setMobileNumber(requestData.getMobileNumber());
			entity.setMailID(requestData.getMailID());
			entity.setAddress(requestData.getAddress());
			entity.setStatus(requestData.getStatus());
			 
			c
   
			List<EMSModel> savedEntities = emsRepository.saveAll(entityList);
			if (savedEntities != null && !savedEntities.isEmpty()) {
	            message = "SUCCESS";
	            response.setMessage(message);
	            response.setCode("200 OK");
	        } else {
	            response.setMessage("Insert failed");
	            response.setCode("500 INTERNAL SERVER ERROR");
	        }
    	}else {
            response.setMessage("Input list is null or empty");
            response.setCode("400 BAD REQUEST");
        }
    	}catch (Exception e) {
    		e.printStackTrace();
    		response.setMessage("Exception occurred");
            response.setCode("500 INTERNAL SERVER ERROR");
    	}
  
    	return response;
    	
    }
    
    
   
//INSERT_ALL_EMPLOYEE_DETAILS(MULTIPLE/LIST)
    
    public EMSInsertMultipleResponseDTO insertEmployeeDetailsAll(EMSInsertMultipleRequestDTO insertData) {
    	EMSInsertMultipleResponseDTO response = new EMSInsertMultipleResponseDTO();
    	String message = "FAILURE";
    	
    	try {
    		List<EMSModel> dtoList = insertData.getEmployeeDetailsRequestAll();
 
    		if (dtoList != null && !dtoList.isEmpty()) {
    			
    			List<EMSModel> entityList = new ArrayList<>();
    			
    			for (EMSModel dto : dtoList){
    				
    			EMSModel entity = new EMSModel();
    			 entity.setId(dto.getId());
    			 entity.setRid(dto.getRid());
    			 entity.setName(dto.getName());
    			 entity.setParentName(dto.getParentName());
    			 entity.setStreamName(dto.getStreamName());
    			 entity.setDOB(dto.getDOB());
    			 entity.setPOY(dto.getPOY());
    			 entity.setMobileNumber(dto.getMobileNumber());
    			 entity.setMailID(dto.getMailID());
    			 entity.setAddress(dto.getAddress());
    			 entity.setStatus(dto.getStatus());
    			 
    			 entityList.add(entity);
    			}
    			
    			List<EMSModel> savedEntities = emsRepository.saveAll(entityList);
                

                if (savedEntities != null && !savedEntities.isEmpty()) {
                    message = "SUCCESS";
                    response.setMessage(message);
                    response.setCode("200 OK");
                } else {
                    response.setMessage("Insert failed");
                    response.setCode("500 INTERNAL SERVER ERROR");
                }
    			
    		}else {
    			response.setMessage("Input list is null or empty");
                response.setCode("400 BAD REQUEST");
    		}
    	}catch (Exception e) {
    		e.printStackTrace();
    		response.setMessage("Exception occurred");
            response.setCode("500 INTERNAL SERVER ERROR");
    	}
    	return response;
    }
    
//UPDATE
    public EMSUpdateResponseDTO updateEmployeeDetails(EMSUpdateRequestDTO insertData) {
    	EMSUpdateResponseDTO response =new EMSUpdateResponseDTO();
    	List<EMSModel> saveEntities =  new ArrayList<>();
    	try {
    		Optional<EMSModel> dbResponse = emsRepository.findById(insertData.getId());
    		if(dbResponse.isPresent()) {
    			EMSModel entity = new EMSModel();
    			
    			if(insertData.getId()!=null && insertData.getRid()!=null) {
    			
    				entity.setId(dbResponse.get().getId());
    				entity.setRid(insertData.getRid());
    				entity.setName(dbResponse.get().getName());
    				entity.setParentName(dbResponse.get().getParentName());
    				entity.setStreamName(dbResponse.get().getStreamName());
    				entity.setDOB(dbResponse.get().getDOB());
    				entity.setPOY(dbResponse.get().getPOY());
    				entity.setMobileNumber(dbResponse.get().getMobileNumber());
    				entity.setMailID(dbResponse.get().getMailID());
    				entity.setAddress(dbResponse.get().getAddress());
    				entity.setStatus(dbResponse.get().getStatus());
    				
    				saveEntities.add(entity);
    				
    				
    			}else if(insertData.getId()!=null && insertData.getName()!=null) {
    				entity.setId(dbResponse.get().getId());
    				entity.setRid(dbResponse.get().getRid());
    				entity.setName(insertData.getName());
    				entity.setParentName(dbResponse.get().getParentName());
    				entity.setStreamName(dbResponse.get().getStreamName());
    				entity.setDOB(dbResponse.get().getDOB());
    				entity.setPOY(dbResponse.get().getPOY());
    				entity.setMobileNumber(dbResponse.get().getMobileNumber());
    				entity.setMailID(dbResponse.get().getMailID());
    				entity.setAddress(dbResponse.get().getAddress());
    				entity.setStatus(dbResponse.get().getStatus());
    				
    				saveEntities.add(entity);
    			}else if(insertData.getId()!=null && insertData.getParentName()!=null) {
    				entity.setId(dbResponse.get().getId());
    				entity.setRid(dbResponse.get().getRid());
    				entity.setName(dbResponse.get().getName());
    				entity.setParentName(insertData.getParentName());
    				entity.setStreamName(dbResponse.get().getStreamName());
    				entity.setDOB(dbResponse.get().getDOB());
    				entity.setPOY(dbResponse.get().getPOY());
    				entity.setMobileNumber(dbResponse.get().getMobileNumber());
    				entity.setMailID(dbResponse.get().getMailID());
    				entity.setAddress(dbResponse.get().getAddress());
    				entity.setStatus(dbResponse.get().getStatus());
    				
    				saveEntities.add(entity);
    			}else if(insertData.getId()!=null && insertData.getStreamName()!=null) {
    				entity.setId(dbResponse.get().getId());
    				entity.setRid(dbResponse.get().getRid());
    				entity.setName(dbResponse.get().getName());
    				entity.setParentName(dbResponse.ge);
    				entity.setStreamName(dbResponse.get().getStreamName());
    				entity.setDOB(dbResponse.get().getDOB());
    				entity.setPOY(dbResponse.get().getPOY());
    				entity.setMobileNumber(dbResponse.get().getMobileNumber());
    				entity.setMailID(dbResponse.get().getMailID());
    				entity.setAddress(dbResponse.get().getAddress());
    				entity.setStatus(dbResponse.get().getStatus());
    				
    				saveEntities.add(entity);
    			}else if(insertData.getId()!=null && insertData.getDOB()!=null) {
    				
    			}else if(insertData.getId()!=null && insertData.getPOY()!=null) {
    				
    			}else if(insertData.getId()!=null && insertData.getMobileNumber()!=null) {
    				
    			}else if(insertData.getId()!=null && insertData.getMailID()!=null) {
    				
    			}else if(insertData.getId()!=null && insertData.getAddress()!=null) {
    				
    			}else (insertData.getId()!=null && insertData.getStatus()!=null) {
    				
    			}
    			
    		}
    	}catch() {
    		
    	}
    }
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2038)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2243)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3278)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3055)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:189)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2025-06-10 23:50:30.085
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2038)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2243)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3278)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3055)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:189)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2025-06-10 23:50:30.087
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2038)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2243)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3278)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3055)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:189)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core 4 4 2025-06-10 23:50:31.124
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package com.example.EMSbackend.Service;

import java.util.ArrayList;
import java.util.List;
import java.util.Optional;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import com.example.EMSbackend.DTO.EMSGetAllDTO;
import com.example.EMSbackend.DTO.EMSInsertMultipleRequestDTO;
import com.example.EMSbackend.DTO.EMSInsertMultipleResponseDTO;
import com.example.EMSbackend.DTO.EMSInsertSingleRequestDTO;
import com.example.EMSbackend.DTO.EMSInsertSingleResponseDTO;
import com.example.EMSbackend.DTO.EMSUpdateRequestDTO;
import com.example.EMSbackend.DTO.EMSUpdateResponseDTO;
import com.example.EMSbackend.Model.EMSModel;
import com.example.EMSbackend.Repository.EMSRepository;

import lombok.extern.slf4j.Slf4j;

@Slf4j
@Service
public class EMSService {

	@Autowired
	private EMSRepository emsRepository;
	
	
//GET_ALL_EMPLOYEE_DETAILS
    public EMSGetAllDTO getEmployeeDetailsAll() {
    	EMSGetAllDTO response = new EMSGetAllDTO();
    
    	
    	//try { 	
    	List<EMSModel> modelDetails = (List<EMSModel>) emsRepository.findAll();
    	response.setEmployeeDetailsAll(modelDetails);
    	
    	/*if(modelDetails!=null) {
    		response.setEmployeeDetailsAll(modelDetails);
    	}
    	else {
    		System.out.println("Employee not found");
    		//log.info("Service response not found");
    	}
    	
    	}catch (Exception e) {
            System.out.println("Error while fetching employee list: " + e.getMessage());
            e.printStackTrace();
        }*/
    	    
    	return response;
    }
    
//INSERT_ALL_EMPLOYEE_DETAILS(SINGLE_DATA/NOT_LIST)
    public EMSInsertSingleResponseDTO insertEmployeeDetails(EMSInsertSingleRequestDTO requestData) {
    	EMSInsertSingleResponseDTO response = new EMSInsertSingleResponseDTO();
    	String message = "FAILURE";
    	List<EMSModel> entityList = new ArrayList<>();
  
    	try {
    	if (requestData != null) {
    		EMSModel entity = new EMSModel();
    		entity.setId(requestData.getId());
			entity.setRid(requestData.getRid());
			entity.setName(requestData.getName());
			entity.setParentName(requestData.getParentName());
			entity.setStreamName(requestData.getStreamName());
			entity.setDOB(requestData.getDOB());
			entity.setPOY(requestData.getPOY());
			entity.setMobileNumber(requestData.getMobileNumber());
			entity.setMailID(requestData.getMailID());
			entity.setAddress(requestData.getAddress());
			entity.setStatus(requestData.getStatus());
			 
			c
   
			List<EMSModel> savedEntities = emsRepository.saveAll(entityList);
			if (savedEntities != null && !savedEntities.isEmpty()) {
	            message = "SUCCESS";
	            response.setMessage(message);
	            response.setCode("200 OK");
	        } else {
	            response.setMessage("Insert failed");
	            response.setCode("500 INTERNAL SERVER ERROR");
	        }
    	}else {
            response.setMessage("Input list is null or empty");
            response.setCode("400 BAD REQUEST");
        }
    	}catch (Exception e) {
    		e.printStackTrace();
    		response.setMessage("Exception occurred");
            response.setCode("500 INTERNAL SERVER ERROR");
    	}
  
    	return response;
    	
    }
    
    
   
//INSERT_ALL_EMPLOYEE_DETAILS(MULTIPLE/LIST)
    
    public EMSInsertMultipleResponseDTO insertEmployeeDetailsAll(EMSInsertMultipleRequestDTO insertData) {
    	EMSInsertMultipleResponseDTO response = new EMSInsertMultipleResponseDTO();
    	String message = "FAILURE";
    	
    	try {
    		List<EMSModel> dtoList = insertData.getEmployeeDetailsRequestAll();
 
    		if (dtoList != null && !dtoList.isEmpty()) {
    			
    			List<EMSModel> entityList = new ArrayList<>();
    			
    			for (EMSModel dto : dtoList){
    				
    			EMSModel entity = new EMSModel();
    			 entity.setId(dto.getId());
    			 entity.setRid(dto.getRid());
    			 entity.setName(dto.getName());
    			 entity.setParentName(dto.getParentName());
    			 entity.setStreamName(dto.getStreamName());
    			 entity.setDOB(dto.getDOB());
    			 entity.setPOY(dto.getPOY());
    			 entity.setMobileNumber(dto.getMobileNumber());
    			 entity.setMailID(dto.getMailID());
    			 entity.setAddress(dto.getAddress());
    			 entity.setStatus(dto.getStatus());
    			 
    			 entityList.add(entity);
    			}
    			
    			List<EMSModel> savedEntities = emsRepository.saveAll(entityList);
                

                if (savedEntities != null && !savedEntities.isEmpty()) {
                    message = "SUCCESS";
                    response.setMessage(message);
                    response.setCode("200 OK");
                } else {
                    response.setMessage("Insert failed");
                    response.setCode("500 INTERNAL SERVER ERROR");
                }
    			
    		}else {
    			response.setMessage("Input list is null or empty");
                response.setCode("400 BAD REQUEST");
    		}
    	}catch (Exception e) {
    		e.printStackTrace();
    		response.setMessage("Exception occurred");
            response.setCode("500 INTERNAL SERVER ERROR");
    	}
    	return response;
    }
    
//UPDATE
    public EMSUpdateResponseDTO updateEmployeeDetails(EMSUpdateRequestDTO insertData) {
    	EMSUpdateResponseDTO response =new EMSUpdateResponseDTO();
    	List<EMSModel> saveEntities =  new ArrayList<>();
    	try {
    		Optional<EMSModel> dbResponse = emsRepository.findById(insertData.getId());
    		if(dbResponse.isPresent()) {
    			EMSModel entity = new EMSModel();
    			
    			if(insertData.getId()!=null && insertData.getRid()!=null) {
    			
    				entity.setId(dbResponse.get().getId());
    				entity.setRid(insertData.getRid());
    				entity.setName(dbResponse.get().getName());
    				entity.setParentName(dbResponse.get().getParentName());
    				entity.setStreamName(dbResponse.get().getStreamName());
    				entity.setDOB(dbResponse.get().getDOB());
    				entity.setPOY(dbResponse.get().getPOY());
    				entity.setMobileNumber(dbResponse.get().getMobileNumber());
    				entity.setMailID(dbResponse.get().getMailID());
    				entity.setAddress(dbResponse.get().getAddress());
    				entity.setStatus(dbResponse.get().getStatus());
    				
    				saveEntities.add(entity);
    				
    				
    			}else if(insertData.getId()!=null && insertData.getName()!=null) {
    				entity.setId(dbResponse.get().getId());
    				entity.setRid(dbResponse.get().getRid());
    				entity.setName(insertData.getName());
    				entity.setParentName(dbResponse.get().getParentName());
    				entity.setStreamName(dbResponse.get().getStreamName());
    				entity.setDOB(dbResponse.get().getDOB());
    				entity.setPOY(dbResponse.get().getPOY());
    				entity.setMobileNumber(dbResponse.get().getMobileNumber());
    				entity.setMailID(dbResponse.get().getMailID());
    				entity.setAddress(dbResponse.get().getAddress());
    				entity.setStatus(dbResponse.get().getStatus());
    				
    				saveEntities.add(entity);
    			}else if(insertData.getId()!=null && insertData.getParentName()!=null) {
    				entity.setId(dbResponse.get().getId());
    				entity.setRid(dbResponse.get().getRid());
    				entity.setName(dbResponse.get().getName());
    				entity.setParentName(insertData.getParentName());
    				entity.setStreamName(dbResponse.get().getStreamName());
    				entity.setDOB(dbResponse.get().getDOB());
    				entity.setPOY(dbResponse.get().getPOY());
    				entity.setMobileNumber(dbResponse.get().getMobileNumber());
    				entity.setMailID(dbResponse.get().getMailID());
    				entity.setAddress(dbResponse.get().getAddress());
    				entity.setStatus(dbResponse.get().getStatus());
    				
    				saveEntities.add(entity);
    			}else if(insertData.getId()!=null && insertData.getStreamName()!=null) {
    				entity.setId(dbResponse.get().getId());
    				entity.setRid(dbResponse.get().getRid());
    				entity.setName(dbResponse.get().getName());
    				entity.setParentName(dbResponse);
    				entity.setStreamName(dbResponse.get().getStreamName());
    				entity.setDOB(dbResponse.get().getDOB());
    				entity.setPOY(dbResponse.get().getPOY());
    				entity.setMobileNumber(dbResponse.get().getMobileNumber());
    				entity.setMailID(dbResponse.get().getMailID());
    				entity.setAddress(dbResponse.get().getAddress());
    				entity.setStatus(dbResponse.get().getStatus());
    				
    				saveEntities.add(entity);
    			}else if(insertData.getId()!=null && insertData.getDOB()!=null) {
    				
    			}else if(insertData.getId()!=null && insertData.getPOY()!=null) {
    				
    			}else if(insertData.getId()!=null && insertData.getMobileNumber()!=null) {
    				
    			}else if(insertData.getId()!=null && insertData.getMailID()!=null) {
    				
    			}else if(insertData.getId()!=null && insertData.getAddress()!=null) {
    				
    			}else (insertData.getId()!=null && insertData.getStatus()!=null) {
    				
    			}
    			
    		}
    	}catch() {
    		
    	}
    }
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2038)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2243)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3278)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3055)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:540)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:132)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:94)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:91)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:158)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)

!ENTRY org.eclipse.jdt.ui 4 2 2025-06-10 23:50:31.129
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2038)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2243)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3278)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3055)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:540)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:132)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:94)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:91)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:158)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)

!ENTRY org.eclipse.jdt.ui 4 0 2025-06-10 23:50:31.133
!MESSAGE Error in JDT Core during reconcile
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2038)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2243)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3278)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3055)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:540)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:132)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:94)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:91)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:158)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)

!ENTRY org.eclipse.jdt.core 4 4 2025-06-10 23:50:31.224
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package com.example.EMSbackend.Service;

import java.util.ArrayList;
import java.util.List;
import java.util.Optional;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import com.example.EMSbackend.DTO.EMSGetAllDTO;
import com.example.EMSbackend.DTO.EMSInsertMultipleRequestDTO;
import com.example.EMSbackend.DTO.EMSInsertMultipleResponseDTO;
import com.example.EMSbackend.DTO.EMSInsertSingleRequestDTO;
import com.example.EMSbackend.DTO.EMSInsertSingleResponseDTO;
import com.example.EMSbackend.DTO.EMSUpdateRequestDTO;
import com.example.EMSbackend.DTO.EMSUpdateResponseDTO;
import com.example.EMSbackend.Model.EMSModel;
import com.example.EMSbackend.Repository.EMSRepository;

import lombok.extern.slf4j.Slf4j;

@Slf4j
@Service
public class EMSService {

	@Autowired
	private EMSRepository emsRepository;
	
	
//GET_ALL_EMPLOYEE_DETAILS
    public EMSGetAllDTO getEmployeeDetailsAll() {
    	EMSGetAllDTO response = new EMSGetAllDTO();
    
    	
    	//try { 	
    	List<EMSModel> modelDetails = (List<EMSModel>) emsRepository.findAll();
    	response.setEmployeeDetailsAll(modelDetails);
    	
    	/*if(modelDetails!=null) {
    		response.setEmployeeDetailsAll(modelDetails);
    	}
    	else {
    		System.out.println("Employee not found");
    		//log.info("Service response not found");
    	}
    	
    	}catch (Exception e) {
            System.out.println("Error while fetching employee list: " + e.getMessage());
            e.printStackTrace();
        }*/
    	    
    	return response;
    }
    
//INSERT_ALL_EMPLOYEE_DETAILS(SINGLE_DATA/NOT_LIST)
    public EMSInsertSingleResponseDTO insertEmployeeDetails(EMSInsertSingleRequestDTO requestData) {
    	EMSInsertSingleResponseDTO response = new EMSInsertSingleResponseDTO();
    	String message = "FAILURE";
    	List<EMSModel> entityList = new ArrayList<>();
  
    	try {
    	if (requestData != null) {
    		EMSModel entity = new EMSModel();
    		entity.setId(requestData.getId());
			entity.setRid(requestData.getRid());
			entity.setName(requestData.getName());
			entity.setParentName(requestData.getParentName());
			entity.setStreamName(requestData.getStreamName());
			entity.setDOB(requestData.getDOB());
			entity.setPOY(requestData.getPOY());
			entity.setMobileNumber(requestData.getMobileNumber());
			entity.setMailID(requestData.getMailID());
			entity.setAddress(requestData.getAddress());
			entity.setStatus(requestData.getStatus());
			 
			c
   
			List<EMSModel> savedEntities = emsRepository.saveAll(entityList);
			if (savedEntities != null && !savedEntities.isEmpty()) {
	            message = "SUCCESS";
	            response.setMessage(message);
	            response.setCode("200 OK");
	        } else {
	            response.setMessage("Insert failed");
	            response.setCode("500 INTERNAL SERVER ERROR");
	        }
    	}else {
            response.setMessage("Input list is null or empty");
            response.setCode("400 BAD REQUEST");
        }
    	}catch (Exception e) {
    		e.printStackTrace();
    		response.setMessage("Exception occurred");
            response.setCode("500 INTERNAL SERVER ERROR");
    	}
  
    	return response;
    	
    }
    
    
   
//INSERT_ALL_EMPLOYEE_DETAILS(MULTIPLE/LIST)
    
    public EMSInsertMultipleResponseDTO insertEmployeeDetailsAll(EMSInsertMultipleRequestDTO insertData) {
    	EMSInsertMultipleResponseDTO response = new EMSInsertMultipleResponseDTO();
    	String message = "FAILURE";
    	
    	try {
    		List<EMSModel> dtoList = insertData.getEmployeeDetailsRequestAll();
 
    		if (dtoList != null && !dtoList.isEmpty()) {
    			
    			List<EMSModel> entityList = new ArrayList<>();
    			
    			for (EMSModel dto : dtoList){
    				
    			EMSModel entity = new EMSModel();
    			 entity.setId(dto.getId());
    			 entity.setRid(dto.getRid());
    			 entity.setName(dto.getName());
    			 entity.setParentName(dto.getParentName());
    			 entity.setStreamName(dto.getStreamName());
    			 entity.setDOB(dto.getDOB());
    			 entity.setPOY(dto.getPOY());
    			 entity.setMobileNumber(dto.getMobileNumber());
    			 entity.setMailID(dto.getMailID());
    			 entity.setAddress(dto.getAddress());
    			 entity.setStatus(dto.getStatus());
    			 
    			 entityList.add(entity);
    			}
    			
    			List<EMSModel> savedEntities = emsRepository.saveAll(entityList);
                

                if (savedEntities != null && !savedEntities.isEmpty()) {
                    message = "SUCCESS";
                    response.setMessage(message);
                    response.setCode("200 OK");
                } else {
                    response.setMessage("Insert failed");
                    response.setCode("500 INTERNAL SERVER ERROR");
                }
    			
    		}else {
    			response.setMessage("Input list is null or empty");
                response.setCode("400 BAD REQUEST");
    		}
    	}catch (Exception e) {
    		e.printStackTrace();
    		response.setMessage("Exception occurred");
            response.setCode("500 INTERNAL SERVER ERROR");
    	}
    	return response;
    }
    
//UPDATE
    public EMSUpdateResponseDTO updateEmployeeDetails(EMSUpdateRequestDTO insertData) {
    	EMSUpdateResponseDTO response =new EMSUpdateResponseDTO();
    	List<EMSModel> saveEntities =  new ArrayList<>();
    	try {
    		Optional<EMSModel> dbResponse = emsRepository.findById(insertData.getId());
    		if(dbResponse.isPresent()) {
    			EMSModel entity = new EMSModel();
    			
    			if(insertData.getId()!=null && insertData.getRid()!=null) {
    			
    				entity.setId(dbResponse.get().getId());
    				entity.setRid(insertData.getRid());
    				entity.setName(dbResponse.get().getName());
    				entity.setParentName(dbResponse.get().getParentName());
    				entity.setStreamName(dbResponse.get().getStreamName());
    				entity.setDOB(dbResponse.get().getDOB());
    				entity.setPOY(dbResponse.get().getPOY());
    				entity.setMobileNumber(dbResponse.get().getMobileNumber());
    				entity.setMailID(dbResponse.get().getMailID());
    				entity.setAddress(dbResponse.get().getAddress());
    				entity.setStatus(dbResponse.get().getStatus());
    				
    				saveEntities.add(entity);
    				
    				
    			}else if(insertData.getId()!=null && insertData.getName()!=null) {
    				entity.setId(dbResponse.get().getId());
    				entity.setRid(dbResponse.get().getRid());
    				entity.setName(insertData.getName());
    				entity.setParentName(dbResponse.get().getParentName());
    				entity.setStreamName(dbResponse.get().getStreamName());
    				entity.setDOB(dbResponse.get().getDOB());
    				entity.setPOY(dbResponse.get().getPOY());
    				entity.setMobileNumber(dbResponse.get().getMobileNumber());
    				entity.setMailID(dbResponse.get().getMailID());
    				entity.setAddress(dbResponse.get().getAddress());
    				entity.setStatus(dbResponse.get().getStatus());
    				
    				saveEntities.add(entity);
    			}else if(insertData.getId()!=null && insertData.getParentName()!=null) {
    				entity.setId(dbResponse.get().getId());
    				entity.setRid(dbResponse.get().getRid());
    				entity.setName(dbResponse.get().getName());
    				entity.setParentName(insertData.getParentName());
    				entity.setStreamName(dbResponse.get().getStreamName());
    				entity.setDOB(dbResponse.get().getDOB());
    				entity.setPOY(dbResponse.get().getPOY());
    				entity.setMobileNumber(dbResponse.get().getMobileNumber());
    				entity.setMailID(dbResponse.get().getMailID());
    				entity.setAddress(dbResponse.get().getAddress());
    				entity.setStatus(dbResponse.get().getStatus());
    				
    				saveEntities.add(entity);
    			}else if(insertData.getId()!=null && insertData.getStreamName()!=null) {
    				entity.setId(dbResponse.get().getId());
    				entity.setRid(dbResponse.get().getRid());
    				entity.setName(dbResponse.get().getName());
    				entity.setParentName(dbResponse);
    				entity.setStreamName(dbResponse.get().getStreamName());
    				entity.setDOB(dbResponse.get().getDOB());
    				entity.setPOY(dbResponse.get().getPOY());
    				entity.setMobileNumber(dbResponse.get().getMobileNumber());
    				entity.setMailID(dbResponse.get().getMailID());
    				entity.setAddress(dbResponse.get().getAddress());
    				entity.setStatus(dbResponse.get().getStatus());
    				
    				saveEntities.add(entity);
    			}else if(insertData.getId()!=null && insertData.getDOB()!=null) {
    				
    			}else if(insertData.getId()!=null && insertData.getPOY()!=null) {
    				
    			}else if(insertData.getId()!=null && insertData.getMobileNumber()!=null) {
    				
    			}else if(insertData.getId()!=null && insertData.getMailID()!=null) {
    				
    			}else if(insertData.getId()!=null && insertData.getAddress()!=null) {
    				
    			}else (insertData.getId()!=null && insertData.getStatus()!=null) {
    				
    			}
    			
    		}
    	}catch() {
    		
    	}
    }
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2038)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2243)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3278)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3055)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2025-06-10 23:50:31.230
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2038)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2243)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3278)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3055)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2025-06-10 23:50:31.233
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2038)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2243)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3278)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3055)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core 4 4 2025-06-10 23:50:32.750
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package com.example.EMSbackend.Service;

import java.util.ArrayList;
import java.util.List;
import java.util.Optional;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import com.example.EMSbackend.DTO.EMSGetAllDTO;
import com.example.EMSbackend.DTO.EMSInsertMultipleRequestDTO;
import com.example.EMSbackend.DTO.EMSInsertMultipleResponseDTO;
import com.example.EMSbackend.DTO.EMSInsertSingleRequestDTO;
import com.example.EMSbackend.DTO.EMSInsertSingleResponseDTO;
import com.example.EMSbackend.DTO.EMSUpdateRequestDTO;
import com.example.EMSbackend.DTO.EMSUpdateResponseDTO;
import com.example.EMSbackend.Model.EMSModel;
import com.example.EMSbackend.Repository.EMSRepository;

import lombok.extern.slf4j.Slf4j;

@Slf4j
@Service
public class EMSService {

	@Autowired
	private EMSRepository emsRepository;
	
	
//GET_ALL_EMPLOYEE_DETAILS
    public EMSGetAllDTO getEmployeeDetailsAll() {
    	EMSGetAllDTO response = new EMSGetAllDTO();
    
    	
    	//try { 	
    	List<EMSModel> modelDetails = (List<EMSModel>) emsRepository.findAll();
    	response.setEmployeeDetailsAll(modelDetails);
    	
    	/*if(modelDetails!=null) {
    		response.setEmployeeDetailsAll(modelDetails);
    	}
    	else {
    		System.out.println("Employee not found");
    		//log.info("Service response not found");
    	}
    	
    	}catch (Exception e) {
            System.out.println("Error while fetching employee list: " + e.getMessage());
            e.printStackTrace();
        }*/
    	    
    	return response;
    }
    
//INSERT_ALL_EMPLOYEE_DETAILS(SINGLE_DATA/NOT_LIST)
    public EMSInsertSingleResponseDTO insertEmployeeDetails(EMSInsertSingleRequestDTO requestData) {
    	EMSInsertSingleResponseDTO response = new EMSInsertSingleResponseDTO();
    	String message = "FAILURE";
    	List<EMSModel> entityList = new ArrayList<>();
  
    	try {
    	if (requestData != null) {
    		EMSModel entity = new EMSModel();
    		entity.setId(requestData.getId());
			entity.setRid(requestData.getRid());
			entity.setName(requestData.getName());
			entity.setParentName(requestData.getParentName());
			entity.setStreamName(requestData.getStreamName());
			entity.setDOB(requestData.getDOB());
			entity.setPOY(requestData.getPOY());
			entity.setMobileNumber(requestData.getMobileNumber());
			entity.setMailID(requestData.getMailID());
			entity.setAddress(requestData.getAddress());
			entity.setStatus(requestData.getStatus());
			 
			c
   
			List<EMSModel> savedEntities = emsRepository.saveAll(entityList);
			if (savedEntities != null && !savedEntities.isEmpty()) {
	            message = "SUCCESS";
	            response.setMessage(message);
	            response.setCode("200 OK");
	        } else {
	            response.setMessage("Insert failed");
	            response.setCode("500 INTERNAL SERVER ERROR");
	        }
    	}else {
            response.setMessage("Input list is null or empty");
            response.setCode("400 BAD REQUEST");
        }
    	}catch (Exception e) {
    		e.printStackTrace();
    		response.setMessage("Exception occurred");
            response.setCode("500 INTERNAL SERVER ERROR");
    	}
  
    	return response;
    	
    }
    
    
   
//INSERT_ALL_EMPLOYEE_DETAILS(MULTIPLE/LIST)
    
    public EMSInsertMultipleResponseDTO insertEmployeeDetailsAll(EMSInsertMultipleRequestDTO insertData) {
    	EMSInsertMultipleResponseDTO response = new EMSInsertMultipleResponseDTO();
    	String message = "FAILURE";
    	
    	try {
    		List<EMSModel> dtoList = insertData.getEmployeeDetailsRequestAll();
 
    		if (dtoList != null && !dtoList.isEmpty()) {
    			
    			List<EMSModel> entityList = new ArrayList<>();
    			
    			for (EMSModel dto : dtoList){
    				
    			EMSModel entity = new EMSModel();
    			 entity.setId(dto.getId());
    			 entity.setRid(dto.getRid());
    			 entity.setName(dto.getName());
    			 entity.setParentName(dto.getParentName());
    			 entity.setStreamName(dto.getStreamName());
    			 entity.setDOB(dto.getDOB());
    			 entity.setPOY(dto.getPOY());
    			 entity.setMobileNumber(dto.getMobileNumber());
    			 entity.setMailID(dto.getMailID());
    			 entity.setAddress(dto.getAddress());
    			 entity.setStatus(dto.getStatus());
    			 
    			 entityList.add(entity);
    			}
    			
    			List<EMSModel> savedEntities = emsRepository.saveAll(entityList);
                

                if (savedEntities != null && !savedEntities.isEmpty()) {
                    message = "SUCCESS";
                    response.setMessage(message);
                    response.setCode("200 OK");
                } else {
                    response.setMessage("Insert failed");
                    response.setCode("500 INTERNAL SERVER ERROR");
                }
    			
    		}else {
    			response.setMessage("Input list is null or empty");
                response.setCode("400 BAD REQUEST");
    		}
    	}catch (Exception e) {
    		e.printStackTrace();
    		response.setMessage("Exception occurred");
            response.setCode("500 INTERNAL SERVER ERROR");
    	}
    	return response;
    }
    
//UPDATE
    public EMSUpdateResponseDTO updateEmployeeDetails(EMSUpdateRequestDTO insertData) {
    	EMSUpdateResponseDTO response =new EMSUpdateResponseDTO();
    	List<EMSModel> saveEntities =  new ArrayList<>();
    	try {
    		Optional<EMSModel> dbResponse = emsRepository.findById(insertData.getId());
    		if(dbResponse.isPresent()) {
    			EMSModel entity = new EMSModel();
    			
    			if(insertData.getId()!=null && insertData.getRid()!=null) {
    			
    				entity.setId(dbResponse.get().getId());
    				entity.setRid(insertData.getRid());
    				entity.setName(dbResponse.get().getName());
    				entity.setParentName(dbResponse.get().getParentName());
    				entity.setStreamName(dbResponse.get().getStreamName());
    				entity.setDOB(dbResponse.get().getDOB());
    				entity.setPOY(dbResponse.get().getPOY());
    				entity.setMobileNumber(dbResponse.get().getMobileNumber());
    				entity.setMailID(dbResponse.get().getMailID());
    				entity.setAddress(dbResponse.get().getAddress());
    				entity.setStatus(dbResponse.get().getStatus());
    				
    				saveEntities.add(entity);
    				
    				
    			}else if(insertData.getId()!=null && insertData.getName()!=null) {
    				entity.setId(dbResponse.get().getId());
    				entity.setRid(dbResponse.get().getRid());
    				entity.setName(insertData.getName());
    				entity.setParentName(dbResponse.get().getParentName());
    				entity.setStreamName(dbResponse.get().getStreamName());
    				entity.setDOB(dbResponse.get().getDOB());
    				entity.setPOY(dbResponse.get().getPOY());
    				entity.setMobileNumber(dbResponse.get().getMobileNumber());
    				entity.setMailID(dbResponse.get().getMailID());
    				entity.setAddress(dbResponse.get().getAddress());
    				entity.setStatus(dbResponse.get().getStatus());
    				
    				saveEntities.add(entity);
    			}else if(insertData.getId()!=null && insertData.getParentName()!=null) {
    				entity.setId(dbResponse.get().getId());
    				entity.setRid(dbResponse.get().getRid());
    				entity.setName(dbResponse.get().getName());
    				entity.setParentName(insertData.getParentName());
    				entity.setStreamName(dbResponse.get().getStreamName());
    				entity.setDOB(dbResponse.get().getDOB());
    				entity.setPOY(dbResponse.get().getPOY());
    				entity.setMobileNumber(dbResponse.get().getMobileNumber());
    				entity.setMailID(dbResponse.get().getMailID());
    				entity.setAddress(dbResponse.get().getAddress());
    				entity.setStatus(dbResponse.get().getStatus());
    				
    				saveEntities.add(entity);
    			}else if(insertData.getId()!=null && insertData.getStreamName()!=null) {
    				entity.setId(dbResponse.get().getId());
    				entity.setRid(dbResponse.get().getRid());
    				entity.setName(dbResponse.get().getName());
    				entity.setParentName(dbResponse.get);
    				entity.setStreamName(dbResponse.get().getStreamName());
    				entity.setDOB(dbResponse.get().getDOB());
    				entity.setPOY(dbResponse.get().getPOY());
    				entity.setMobileNumber(dbResponse.get().getMobileNumber());
    				entity.setMailID(dbResponse.get().getMailID());
    				entity.setAddress(dbResponse.get().getAddress());
    				entity.setStatus(dbResponse.get().getStatus());
    				
    				saveEntities.add(entity);
    			}else if(insertData.getId()!=null && insertData.getDOB()!=null) {
    				
    			}else if(insertData.getId()!=null && insertData.getPOY()!=null) {
    				
    			}else if(insertData.getId()!=null && insertData.getMobileNumber()!=null) {
    				
    			}else if(insertData.getId()!=null && insertData.getMailID()!=null) {
    				
    			}else if(insertData.getId()!=null && insertData.getAddress()!=null) {
    				
    			}else (insertData.getId()!=null && insertData.getStatus()!=null) {
    				
    			}
    			
    		}
    	}catch() {
    		
    	}
    }
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2038)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2243)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3278)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3055)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:540)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:132)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:94)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:91)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:158)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)

!ENTRY org.eclipse.jdt.ui 4 2 2025-06-10 23:50:32.756
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2038)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2243)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3278)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3055)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:540)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:132)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:94)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:91)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:158)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)

!ENTRY org.eclipse.jdt.ui 4 0 2025-06-10 23:50:32.760
!MESSAGE Error in JDT Core during reconcile
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2038)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2243)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3278)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3055)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:540)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:132)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:94)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:91)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:158)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)

!ENTRY org.eclipse.jdt.core 4 4 2025-06-10 23:50:34.650
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package com.example.EMSbackend.Service;

import java.util.ArrayList;
import java.util.List;
import java.util.Optional;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import com.example.EMSbackend.DTO.EMSGetAllDTO;
import com.example.EMSbackend.DTO.EMSInsertMultipleRequestDTO;
import com.example.EMSbackend.DTO.EMSInsertMultipleResponseDTO;
import com.example.EMSbackend.DTO.EMSInsertSingleRequestDTO;
import com.example.EMSbackend.DTO.EMSInsertSingleResponseDTO;
import com.example.EMSbackend.DTO.EMSUpdateRequestDTO;
import com.example.EMSbackend.DTO.EMSUpdateResponseDTO;
import com.example.EMSbackend.Model.EMSModel;
import com.example.EMSbackend.Repository.EMSRepository;

import lombok.extern.slf4j.Slf4j;

@Slf4j
@Service
public class EMSService {

	@Autowired
	private EMSRepository emsRepository;
	
	
//GET_ALL_EMPLOYEE_DETAILS
    public EMSGetAllDTO getEmployeeDetailsAll() {
    	EMSGetAllDTO response = new EMSGetAllDTO();
    
    	
    	//try { 	
    	List<EMSModel> modelDetails = (List<EMSModel>) emsRepository.findAll();
    	response.setEmployeeDetailsAll(modelDetails);
    	
    	/*if(modelDetails!=null) {
    		response.setEmployeeDetailsAll(modelDetails);
    	}
    	else {
    		System.out.println("Employee not found");
    		//log.info("Service response not found");
    	}
    	
    	}catch (Exception e) {
            System.out.println("Error while fetching employee list: " + e.getMessage());
            e.printStackTrace();
        }*/
    	    
    	return response;
    }
    
//INSERT_ALL_EMPLOYEE_DETAILS(SINGLE_DATA/NOT_LIST)
    public EMSInsertSingleResponseDTO insertEmployeeDetails(EMSInsertSingleRequestDTO requestData) {
    	EMSInsertSingleResponseDTO response = new EMSInsertSingleResponseDTO();
    	String message = "FAILURE";
    	List<EMSModel> entityList = new ArrayList<>();
  
    	try {
    	if (requestData != null) {
    		EMSModel entity = new EMSModel();
    		entity.setId(requestData.getId());
			entity.setRid(requestData.getRid());
			entity.setName(requestData.getName());
			entity.setParentName(requestData.getParentName());
			entity.setStreamName(requestData.getStreamName());
			entity.setDOB(requestData.getDOB());
			entity.setPOY(requestData.getPOY());
			entity.setMobileNumber(requestData.getMobileNumber());
			entity.setMailID(requestData.getMailID());
			entity.setAddress(requestData.getAddress());
			entity.setStatus(requestData.getStatus());
			 
			c
   
			List<EMSModel> savedEntities = emsRepository.saveAll(entityList);
			if (savedEntities != null && !savedEntities.isEmpty()) {
	            message = "SUCCESS";
	            response.setMessage(message);
	            response.setCode("200 OK");
	        } else {
	            response.setMessage("Insert failed");
	            response.setCode("500 INTERNAL SERVER ERROR");
	        }
    	}else {
            response.setMessage("Input list is null or empty");
            response.setCode("400 BAD REQUEST");
        }
    	}catch (Exception e) {
    		e.printStackTrace();
    		response.setMessage("Exception occurred");
            response.setCode("500 INTERNAL SERVER ERROR");
    	}
  
    	return response;
    	
    }
    
    
   
//INSERT_ALL_EMPLOYEE_DETAILS(MULTIPLE/LIST)
    
    public EMSInsertMultipleResponseDTO insertEmployeeDetailsAll(EMSInsertMultipleRequestDTO insertData) {
    	EMSInsertMultipleResponseDTO response = new EMSInsertMultipleResponseDTO();
    	String message = "FAILURE";
    	
    	try {
    		List<EMSModel> dtoList = insertData.getEmployeeDetailsRequestAll();
 
    		if (dtoList != null && !dtoList.isEmpty()) {
    			
    			List<EMSModel> entityList = new ArrayList<>();
    			
    			for (EMSModel dto : dtoList){
    				
    			EMSModel entity = new EMSModel();
    			 entity.setId(dto.getId());
    			 entity.setRid(dto.getRid());
    			 entity.setName(dto.getName());
    			 entity.setParentName(dto.getParentName());
    			 entity.setStreamName(dto.getStreamName());
    			 entity.setDOB(dto.getDOB());
    			 entity.setPOY(dto.getPOY());
    			 entity.setMobileNumber(dto.getMobileNumber());
    			 entity.setMailID(dto.getMailID());
    			 entity.setAddress(dto.getAddress());
    			 entity.setStatus(dto.getStatus());
    			 
    			 entityList.add(entity);
    			}
    			
    			List<EMSModel> savedEntities = emsRepository.saveAll(entityList);
                

                if (savedEntities != null && !savedEntities.isEmpty()) {
                    message = "SUCCESS";
                    response.setMessage(message);
                    response.setCode("200 OK");
                } else {
                    response.setMessage("Insert failed");
                    response.setCode("500 INTERNAL SERVER ERROR");
                }
    			
    		}else {
    			response.setMessage("Input list is null or empty");
                response.setCode("400 BAD REQUEST");
    		}
    	}catch (Exception e) {
    		e.printStackTrace();
    		response.setMessage("Exception occurred");
            response.setCode("500 INTERNAL SERVER ERROR");
    	}
    	return response;
    }
    
//UPDATE
    public EMSUpdateResponseDTO updateEmployeeDetails(EMSUpdateRequestDTO insertData) {
    	EMSUpdateResponseDTO response =new EMSUpdateResponseDTO();
    	List<EMSModel> saveEntities =  new ArrayList<>();
    	try {
    		Optional<EMSModel> dbResponse = emsRepository.findById(insertData.getId());
    		if(dbResponse.isPresent()) {
    			EMSModel entity = new EMSModel();
    			
    			if(insertData.getId()!=null && insertData.getRid()!=null) {
    			
    				entity.setId(dbResponse.get().getId());
    				entity.setRid(insertData.getRid());
    				entity.setName(dbResponse.get().getName());
    				entity.setParentName(dbResponse.get().getParentName());
    				entity.setStreamName(dbResponse.get().getStreamName());
    				entity.setDOB(dbResponse.get().getDOB());
    				entity.setPOY(dbResponse.get().getPOY());
    				entity.setMobileNumber(dbResponse.get().getMobileNumber());
    				entity.setMailID(dbResponse.get().getMailID());
    				entity.setAddress(dbResponse.get().getAddress());
    				entity.setStatus(dbResponse.get().getStatus());
    				
    				saveEntities.add(entity);
    				
    				
    			}else if(insertData.getId()!=null && insertData.getName()!=null) {
    				entity.setId(dbResponse.get().getId());
    				entity.setRid(dbResponse.get().getRid());
    				entity.setName(insertData.getName());
    				entity.setParentName(dbResponse.get().getParentName());
    				entity.setStreamName(dbResponse.get().getStreamName());
    				entity.setDOB(dbResponse.get().getDOB());
    				entity.setPOY(dbResponse.get().getPOY());
    				entity.setMobileNumber(dbResponse.get().getMobileNumber());
    				entity.setMailID(dbResponse.get().getMailID());
    				entity.setAddress(dbResponse.get().getAddress());
    				entity.setStatus(dbResponse.get().getStatus());
    				
    				saveEntities.add(entity);
    			}else if(insertData.getId()!=null && insertData.getParentName()!=null) {
    				entity.setId(dbResponse.get().getId());
    				entity.setRid(dbResponse.get().getRid());
    				entity.setName(dbResponse.get().getName());
    				entity.setParentName(insertData.getParentName());
    				entity.setStreamName(dbResponse.get().getStreamName());
    				entity.setDOB(dbResponse.get().getDOB());
    				entity.setPOY(dbResponse.get().getPOY());
    				entity.setMobileNumber(dbResponse.get().getMobileNumber());
    				entity.setMailID(dbResponse.get().getMailID());
    				entity.setAddress(dbResponse.get().getAddress());
    				entity.setStatus(dbResponse.get().getStatus());
    				
    				saveEntities.add(entity);
    			}else if(insertData.getId()!=null && insertData.getStreamName()!=null) {
    				entity.setId(dbResponse.get().getId());
    				entity.setRid(dbResponse.get().getRid());
    				entity.setName(dbResponse.get().getName());
    				entity.setParentName(dbResponse.get().get);
    				entity.setStreamName(dbResponse.get().getStreamName());
    				entity.setDOB(dbResponse.get().getDOB());
    				entity.setPOY(dbResponse.get().getPOY());
    				entity.setMobileNumber(dbResponse.get().getMobileNumber());
    				entity.setMailID(dbResponse.get().getMailID());
    				entity.setAddress(dbResponse.get().getAddress());
    				entity.setStatus(dbResponse.get().getStatus());
    				
    				saveEntities.add(entity);
    			}else if(insertData.getId()!=null && insertData.getDOB()!=null) {
    				
    			}else if(insertData.getId()!=null && insertData.getPOY()!=null) {
    				
    			}else if(insertData.getId()!=null && insertData.getMobileNumber()!=null) {
    				
    			}else if(insertData.getId()!=null && insertData.getMailID()!=null) {
    				
    			}else if(insertData.getId()!=null && insertData.getAddress()!=null) {
    				
    			}else (insertData.getId()!=null && insertData.getStatus()!=null) {
    				
    			}
    			
    		}
    	}catch() {
    		
    	}
    }
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2038)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2243)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3278)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3055)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:540)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:132)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:94)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:91)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:158)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)

!ENTRY org.eclipse.jdt.ui 4 2 2025-06-10 23:50:34.655
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2038)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2243)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3278)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3055)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:540)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:132)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:94)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:91)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:158)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)

!ENTRY org.eclipse.jdt.ui 4 0 2025-06-10 23:50:34.659
!MESSAGE Error in JDT Core during reconcile
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2038)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2243)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3278)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3055)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:540)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:132)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:94)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:91)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:158)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)

!ENTRY org.eclipse.jdt.core 4 4 2025-06-10 23:50:34.747
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package com.example.EMSbackend.Service;

import java.util.ArrayList;
import java.util.List;
import java.util.Optional;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import com.example.EMSbackend.DTO.EMSGetAllDTO;
import com.example.EMSbackend.DTO.EMSInsertMultipleRequestDTO;
import com.example.EMSbackend.DTO.EMSInsertMultipleResponseDTO;
import com.example.EMSbackend.DTO.EMSInsertSingleRequestDTO;
import com.example.EMSbackend.DTO.EMSInsertSingleResponseDTO;
import com.example.EMSbackend.DTO.EMSUpdateRequestDTO;
import com.example.EMSbackend.DTO.EMSUpdateResponseDTO;
import com.example.EMSbackend.Model.EMSModel;
import com.example.EMSbackend.Repository.EMSRepository;

import lombok.extern.slf4j.Slf4j;

@Slf4j
@Service
public class EMSService {

	@Autowired
	private EMSRepository emsRepository;
	
	
//GET_ALL_EMPLOYEE_DETAILS
    public EMSGetAllDTO getEmployeeDetailsAll() {
    	EMSGetAllDTO response = new EMSGetAllDTO();
    
    	
    	//try { 	
    	List<EMSModel> modelDetails = (List<EMSModel>) emsRepository.findAll();
    	response.setEmployeeDetailsAll(modelDetails);
    	
    	/*if(modelDetails!=null) {
    		response.setEmployeeDetailsAll(modelDetails);
    	}
    	else {
    		System.out.println("Employee not found");
    		//log.info("Service response not found");
    	}
    	
    	}catch (Exception e) {
            System.out.println("Error while fetching employee list: " + e.getMessage());
            e.printStackTrace();
        }*/
    	    
    	return response;
    }
    
//INSERT_ALL_EMPLOYEE_DETAILS(SINGLE_DATA/NOT_LIST)
    public EMSInsertSingleResponseDTO insertEmployeeDetails(EMSInsertSingleRequestDTO requestData) {
    	EMSInsertSingleResponseDTO response = new EMSInsertSingleResponseDTO();
    	String message = "FAILURE";
    	List<EMSModel> entityList = new ArrayList<>();
  
    	try {
    	if (requestData != null) {
    		EMSModel entity = new EMSModel();
    		entity.setId(requestData.getId());
			entity.setRid(requestData.getRid());
			entity.setName(requestData.getName());
			entity.setParentName(requestData.getParentName());
			entity.setStreamName(requestData.getStreamName());
			entity.setDOB(requestData.getDOB());
			entity.setPOY(requestData.getPOY());
			entity.setMobileNumber(requestData.getMobileNumber());
			entity.setMailID(requestData.getMailID());
			entity.setAddress(requestData.getAddress());
			entity.setStatus(requestData.getStatus());
			 
			c
   
			List<EMSModel> savedEntities = emsRepository.saveAll(entityList);
			if (savedEntities != null && !savedEntities.isEmpty()) {
	            message = "SUCCESS";
	            response.setMessage(message);
	            response.setCode("200 OK");
	        } else {
	            response.setMessage("Insert failed");
	            response.setCode("500 INTERNAL SERVER ERROR");
	        }
    	}else {
            response.setMessage("Input list is null or empty");
            response.setCode("400 BAD REQUEST");
        }
    	}catch (Exception e) {
    		e.printStackTrace();
    		response.setMessage("Exception occurred");
            response.setCode("500 INTERNAL SERVER ERROR");
    	}
  
    	return response;
    	
    }
    
    
   
//INSERT_ALL_EMPLOYEE_DETAILS(MULTIPLE/LIST)
    
    public EMSInsertMultipleResponseDTO insertEmployeeDetailsAll(EMSInsertMultipleRequestDTO insertData) {
    	EMSInsertMultipleResponseDTO response = new EMSInsertMultipleResponseDTO();
    	String message = "FAILURE";
    	
    	try {
    		List<EMSModel> dtoList = insertData.getEmployeeDetailsRequestAll();
 
    		if (dtoList != null && !dtoList.isEmpty()) {
    			
    			List<EMSModel> entityList = new ArrayList<>();
    			
    			for (EMSModel dto : dtoList){
    				
    			EMSModel entity = new EMSModel();
    			 entity.setId(dto.getId());
    			 entity.setRid(dto.getRid());
    			 entity.setName(dto.getName());
    			 entity.setParentName(dto.getParentName());
    			 entity.setStreamName(dto.getStreamName());
    			 entity.setDOB(dto.getDOB());
    			 entity.setPOY(dto.getPOY());
    			 entity.setMobileNumber(dto.getMobileNumber());
    			 entity.setMailID(dto.getMailID());
    			 entity.setAddress(dto.getAddress());
    			 entity.setStatus(dto.getStatus());
    			 
    			 entityList.add(entity);
    			}
    			
    			List<EMSModel> savedEntities = emsRepository.saveAll(entityList);
                

                if (savedEntities != null && !savedEntities.isEmpty()) {
                    message = "SUCCESS";
                    response.setMessage(message);
                    response.setCode("200 OK");
                } else {
                    response.setMessage("Insert failed");
                    response.setCode("500 INTERNAL SERVER ERROR");
                }
    			
    		}else {
    			response.setMessage("Input list is null or empty");
                response.setCode("400 BAD REQUEST");
    		}
    	}catch (Exception e) {
    		e.printStackTrace();
    		response.setMessage("Exception occurred");
            response.setCode("500 INTERNAL SERVER ERROR");
    	}
    	return response;
    }
    
//UPDATE
    public EMSUpdateResponseDTO updateEmployeeDetails(EMSUpdateRequestDTO insertData) {
    	EMSUpdateResponseDTO response =new EMSUpdateResponseDTO();
    	List<EMSModel> saveEntities =  new ArrayList<>();
    	try {
    		Optional<EMSModel> dbResponse = emsRepository.findById(insertData.getId());
    		if(dbResponse.isPresent()) {
    			EMSModel entity = new EMSModel();
    			
    			if(insertData.getId()!=null && insertData.getRid()!=null) {
    			
    				entity.setId(dbResponse.get().getId());
    				entity.setRid(insertData.getRid());
    				entity.setName(dbResponse.get().getName());
    				entity.setParentName(dbResponse.get().getParentName());
    				entity.setStreamName(dbResponse.get().getStreamName());
    				entity.setDOB(dbResponse.get().getDOB());
    				entity.setPOY(dbResponse.get().getPOY());
    				entity.setMobileNumber(dbResponse.get().getMobileNumber());
    				entity.setMailID(dbResponse.get().getMailID());
    				entity.setAddress(dbResponse.get().getAddress());
    				entity.setStatus(dbResponse.get().getStatus());
    				
    				saveEntities.add(entity);
    				
    				
    			}else if(insertData.getId()!=null && insertData.getName()!=null) {
    				entity.setId(dbResponse.get().getId());
    				entity.setRid(dbResponse.get().getRid());
    				entity.setName(insertData.getName());
    				entity.setParentName(dbResponse.get().getParentName());
    				entity.setStreamName(dbResponse.get().getStreamName());
    				entity.setDOB(dbResponse.get().getDOB());
    				entity.setPOY(dbResponse.get().getPOY());
    				entity.setMobileNumber(dbResponse.get().getMobileNumber());
    				entity.setMailID(dbResponse.get().getMailID());
    				entity.setAddress(dbResponse.get().getAddress());
    				entity.setStatus(dbResponse.get().getStatus());
    				
    				saveEntities.add(entity);
    			}else if(insertData.getId()!=null && insertData.getParentName()!=null) {
    				entity.setId(dbResponse.get().getId());
    				entity.setRid(dbResponse.get().getRid());
    				entity.setName(dbResponse.get().getName());
    				entity.setParentName(insertData.getParentName());
    				entity.setStreamName(dbResponse.get().getStreamName());
    				entity.setDOB(dbResponse.get().getDOB());
    				entity.setPOY(dbResponse.get().getPOY());
    				entity.setMobileNumber(dbResponse.get().getMobileNumber());
    				entity.setMailID(dbResponse.get().getMailID());
    				entity.setAddress(dbResponse.get().getAddress());
    				entity.setStatus(dbResponse.get().getStatus());
    				
    				saveEntities.add(entity);
    			}else if(insertData.getId()!=null && insertData.getStreamName()!=null) {
    				entity.setId(dbResponse.get().getId());
    				entity.setRid(dbResponse.get().getRid());
    				entity.setName(dbResponse.get().getName());
    				entity.setParentName(dbResponse.get().get);
    				entity.setStreamName(dbResponse.get().getStreamName());
    				entity.setDOB(dbResponse.get().getDOB());
    				entity.setPOY(dbResponse.get().getPOY());
    				entity.setMobileNumber(dbResponse.get().getMobileNumber());
    				entity.setMailID(dbResponse.get().getMailID());
    				entity.setAddress(dbResponse.get().getAddress());
    				entity.setStatus(dbResponse.get().getStatus());
    				
    				saveEntities.add(entity);
    			}else if(insertData.getId()!=null && insertData.getDOB()!=null) {
    				
    			}else if(insertData.getId()!=null && insertData.getPOY()!=null) {
    				
    			}else if(insertData.getId()!=null && insertData.getMobileNumber()!=null) {
    				
    			}else if(insertData.getId()!=null && insertData.getMailID()!=null) {
    				
    			}else if(insertData.getId()!=null && insertData.getAddress()!=null) {
    				
    			}else (insertData.getId()!=null && insertData.getStatus()!=null) {
    				
    			}
    			
    		}
    	}catch() {
    		
    	}
    }
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2038)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2243)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3278)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3055)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2025-06-10 23:50:34.752
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2038)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2243)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3278)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3055)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2025-06-10 23:50:34.756
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2038)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2243)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3278)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3055)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core 4 4 2025-06-10 23:50:39.570
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package com.example.EMSbackend.Service;

import java.util.ArrayList;
import java.util.List;
import java.util.Optional;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import com.example.EMSbackend.DTO.EMSGetAllDTO;
import com.example.EMSbackend.DTO.EMSInsertMultipleRequestDTO;
import com.example.EMSbackend.DTO.EMSInsertMultipleResponseDTO;
import com.example.EMSbackend.DTO.EMSInsertSingleRequestDTO;
import com.example.EMSbackend.DTO.EMSInsertSingleResponseDTO;
import com.example.EMSbackend.DTO.EMSUpdateRequestDTO;
import com.example.EMSbackend.DTO.EMSUpdateResponseDTO;
import com.example.EMSbackend.Model.EMSModel;
import com.example.EMSbackend.Repository.EMSRepository;

import lombok.extern.slf4j.Slf4j;

@Slf4j
@Service
public class EMSService {

	@Autowired
	private EMSRepository emsRepository;
	
	
//GET_ALL_EMPLOYEE_DETAILS
    public EMSGetAllDTO getEmployeeDetailsAll() {
    	EMSGetAllDTO response = new EMSGetAllDTO();
    
    	
    	//try { 	
    	List<EMSModel> modelDetails = (List<EMSModel>) emsRepository.findAll();
    	response.setEmployeeDetailsAll(modelDetails);
    	
    	/*if(modelDetails!=null) {
    		response.setEmployeeDetailsAll(modelDetails);
    	}
    	else {
    		System.out.println("Employee not found");
    		//log.info("Service response not found");
    	}
    	
    	}catch (Exception e) {
            System.out.println("Error while fetching employee list: " + e.getMessage());
            e.printStackTrace();
        }*/
    	    
    	return response;
    }
    
//INSERT_ALL_EMPLOYEE_DETAILS(SINGLE_DATA/NOT_LIST)
    public EMSInsertSingleResponseDTO insertEmployeeDetails(EMSInsertSingleRequestDTO requestData) {
    	EMSInsertSingleResponseDTO response = new EMSInsertSingleResponseDTO();
    	String message = "FAILURE";
    	List<EMSModel> entityList = new ArrayList<>();
  
    	try {
    	if (requestData != null) {
    		EMSModel entity = new EMSModel();
    		entity.setId(requestData.getId());
			entity.setRid(requestData.getRid());
			entity.setName(requestData.getName());
			entity.setParentName(requestData.getParentName());
			entity.setStreamName(requestData.getStreamName());
			entity.setDOB(requestData.getDOB());
			entity.setPOY(requestData.getPOY());
			entity.setMobileNumber(requestData.getMobileNumber());
			entity.setMailID(requestData.getMailID());
			entity.setAddress(requestData.getAddress());
			entity.setStatus(requestData.getStatus());
			 
			c
   
			List<EMSModel> savedEntities = emsRepository.saveAll(entityList);
			if (savedEntities != null && !savedEntities.isEmpty()) {
	            message = "SUCCESS";
	            response.setMessage(message);
	            response.setCode("200 OK");
	        } else {
	            response.setMessage("Insert failed");
	            response.setCode("500 INTERNAL SERVER ERROR");
	        }
    	}else {
            response.setMessage("Input list is null or empty");
            response.setCode("400 BAD REQUEST");
        }
    	}catch (Exception e) {
    		e.printStackTrace();
    		response.setMessage("Exception occurred");
            response.setCode("500 INTERNAL SERVER ERROR");
    	}
  
    	return response;
    	
    }
    
    
   
//INSERT_ALL_EMPLOYEE_DETAILS(MULTIPLE/LIST)
    
    public EMSInsertMultipleResponseDTO insertEmployeeDetailsAll(EMSInsertMultipleRequestDTO insertData) {
    	EMSInsertMultipleResponseDTO response = new EMSInsertMultipleResponseDTO();
    	String message = "FAILURE";
    	
    	try {
    		List<EMSModel> dtoList = insertData.getEmployeeDetailsRequestAll();
 
    		if (dtoList != null && !dtoList.isEmpty()) {
    			
    			List<EMSModel> entityList = new ArrayList<>();
    			
    			for (EMSModel dto : dtoList){
    				
    			EMSModel entity = new EMSModel();
    			 entity.setId(dto.getId());
    			 entity.setRid(dto.getRid());
    			 entity.setName(dto.getName());
    			 entity.setParentName(dto.getParentName());
    			 entity.setStreamName(dto.getStreamName());
    			 entity.setDOB(dto.getDOB());
    			 entity.setPOY(dto.getPOY());
    			 entity.setMobileNumber(dto.getMobileNumber());
    			 entity.setMailID(dto.getMailID());
    			 entity.setAddress(dto.getAddress());
    			 entity.setStatus(dto.getStatus());
    			 
    			 entityList.add(entity);
    			}
    			
    			List<EMSModel> savedEntities = emsRepository.saveAll(entityList);
                

                if (savedEntities != null && !savedEntities.isEmpty()) {
                    message = "SUCCESS";
                    response.setMessage(message);
                    response.setCode("200 OK");
                } else {
                    response.setMessage("Insert failed");
                    response.setCode("500 INTERNAL SERVER ERROR");
                }
    			
    		}else {
    			response.setMessage("Input list is null or empty");
                response.setCode("400 BAD REQUEST");
    		}
    	}catch (Exception e) {
    		e.printStackTrace();
    		response.setMessage("Exception occurred");
            response.setCode("500 INTERNAL SERVER ERROR");
    	}
    	return response;
    }
    
//UPDATE
    public EMSUpdateResponseDTO updateEmployeeDetails(EMSUpdateRequestDTO insertData) {
    	EMSUpdateResponseDTO response =new EMSUpdateResponseDTO();
    	List<EMSModel> saveEntities =  new ArrayList<>();
    	try {
    		Optional<EMSModel> dbResponse = emsRepository.findById(insertData.getId());
    		if(dbResponse.isPresent()) {
    			EMSModel entity = new EMSModel();
    			
    			if(insertData.getId()!=null && insertData.getRid()!=null) {
    			
    				entity.setId(dbResponse.get().getId());
    				entity.setRid(insertData.getRid());
    				entity.setName(dbResponse.get().getName());
    				entity.setParentName(dbResponse.get().getParentName());
    				entity.setStreamName(dbResponse.get().getStreamName());
    				entity.setDOB(dbResponse.get().getDOB());
    				entity.setPOY(dbResponse.get().getPOY());
    				entity.setMobileNumber(dbResponse.get().getMobileNumber());
    				entity.setMailID(dbResponse.get().getMailID());
    				entity.setAddress(dbResponse.get().getAddress());
    				entity.setStatus(dbResponse.get().getStatus());
    				
    				saveEntities.add(entity);
    				
    				
    			}else if(insertData.getId()!=null && insertData.getName()!=null) {
    				entity.setId(dbResponse.get().getId());
    				entity.setRid(dbResponse.get().getRid());
    				entity.setName(insertData.getName());
    				entity.setParentName(dbResponse.get().getParentName());
    				entity.setStreamName(dbResponse.get().getStreamName());
    				entity.setDOB(dbResponse.get().getDOB());
    				entity.setPOY(dbResponse.get().getPOY());
    				entity.setMobileNumber(dbResponse.get().getMobileNumber());
    				entity.setMailID(dbResponse.get().getMailID());
    				entity.setAddress(dbResponse.get().getAddress());
    				entity.setStatus(dbResponse.get().getStatus());
    				
    				saveEntities.add(entity);
    			}else if(insertData.getId()!=null && insertData.getParentName()!=null) {
    				entity.setId(dbResponse.get().getId());
    				entity.setRid(dbResponse.get().getRid());
    				entity.setName(dbResponse.get().getName());
    				entity.setParentName(insertData.getParentName());
    				entity.setStreamName(dbResponse.get().getStreamName());
    				entity.setDOB(dbResponse.get().getDOB());
    				entity.setPOY(dbResponse.get().getPOY());
    				entity.setMobileNumber(dbResponse.get().getMobileNumber());
    				entity.setMailID(dbResponse.get().getMailID());
    				entity.setAddress(dbResponse.get().getAddress());
    				entity.setStatus(dbResponse.get().getStatus());
    				
    				saveEntities.add(entity);
    			}else if(insertData.getId()!=null && insertData.getStreamName()!=null) {
    				entity.setId(dbResponse.get().getId());
    				entity.setRid(dbResponse.get().getRid());
    				entity.setName(dbResponse.get().getName());
    				entity.setParentName(dbResponse.get().getStreamName());
    				entity.setStreamName(dbResponse.get().getStreamName());
    				entity.setDOB(dbResponse.get().getDOB());
    				entity.setPOY(dbResponse.get().getPOY());
    				entity.setMobileNumber(dbResponse.get().getMobileNumber());
    				entity.setMailID(dbResponse.get().getMailID());
    				entity.setAddress(dbResponse.get().getAddress());
    				entity.setStatus(dbResponse.get().getStatus());
    				
    				saveEntities.add(entity);
    			}else if(insertData.getId()!=null && insertData.getDOB()!=null) {
    				
    			}else if(insertData.getId()!=null && insertData.getPOY()!=null) {
    				
    			}else if(insertData.getId()!=null && insertData.getMobileNumber()!=null) {
    				
    			}else if(insertData.getId()!=null && insertData.getMailID()!=null) {
    				
    			}else if(insertData.getId()!=null && insertData.getAddress()!=null) {
    				
    			}else (insertData.getId()!=null && insertData.getStatus()!=null) {
    				
    			}
    			
    		}
    	}catch() {
    		
    	}
    }
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2038)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2243)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3278)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3055)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:540)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:132)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:94)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:91)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:158)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)

!ENTRY org.eclipse.jdt.ui 4 2 2025-06-10 23:50:39.574
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2038)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2243)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3278)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3055)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:540)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:132)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:94)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:91)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:158)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)

!ENTRY org.eclipse.jdt.ui 4 0 2025-06-10 23:50:39.575
!MESSAGE Error in JDT Core during reconcile
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2038)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2243)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3278)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3055)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:540)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:132)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:94)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:91)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:158)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)

!ENTRY org.eclipse.jdt.core 4 4 2025-06-10 23:50:39.625
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package com.example.EMSbackend.Service;

import java.util.ArrayList;
import java.util.List;
import java.util.Optional;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import com.example.EMSbackend.DTO.EMSGetAllDTO;
import com.example.EMSbackend.DTO.EMSInsertMultipleRequestDTO;
import com.example.EMSbackend.DTO.EMSInsertMultipleResponseDTO;
import com.example.EMSbackend.DTO.EMSInsertSingleRequestDTO;
import com.example.EMSbackend.DTO.EMSInsertSingleResponseDTO;
import com.example.EMSbackend.DTO.EMSUpdateRequestDTO;
import com.example.EMSbackend.DTO.EMSUpdateResponseDTO;
import com.example.EMSbackend.Model.EMSModel;
import com.example.EMSbackend.Repository.EMSRepository;

import lombok.extern.slf4j.Slf4j;

@Slf4j
@Service
public class EMSService {

	@Autowired
	private EMSRepository emsRepository;
	
	
//GET_ALL_EMPLOYEE_DETAILS
    public EMSGetAllDTO getEmployeeDetailsAll() {
    	EMSGetAllDTO response = new EMSGetAllDTO();
    
    	
    	//try { 	
    	List<EMSModel> modelDetails = (List<EMSModel>) emsRepository.findAll();
    	response.setEmployeeDetailsAll(modelDetails);
    	
    	/*if(modelDetails!=null) {
    		response.setEmployeeDetailsAll(modelDetails);
    	}
    	else {
    		System.out.println("Employee not found");
    		//log.info("Service response not found");
    	}
    	
    	}catch (Exception e) {
            System.out.println("Error while fetching employee list: " + e.getMessage());
            e.printStackTrace();
        }*/
    	    
    	return response;
    }
    
//INSERT_ALL_EMPLOYEE_DETAILS(SINGLE_DATA/NOT_LIST)
    public EMSInsertSingleResponseDTO insertEmployeeDetails(EMSInsertSingleRequestDTO requestData) {
    	EMSInsertSingleResponseDTO response = new EMSInsertSingleResponseDTO();
    	String message = "FAILURE";
    	List<EMSModel> entityList = new ArrayList<>();
  
    	try {
    	if (requestData != null) {
    		EMSModel entity = new EMSModel();
    		entity.setId(requestData.getId());
			entity.setRid(requestData.getRid());
			entity.setName(requestData.getName());
			entity.setParentName(requestData.getParentName());
			entity.setStreamName(requestData.getStreamName());
			entity.setDOB(requestData.getDOB());
			entity.setPOY(requestData.getPOY());
			entity.setMobileNumber(requestData.getMobileNumber());
			entity.setMailID(requestData.getMailID());
			entity.setAddress(requestData.getAddress());
			entity.setStatus(requestData.getStatus());
			 
			c
   
			List<EMSModel> savedEntities = emsRepository.saveAll(entityList);
			if (savedEntities != null && !savedEntities.isEmpty()) {
	            message = "SUCCESS";
	            response.setMessage(message);
	            response.setCode("200 OK");
	        } else {
	            response.setMessage("Insert failed");
	            response.setCode("500 INTERNAL SERVER ERROR");
	        }
    	}else {
            response.setMessage("Input list is null or empty");
            response.setCode("400 BAD REQUEST");
        }
    	}catch (Exception e) {
    		e.printStackTrace();
    		response.setMessage("Exception occurred");
            response.setCode("500 INTERNAL SERVER ERROR");
    	}
  
    	return response;
    	
    }
    
    
   
//INSERT_ALL_EMPLOYEE_DETAILS(MULTIPLE/LIST)
    
    public EMSInsertMultipleResponseDTO insertEmployeeDetailsAll(EMSInsertMultipleRequestDTO insertData) {
    	EMSInsertMultipleResponseDTO response = new EMSInsertMultipleResponseDTO();
    	String message = "FAILURE";
    	
    	try {
    		List<EMSModel> dtoList = insertData.getEmployeeDetailsRequestAll();
 
    		if (dtoList != null && !dtoList.isEmpty()) {
    			
    			List<EMSModel> entityList = new ArrayList<>();
    			
    			for (EMSModel dto : dtoList){
    				
    			EMSModel entity = new EMSModel();
    			 entity.setId(dto.getId());
    			 entity.setRid(dto.getRid());
    			 entity.setName(dto.getName());
    			 entity.setParentName(dto.getParentName());
    			 entity.setStreamName(dto.getStreamName());
    			 entity.setDOB(dto.getDOB());
    			 entity.setPOY(dto.getPOY());
    			 entity.setMobileNumber(dto.getMobileNumber());
    			 entity.setMailID(dto.getMailID());
    			 entity.setAddress(dto.getAddress());
    			 entity.setStatus(dto.getStatus());
    			 
    			 entityList.add(entity);
    			}
    			
    			List<EMSModel> savedEntities = emsRepository.saveAll(entityList);
                

                if (savedEntities != null && !savedEntities.isEmpty()) {
                    message = "SUCCESS";
                    response.setMessage(message);
                    response.setCode("200 OK");
                } else {
                    response.setMessage("Insert failed");
                    response.setCode("500 INTERNAL SERVER ERROR");
                }
    			
    		}else {
    			response.setMessage("Input list is null or empty");
                response.setCode("400 BAD REQUEST");
    		}
    	}catch (Exception e) {
    		e.printStackTrace();
    		response.setMessage("Exception occurred");
            response.setCode("500 INTERNAL SERVER ERROR");
    	}
    	return response;
    }
    
//UPDATE
    public EMSUpdateResponseDTO updateEmployeeDetails(EMSUpdateRequestDTO insertData) {
    	EMSUpdateResponseDTO response =new EMSUpdateResponseDTO();
    	List<EMSModel> saveEntities =  new ArrayList<>();
    	try {
    		Optional<EMSModel> dbResponse = emsRepository.findById(insertData.getId());
    		if(dbResponse.isPresent()) {
    			EMSModel entity = new EMSModel();
    			
    			if(insertData.getId()!=null && insertData.getRid()!=null) {
    			
    				entity.setId(dbResponse.get().getId());
    				entity.setRid(insertData.getRid());
    				entity.setName(dbResponse.get().getName());
    				entity.setParentName(dbResponse.get().getParentName());
    				entity.setStreamName(dbResponse.get().getStreamName());
    				entity.setDOB(dbResponse.get().getDOB());
    				entity.setPOY(dbResponse.get().getPOY());
    				entity.setMobileNumber(dbResponse.get().getMobileNumber());
    				entity.setMailID(dbResponse.get().getMailID());
    				entity.setAddress(dbResponse.get().getAddress());
    				entity.setStatus(dbResponse.get().getStatus());
    				
    				saveEntities.add(entity);
    				
    				
    			}else if(insertData.getId()!=null && insertData.getName()!=null) {
    				entity.setId(dbResponse.get().getId());
    				entity.setRid(dbResponse.get().getRid());
    				entity.setName(insertData.getName());
    				entity.setParentName(dbResponse.get().getParentName());
    				entity.setStreamName(dbResponse.get().getStreamName());
    				entity.setDOB(dbResponse.get().getDOB());
    				entity.setPOY(dbResponse.get().getPOY());
    				entity.setMobileNumber(dbResponse.get().getMobileNumber());
    				entity.setMailID(dbResponse.get().getMailID());
    				entity.setAddress(dbResponse.get().getAddress());
    				entity.setStatus(dbResponse.get().getStatus());
    				
    				saveEntities.add(entity);
    			}else if(insertData.getId()!=null && insertData.getParentName()!=null) {
    				entity.setId(dbResponse.get().getId());
    				entity.setRid(dbResponse.get().getRid());
    				entity.setName(dbResponse.get().getName());
    				entity.setParentName(insertData.getParentName());
    				entity.setStreamName(dbResponse.get().getStreamName());
    				entity.setDOB(dbResponse.get().getDOB());
    				entity.setPOY(dbResponse.get().getPOY());
    				entity.setMobileNumber(dbResponse.get().getMobileNumber());
    				entity.setMailID(dbResponse.get().getMailID());
    				entity.setAddress(dbResponse.get().getAddress());
    				entity.setStatus(dbResponse.get().getStatus());
    				
    				saveEntities.add(entity);
    			}else if(insertData.getId()!=null && insertData.getStreamName()!=null) {
    				entity.setId(dbResponse.get().getId());
    				entity.setRid(dbResponse.get().getRid());
    				entity.setName(dbResponse.get().getName());
    				entity.setParentName(dbResponse.get().getStreamName());
    				entity.setStreamName(dbResponse.get().getStreamName());
    				entity.setDOB(dbResponse.get().getDOB());
    				entity.setPOY(dbResponse.get().getPOY());
    				entity.setMobileNumber(dbResponse.get().getMobileNumber());
    				entity.setMailID(dbResponse.get().getMailID());
    				entity.setAddress(dbResponse.get().getAddress());
    				entity.setStatus(dbResponse.get().getStatus());
    				
    				saveEntities.add(entity);
    			}else if(insertData.getId()!=null && insertData.getDOB()!=null) {
    				
    			}else if(insertData.getId()!=null && insertData.getPOY()!=null) {
    				
    			}else if(insertData.getId()!=null && insertData.getMobileNumber()!=null) {
    				
    			}else if(insertData.getId()!=null && insertData.getMailID()!=null) {
    				
    			}else if(insertData.getId()!=null && insertData.getAddress()!=null) {
    				
    			}else (insertData.getId()!=null && insertData.getStatus()!=null) {
    				
    			}
    			
    		}
    	}catch() {
    		
    	}
    }
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2038)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2243)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3278)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3055)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2025-06-10 23:50:39.628
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2038)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2243)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3278)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3055)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2025-06-10 23:50:39.631
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2038)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2243)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3278)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3055)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core 4 4 2025-06-10 23:50:44.617
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package com.example.EMSbackend.Service;

import java.util.ArrayList;
import java.util.List;
import java.util.Optional;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import com.example.EMSbackend.DTO.EMSGetAllDTO;
import com.example.EMSbackend.DTO.EMSInsertMultipleRequestDTO;
import com.example.EMSbackend.DTO.EMSInsertMultipleResponseDTO;
import com.example.EMSbackend.DTO.EMSInsertSingleRequestDTO;
import com.example.EMSbackend.DTO.EMSInsertSingleResponseDTO;
import com.example.EMSbackend.DTO.EMSUpdateRequestDTO;
import com.example.EMSbackend.DTO.EMSUpdateResponseDTO;
import com.example.EMSbackend.Model.EMSModel;
import com.example.EMSbackend.Repository.EMSRepository;

import lombok.extern.slf4j.Slf4j;

@Slf4j
@Service
public class EMSService {

	@Autowired
	private EMSRepository emsRepository;
	
	
//GET_ALL_EMPLOYEE_DETAILS
    public EMSGetAllDTO getEmployeeDetailsAll() {
    	EMSGetAllDTO response = new EMSGetAllDTO();
    
    	
    	//try { 	
    	List<EMSModel> modelDetails = (List<EMSModel>) emsRepository.findAll();
    	response.setEmployeeDetailsAll(modelDetails);
    	
    	/*if(modelDetails!=null) {
    		response.setEmployeeDetailsAll(modelDetails);
    	}
    	else {
    		System.out.println("Employee not found");
    		//log.info("Service response not found");
    	}
    	
    	}catch (Exception e) {
            System.out.println("Error while fetching employee list: " + e.getMessage());
            e.printStackTrace();
        }*/
    	    
    	return response;
    }
    
//INSERT_ALL_EMPLOYEE_DETAILS(SINGLE_DATA/NOT_LIST)
    public EMSInsertSingleResponseDTO insertEmployeeDetails(EMSInsertSingleRequestDTO requestData) {
    	EMSInsertSingleResponseDTO response = new EMSInsertSingleResponseDTO();
    	String message = "FAILURE";
    	List<EMSModel> entityList = new ArrayList<>();
  
    	try {
    	if (requestData != null) {
    		EMSModel entity = new EMSModel();
    		entity.setId(requestData.getId());
			entity.setRid(requestData.getRid());
			entity.setName(requestData.getName());
			entity.setParentName(requestData.getParentName());
			entity.setStreamName(requestData.getStreamName());
			entity.setDOB(requestData.getDOB());
			entity.setPOY(requestData.getPOY());
			entity.setMobileNumber(requestData.getMobileNumber());
			entity.setMailID(requestData.getMailID());
			entity.setAddress(requestData.getAddress());
			entity.setStatus(requestData.getStatus());
			 
			c
   
			List<EMSModel> savedEntities = emsRepository.saveAll(entityList);
			if (savedEntities != null && !savedEntities.isEmpty()) {
	            message = "SUCCESS";
	            response.setMessage(message);
	            response.setCode("200 OK");
	        } else {
	            response.setMessage("Insert failed");
	            response.setCode("500 INTERNAL SERVER ERROR");
	        }
    	}else {
            response.setMessage("Input list is null or empty");
            response.setCode("400 BAD REQUEST");
        }
    	}catch (Exception e) {
    		e.printStackTrace();
    		response.setMessage("Exception occurred");
            response.setCode("500 INTERNAL SERVER ERROR");
    	}
  
    	return response;
    	
    }
    
    
   
//INSERT_ALL_EMPLOYEE_DETAILS(MULTIPLE/LIST)
    
    public EMSInsertMultipleResponseDTO insertEmployeeDetailsAll(EMSInsertMultipleRequestDTO insertData) {
    	EMSInsertMultipleResponseDTO response = new EMSInsertMultipleResponseDTO();
    	String message = "FAILURE";
    	
    	try {
    		List<EMSModel> dtoList = insertData.getEmployeeDetailsRequestAll();
 
    		if (dtoList != null && !dtoList.isEmpty()) {
    			
    			List<EMSModel> entityList = new ArrayList<>();
    			
    			for (EMSModel dto : dtoList){
    				
    			EMSModel entity = new EMSModel();
    			 entity.setId(dto.getId());
    			 entity.setRid(dto.getRid());
    			 entity.setName(dto.getName());
    			 entity.setParentName(dto.getParentName());
    			 entity.setStreamName(dto.getStreamName());
    			 entity.setDOB(dto.getDOB());
    			 entity.setPOY(dto.getPOY());
    			 entity.setMobileNumber(dto.getMobileNumber());
    			 entity.setMailID(dto.getMailID());
    			 entity.setAddress(dto.getAddress());
    			 entity.setStatus(dto.getStatus());
    			 
    			 entityList.add(entity);
    			}
    			
    			List<EMSModel> savedEntities = emsRepository.saveAll(entityList);
                

                if (savedEntities != null && !savedEntities.isEmpty()) {
                    message = "SUCCESS";
                    response.setMessage(message);
                    response.setCode("200 OK");
                } else {
                    response.setMessage("Insert failed");
                    response.setCode("500 INTERNAL SERVER ERROR");
                }
    			
    		}else {
    			response.setMessage("Input list is null or empty");
                response.setCode("400 BAD REQUEST");
    		}
    	}catch (Exception e) {
    		e.printStackTrace();
    		response.setMessage("Exception occurred");
            response.setCode("500 INTERNAL SERVER ERROR");
    	}
    	return response;
    }
    
//UPDATE
    public EMSUpdateResponseDTO updateEmployeeDetails(EMSUpdateRequestDTO insertData) {
    	EMSUpdateResponseDTO response =new EMSUpdateResponseDTO();
    	List<EMSModel> saveEntities =  new ArrayList<>();
    	try {
    		Optional<EMSModel> dbResponse = emsRepository.findById(insertData.getId());
    		if(dbResponse.isPresent()) {
    			EMSModel entity = new EMSModel();
    			
    			if(insertData.getId()!=null && insertData.getRid()!=null) {
    			
    				entity.setId(dbResponse.get().getId());
    				entity.setRid(insertData.getRid());
    				entity.setName(dbResponse.get().getName());
    				entity.setParentName(dbResponse.get().getParentName());
    				entity.setStreamName(dbResponse.get().getStreamName());
    				entity.setDOB(dbResponse.get().getDOB());
    				entity.setPOY(dbResponse.get().getPOY());
    				entity.setMobileNumber(dbResponse.get().getMobileNumber());
    				entity.setMailID(dbResponse.get().getMailID());
    				entity.setAddress(dbResponse.get().getAddress());
    				entity.setStatus(dbResponse.get().getStatus());
    				
    				saveEntities.add(entity);
    				
    				
    			}else if(insertData.getId()!=null && insertData.getName()!=null) {
    				entity.setId(dbResponse.get().getId());
    				entity.setRid(dbResponse.get().getRid());
    				entity.setName(insertData.getName());
    				entity.setParentName(dbResponse.get().getParentName());
    				entity.setStreamName(dbResponse.get().getStreamName());
    				entity.setDOB(dbResponse.get().getDOB());
    				entity.setPOY(dbResponse.get().getPOY());
    				entity.setMobileNumber(dbResponse.get().getMobileNumber());
    				entity.setMailID(dbResponse.get().getMailID());
    				entity.setAddress(dbResponse.get().getAddress());
    				entity.setStatus(dbResponse.get().getStatus());
    				
    				saveEntities.add(entity);
    			}else if(insertData.getId()!=null && insertData.getParentName()!=null) {
    				entity.setId(dbResponse.get().getId());
    				entity.setRid(dbResponse.get().getRid());
    				entity.setName(dbResponse.get().getName());
    				entity.setParentName(insertData.getParentName());
    				entity.setStreamName(dbResponse.get().getStreamName());
    				entity.setDOB(dbResponse.get().getDOB());
    				entity.setPOY(dbResponse.get().getPOY());
    				entity.setMobileNumber(dbResponse.get().getMobileNumber());
    				entity.setMailID(dbResponse.get().getMailID());
    				entity.setAddress(dbResponse.get().getAddress());
    				entity.setStatus(dbResponse.get().getStatus());
    				
    				saveEntities.add(entity);
    			}else if(insertData.getId()!=null && insertData.getStreamName()!=null) {
    				entity.setId(dbResponse.get().getId());
    				entity.setRid(dbResponse.get().getRid());
    				entity.setName(dbResponse.get().getName());
    				entity.setParentName(dbResponse.get().get);
    				entity.setStreamName(dbResponse.get().getStreamName());
    				entity.setDOB(dbResponse.get().getDOB());
    				entity.setPOY(dbResponse.get().getPOY());
    				entity.setMobileNumber(dbResponse.get().getMobileNumber());
    				entity.setMailID(dbResponse.get().getMailID());
    				entity.setAddress(dbResponse.get().getAddress());
    				entity.setStatus(dbResponse.get().getStatus());
    				
    				saveEntities.add(entity);
    			}else if(insertData.getId()!=null && insertData.getDOB()!=null) {
    				
    			}else if(insertData.getId()!=null && insertData.getPOY()!=null) {
    				
    			}else if(insertData.getId()!=null && insertData.getMobileNumber()!=null) {
    				
    			}else if(insertData.getId()!=null && insertData.getMailID()!=null) {
    				
    			}else if(insertData.getId()!=null && insertData.getAddress()!=null) {
    				
    			}else (insertData.getId()!=null && insertData.getStatus()!=null) {
    				
    			}
    			
    		}
    	}catch() {
    		
    	}
    }
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2038)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2243)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3278)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3055)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:540)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:132)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:94)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:91)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:158)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)

!ENTRY org.eclipse.jdt.ui 4 2 2025-06-10 23:50:44.623
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2038)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2243)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3278)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3055)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:540)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:132)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:94)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:91)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:158)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)

!ENTRY org.eclipse.jdt.ui 4 0 2025-06-10 23:50:44.625
!MESSAGE Error in JDT Core during reconcile
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2038)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2243)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3278)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3055)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:540)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:132)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:94)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:91)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:158)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)

!ENTRY org.eclipse.jdt.core 4 4 2025-06-10 23:50:44.643
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package com.example.EMSbackend.Service;

import java.util.ArrayList;
import java.util.List;
import java.util.Optional;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import com.example.EMSbackend.DTO.EMSGetAllDTO;
import com.example.EMSbackend.DTO.EMSInsertMultipleRequestDTO;
import com.example.EMSbackend.DTO.EMSInsertMultipleResponseDTO;
import com.example.EMSbackend.DTO.EMSInsertSingleRequestDTO;
import com.example.EMSbackend.DTO.EMSInsertSingleResponseDTO;
import com.example.EMSbackend.DTO.EMSUpdateRequestDTO;
import com.example.EMSbackend.DTO.EMSUpdateResponseDTO;
import com.example.EMSbackend.Model.EMSModel;
import com.example.EMSbackend.Repository.EMSRepository;

import lombok.extern.slf4j.Slf4j;

@Slf4j
@Service
public class EMSService {

	@Autowired
	private EMSRepository emsRepository;
	
	
//GET_ALL_EMPLOYEE_DETAILS
    public EMSGetAllDTO getEmployeeDetailsAll() {
    	EMSGetAllDTO response = new EMSGetAllDTO();
    
    	
    	//try { 	
    	List<EMSModel> modelDetails = (List<EMSModel>) emsRepository.findAll();
    	response.setEmployeeDetailsAll(modelDetails);
    	
    	/*if(modelDetails!=null) {
    		response.setEmployeeDetailsAll(modelDetails);
    	}
    	else {
    		System.out.println("Employee not found");
    		//log.info("Service response not found");
    	}
    	
    	}catch (Exception e) {
            System.out.println("Error while fetching employee list: " + e.getMessage());
            e.printStackTrace();
        }*/
    	    
    	return response;
    }
    
//INSERT_ALL_EMPLOYEE_DETAILS(SINGLE_DATA/NOT_LIST)
    public EMSInsertSingleResponseDTO insertEmployeeDetails(EMSInsertSingleRequestDTO requestData) {
    	EMSInsertSingleResponseDTO response = new EMSInsertSingleResponseDTO();
    	String message = "FAILURE";
    	List<EMSModel> entityList = new ArrayList<>();
  
    	try {
    	if (requestData != null) {
    		EMSModel entity = new EMSModel();
    		entity.setId(requestData.getId());
			entity.setRid(requestData.getRid());
			entity.setName(requestData.getName());
			entity.setParentName(requestData.getParentName());
			entity.setStreamName(requestData.getStreamName());
			entity.setDOB(requestData.getDOB());
			entity.setPOY(requestData.getPOY());
			entity.setMobileNumber(requestData.getMobileNumber());
			entity.setMailID(requestData.getMailID());
			entity.setAddress(requestData.getAddress());
			entity.setStatus(requestData.getStatus());
			 
			c
   
			List<EMSModel> savedEntities = emsRepository.saveAll(entityList);
			if (savedEntities != null && !savedEntities.isEmpty()) {
	            message = "SUCCESS";
	            response.setMessage(message);
	            response.setCode("200 OK");
	        } else {
	            response.setMessage("Insert failed");
	            response.setCode("500 INTERNAL SERVER ERROR");
	        }
    	}else {
            response.setMessage("Input list is null or empty");
            response.setCode("400 BAD REQUEST");
        }
    	}catch (Exception e) {
    		e.printStackTrace();
    		response.setMessage("Exception occurred");
            response.setCode("500 INTERNAL SERVER ERROR");
    	}
  
    	return response;
    	
    }
    
    
   
//INSERT_ALL_EMPLOYEE_DETAILS(MULTIPLE/LIST)
    
    public EMSInsertMultipleResponseDTO insertEmployeeDetailsAll(EMSInsertMultipleRequestDTO insertData) {
    	EMSInsertMultipleResponseDTO response = new EMSInsertMultipleResponseDTO();
    	String message = "FAILURE";
    	
    	try {
    		List<EMSModel> dtoList = insertData.getEmployeeDetailsRequestAll();
 
    		if (dtoList != null && !dtoList.isEmpty()) {
    			
    			List<EMSModel> entityList = new ArrayList<>();
    			
    			for (EMSModel dto : dtoList){
    				
    			EMSModel entity = new EMSModel();
    			 entity.setId(dto.getId());
    			 entity.setRid(dto.getRid());
    			 entity.setName(dto.getName());
    			 entity.setParentName(dto.getParentName());
    			 entity.setStreamName(dto.getStreamName());
    			 entity.setDOB(dto.getDOB());
    			 entity.setPOY(dto.getPOY());
    			 entity.setMobileNumber(dto.getMobileNumber());
    			 entity.setMailID(dto.getMailID());
    			 entity.setAddress(dto.getAddress());
    			 entity.setStatus(dto.getStatus());
    			 
    			 entityList.add(entity);
    			}
    			
    			List<EMSModel> savedEntities = emsRepository.saveAll(entityList);
                

                if (savedEntities != null && !savedEntities.isEmpty()) {
                    message = "SUCCESS";
                    response.setMessage(message);
                    response.setCode("200 OK");
                } else {
                    response.setMessage("Insert failed");
                    response.setCode("500 INTERNAL SERVER ERROR");
                }
    			
    		}else {
    			response.setMessage("Input list is null or empty");
                response.setCode("400 BAD REQUEST");
    		}
    	}catch (Exception e) {
    		e.printStackTrace();
    		response.setMessage("Exception occurred");
            response.setCode("500 INTERNAL SERVER ERROR");
    	}
    	return response;
    }
    
//UPDATE
    public EMSUpdateResponseDTO updateEmployeeDetails(EMSUpdateRequestDTO insertData) {
    	EMSUpdateResponseDTO response =new EMSUpdateResponseDTO();
    	List<EMSModel> saveEntities =  new ArrayList<>();
    	try {
    		Optional<EMSModel> dbResponse = emsRepository.findById(insertData.getId());
    		if(dbResponse.isPresent()) {
    			EMSModel entity = new EMSModel();
    			
    			if(insertData.getId()!=null && insertData.getRid()!=null) {
    			
    				entity.setId(dbResponse.get().getId());
    				entity.setRid(insertData.getRid());
    				entity.setName(dbResponse.get().getName());
    				entity.setParentName(dbResponse.get().getParentName());
    				entity.setStreamName(dbResponse.get().getStreamName());
    				entity.setDOB(dbResponse.get().getDOB());
    				entity.setPOY(dbResponse.get().getPOY());
    				entity.setMobileNumber(dbResponse.get().getMobileNumber());
    				entity.setMailID(dbResponse.get().getMailID());
    				entity.setAddress(dbResponse.get().getAddress());
    				entity.setStatus(dbResponse.get().getStatus());
    				
    				saveEntities.add(entity);
    				
    				
    			}else if(insertData.getId()!=null && insertData.getName()!=null) {
    				entity.setId(dbResponse.get().getId());
    				entity.setRid(dbResponse.get().getRid());
    				entity.setName(insertData.getName());
    				entity.setParentName(dbResponse.get().getParentName());
    				entity.setStreamName(dbResponse.get().getStreamName());
    				entity.setDOB(dbResponse.get().getDOB());
    				entity.setPOY(dbResponse.get().getPOY());
    				entity.setMobileNumber(dbResponse.get().getMobileNumber());
    				entity.setMailID(dbResponse.get().getMailID());
    				entity.setAddress(dbResponse.get().getAddress());
    				entity.setStatus(dbResponse.get().getStatus());
    				
    				saveEntities.add(entity);
    			}else if(insertData.getId()!=null && insertData.getParentName()!=null) {
    				entity.setId(dbResponse.get().getId());
    				entity.setRid(dbResponse.get().getRid());
    				entity.setName(dbResponse.get().getName());
    				entity.setParentName(insertData.getParentName());
    				entity.setStreamName(dbResponse.get().getStreamName());
    				entity.setDOB(dbResponse.get().getDOB());
    				entity.setPOY(dbResponse.get().getPOY());
    				entity.setMobileNumber(dbResponse.get().getMobileNumber());
    				entity.setMailID(dbResponse.get().getMailID());
    				entity.setAddress(dbResponse.get().getAddress());
    				entity.setStatus(dbResponse.get().getStatus());
    				
    				saveEntities.add(entity);
    			}else if(insertData.getId()!=null && insertData.getStreamName()!=null) {
    				entity.setId(dbResponse.get().getId());
    				entity.setRid(dbResponse.get().getRid());
    				entity.setName(dbResponse.get().getName());
    				entity.setParentName(dbResponse.get().get);
    				entity.setStreamName(dbResponse.get().getStreamName());
    				entity.setDOB(dbResponse.get().getDOB());
    				entity.setPOY(dbResponse.get().getPOY());
    				entity.setMobileNumber(dbResponse.get().getMobileNumber());
    				entity.setMailID(dbResponse.get().getMailID());
    				entity.setAddress(dbResponse.get().getAddress());
    				entity.setStatus(dbResponse.get().getStatus());
    				
    				saveEntities.add(entity);
    			}else if(insertData.getId()!=null && insertData.getDOB()!=null) {
    				
    			}else if(insertData.getId()!=null && insertData.getPOY()!=null) {
    				
    			}else if(insertData.getId()!=null && insertData.getMobileNumber()!=null) {
    				
    			}else if(insertData.getId()!=null && insertData.getMailID()!=null) {
    				
    			}else if(insertData.getId()!=null && insertData.getAddress()!=null) {
    				
    			}else (insertData.getId()!=null && insertData.getStatus()!=null) {
    				
    			}
    			
    		}
    	}catch() {
    		
    	}
    }
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2038)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2243)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3278)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3055)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:189)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2025-06-10 23:50:44.646
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2038)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2243)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3278)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3055)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:189)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2025-06-10 23:50:44.648
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2038)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2243)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3278)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3055)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:189)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core 4 4 2025-06-10 23:50:47.873
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package com.example.EMSbackend.Service;

import java.util.ArrayList;
import java.util.List;
import java.util.Optional;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import com.example.EMSbackend.DTO.EMSGetAllDTO;
import com.example.EMSbackend.DTO.EMSInsertMultipleRequestDTO;
import com.example.EMSbackend.DTO.EMSInsertMultipleResponseDTO;
import com.example.EMSbackend.DTO.EMSInsertSingleRequestDTO;
import com.example.EMSbackend.DTO.EMSInsertSingleResponseDTO;
import com.example.EMSbackend.DTO.EMSUpdateRequestDTO;
import com.example.EMSbackend.DTO.EMSUpdateResponseDTO;
import com.example.EMSbackend.Model.EMSModel;
import com.example.EMSbackend.Repository.EMSRepository;

import lombok.extern.slf4j.Slf4j;

@Slf4j
@Service
public class EMSService {

	@Autowired
	private EMSRepository emsRepository;
	
	
//GET_ALL_EMPLOYEE_DETAILS
    public EMSGetAllDTO getEmployeeDetailsAll() {
    	EMSGetAllDTO response = new EMSGetAllDTO();
    
    	
    	//try { 	
    	List<EMSModel> modelDetails = (List<EMSModel>) emsRepository.findAll();
    	response.setEmployeeDetailsAll(modelDetails);
    	
    	/*if(modelDetails!=null) {
    		response.setEmployeeDetailsAll(modelDetails);
    	}
    	else {
    		System.out.println("Employee not found");
    		//log.info("Service response not found");
    	}
    	
    	}catch (Exception e) {
            System.out.println("Error while fetching employee list: " + e.getMessage());
            e.printStackTrace();
        }*/
    	    
    	return response;
    }
    
//INSERT_ALL_EMPLOYEE_DETAILS(SINGLE_DATA/NOT_LIST)
    public EMSInsertSingleResponseDTO insertEmployeeDetails(EMSInsertSingleRequestDTO requestData) {
    	EMSInsertSingleResponseDTO response = new EMSInsertSingleResponseDTO();
    	String message = "FAILURE";
    	List<EMSModel> entityList = new ArrayList<>();
  
    	try {
    	if (requestData != null) {
    		EMSModel entity = new EMSModel();
    		entity.setId(requestData.getId());
			entity.setRid(requestData.getRid());
			entity.setName(requestData.getName());
			entity.setParentName(requestData.getParentName());
			entity.setStreamName(requestData.getStreamName());
			entity.setDOB(requestData.getDOB());
			entity.setPOY(requestData.getPOY());
			entity.setMobileNumber(requestData.getMobileNumber());
			entity.setMailID(requestData.getMailID());
			entity.setAddress(requestData.getAddress());
			entity.setStatus(requestData.getStatus());
			 
			c
   
			List<EMSModel> savedEntities = emsRepository.saveAll(entityList);
			if (savedEntities != null && !savedEntities.isEmpty()) {
	            message = "SUCCESS";
	            response.setMessage(message);
	            response.setCode("200 OK");
	        } else {
	            response.setMessage("Insert failed");
	            response.setCode("500 INTERNAL SERVER ERROR");
	        }
    	}else {
            response.setMessage("Input list is null or empty");
            response.setCode("400 BAD REQUEST");
        }
    	}catch (Exception e) {
    		e.printStackTrace();
    		response.setMessage("Exception occurred");
            response.setCode("500 INTERNAL SERVER ERROR");
    	}
  
    	return response;
    	
    }
    
    
   
//INSERT_ALL_EMPLOYEE_DETAILS(MULTIPLE/LIST)
    
    public EMSInsertMultipleResponseDTO insertEmployeeDetailsAll(EMSInsertMultipleRequestDTO insertData) {
    	EMSInsertMultipleResponseDTO response = new EMSInsertMultipleResponseDTO();
    	String message = "FAILURE";
    	
    	try {
    		List<EMSModel> dtoList = insertData.getEmployeeDetailsRequestAll();
 
    		if (dtoList != null && !dtoList.isEmpty()) {
    			
    			List<EMSModel> entityList = new ArrayList<>();
    			
    			for (EMSModel dto : dtoList){
    				
    			EMSModel entity = new EMSModel();
    			 entity.setId(dto.getId());
    			 entity.setRid(dto.getRid());
    			 entity.setName(dto.getName());
    			 entity.setParentName(dto.getParentName());
    			 entity.setStreamName(dto.getStreamName());
    			 entity.setDOB(dto.getDOB());
    			 entity.setPOY(dto.getPOY());
    			 entity.setMobileNumber(dto.getMobileNumber());
    			 entity.setMailID(dto.getMailID());
    			 entity.setAddress(dto.getAddress());
    			 entity.setStatus(dto.getStatus());
    			 
    			 entityList.add(entity);
    			}
    			
    			List<EMSModel> savedEntities = emsRepository.saveAll(entityList);
                

                if (savedEntities != null && !savedEntities.isEmpty()) {
                    message = "SUCCESS";
                    response.setMessage(message);
                    response.setCode("200 OK");
                } else {
                    response.setMessage("Insert failed");
                    response.setCode("500 INTERNAL SERVER ERROR");
                }
    			
    		}else {
    			response.setMessage("Input list is null or empty");
                response.setCode("400 BAD REQUEST");
    		}
    	}catch (Exception e) {
    		e.printStackTrace();
    		response.setMessage("Exception occurred");
            response.setCode("500 INTERNAL SERVER ERROR");
    	}
    	return response;
    }
    
//UPDATE
    public EMSUpdateResponseDTO updateEmployeeDetails(EMSUpdateRequestDTO insertData) {
    	EMSUpdateResponseDTO response =new EMSUpdateResponseDTO();
    	List<EMSModel> saveEntities =  new ArrayList<>();
    	try {
    		Optional<EMSModel> dbResponse = emsRepository.findById(insertData.getId());
    		if(dbResponse.isPresent()) {
    			EMSModel entity = new EMSModel();
    			
    			if(insertData.getId()!=null && insertData.getRid()!=null) {
    			
    				entity.setId(dbResponse.get().getId());
    				entity.setRid(insertData.getRid());
    				entity.setName(dbResponse.get().getName());
    				entity.setParentName(dbResponse.get().getParentName());
    				entity.setStreamName(dbResponse.get().getStreamName());
    				entity.setDOB(dbResponse.get().getDOB());
    				entity.setPOY(dbResponse.get().getPOY());
    				entity.setMobileNumber(dbResponse.get().getMobileNumber());
    				entity.setMailID(dbResponse.get().getMailID());
    				entity.setAddress(dbResponse.get().getAddress());
    				entity.setStatus(dbResponse.get().getStatus());
    				
    				saveEntities.add(entity);
    				
    				
    			}else if(insertData.getId()!=null && insertData.getName()!=null) {
    				entity.setId(dbResponse.get().getId());
    				entity.setRid(dbResponse.get().getRid());
    				entity.setName(insertData.getName());
    				entity.setParentName(dbResponse.get().getParentName());
    				entity.setStreamName(dbResponse.get().getStreamName());
    				entity.setDOB(dbResponse.get().getDOB());
    				entity.setPOY(dbResponse.get().getPOY());
    				entity.setMobileNumber(dbResponse.get().getMobileNumber());
    				entity.setMailID(dbResponse.get().getMailID());
    				entity.setAddress(dbResponse.get().getAddress());
    				entity.setStatus(dbResponse.get().getStatus());
    				
    				saveEntities.add(entity);
    			}else if(insertData.getId()!=null && insertData.getParentName()!=null) {
    				entity.setId(dbResponse.get().getId());
    				entity.setRid(dbResponse.get().getRid());
    				entity.setName(dbResponse.get().getName());
    				entity.setParentName(insertData.getParentName());
    				entity.setStreamName(dbResponse.get().getStreamName());
    				entity.setDOB(dbResponse.get().getDOB());
    				entity.setPOY(dbResponse.get().getPOY());
    				entity.setMobileNumber(dbResponse.get().getMobileNumber());
    				entity.setMailID(dbResponse.get().getMailID());
    				entity.setAddress(dbResponse.get().getAddress());
    				entity.setStatus(dbResponse.get().getStatus());
    				
    				saveEntities.add(entity);
    			}else if(insertData.getId()!=null && insertData.getStreamName()!=null) {
    				entity.setId(dbResponse.get().getId());
    				entity.setRid(dbResponse.get().getRid());
    				entity.setName(dbResponse.get().getName());
    				entity.setParentName(dbResponse.get());
    				entity.setStreamName(dbResponse.get().getStreamName());
    				entity.setDOB(dbResponse.get().getDOB());
    				entity.setPOY(dbResponse.get().getPOY());
    				entity.setMobileNumber(dbResponse.get().getMobileNumber());
    				entity.setMailID(dbResponse.get().getMailID());
    				entity.setAddress(dbResponse.get().getAddress());
    				entity.setStatus(dbResponse.get().getStatus());
    				
    				saveEntities.add(entity);
    			}else if(insertData.getId()!=null && insertData.getDOB()!=null) {
    				
    			}else if(insertData.getId()!=null && insertData.getPOY()!=null) {
    				
    			}else if(insertData.getId()!=null && insertData.getMobileNumber()!=null) {
    				
    			}else if(insertData.getId()!=null && insertData.getMailID()!=null) {
    				
    			}else if(insertData.getId()!=null && insertData.getAddress()!=null) {
    				
    			}else (insertData.getId()!=null && insertData.getStatus()!=null) {
    				
    			}
    			
    		}
    	}catch() {
    		
    	}
    }
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2038)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2243)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3278)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3055)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:540)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:132)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:94)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:91)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:158)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)

!ENTRY org.eclipse.jdt.ui 4 2 2025-06-10 23:50:47.877
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2038)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2243)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3278)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3055)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:540)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:132)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:94)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:91)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:158)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)

!ENTRY org.eclipse.jdt.ui 4 0 2025-06-10 23:50:47.879
!MESSAGE Error in JDT Core during reconcile
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2038)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2243)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3278)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3055)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:540)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:132)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:94)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:91)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:158)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)

!ENTRY org.eclipse.jdt.core 4 4 2025-06-10 23:50:47.984
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package com.example.EMSbackend.Service;

import java.util.ArrayList;
import java.util.List;
import java.util.Optional;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import com.example.EMSbackend.DTO.EMSGetAllDTO;
import com.example.EMSbackend.DTO.EMSInsertMultipleRequestDTO;
import com.example.EMSbackend.DTO.EMSInsertMultipleResponseDTO;
import com.example.EMSbackend.DTO.EMSInsertSingleRequestDTO;
import com.example.EMSbackend.DTO.EMSInsertSingleResponseDTO;
import com.example.EMSbackend.DTO.EMSUpdateRequestDTO;
import com.example.EMSbackend.DTO.EMSUpdateResponseDTO;
import com.example.EMSbackend.Model.EMSModel;
import com.example.EMSbackend.Repository.EMSRepository;

import lombok.extern.slf4j.Slf4j;

@Slf4j
@Service
public class EMSService {

	@Autowired
	private EMSRepository emsRepository;
	
	
//GET_ALL_EMPLOYEE_DETAILS
    public EMSGetAllDTO getEmployeeDetailsAll() {
    	EMSGetAllDTO response = new EMSGetAllDTO();
    
    	
    	//try { 	
    	List<EMSModel> modelDetails = (List<EMSModel>) emsRepository.findAll();
    	response.setEmployeeDetailsAll(modelDetails);
    	
    	/*if(modelDetails!=null) {
    		response.setEmployeeDetailsAll(modelDetails);
    	}
    	else {
    		System.out.println("Employee not found");
    		//log.info("Service response not found");
    	}
    	
    	}catch (Exception e) {
            System.out.println("Error while fetching employee list: " + e.getMessage());
            e.printStackTrace();
        }*/
    	    
    	return response;
    }
    
//INSERT_ALL_EMPLOYEE_DETAILS(SINGLE_DATA/NOT_LIST)
    public EMSInsertSingleResponseDTO insertEmployeeDetails(EMSInsertSingleRequestDTO requestData) {
    	EMSInsertSingleResponseDTO response = new EMSInsertSingleResponseDTO();
    	String message = "FAILURE";
    	List<EMSModel> entityList = new ArrayList<>();
  
    	try {
    	if (requestData != null) {
    		EMSModel entity = new EMSModel();
    		entity.setId(requestData.getId());
			entity.setRid(requestData.getRid());
			entity.setName(requestData.getName());
			entity.setParentName(requestData.getParentName());
			entity.setStreamName(requestData.getStreamName());
			entity.setDOB(requestData.getDOB());
			entity.setPOY(requestData.getPOY());
			entity.setMobileNumber(requestData.getMobileNumber());
			entity.setMailID(requestData.getMailID());
			entity.setAddress(requestData.getAddress());
			entity.setStatus(requestData.getStatus());
			 
			c
   
			List<EMSModel> savedEntities = emsRepository.saveAll(entityList);
			if (savedEntities != null && !savedEntities.isEmpty()) {
	            message = "SUCCESS";
	            response.setMessage(message);
	            response.setCode("200 OK");
	        } else {
	            response.setMessage("Insert failed");
	            response.setCode("500 INTERNAL SERVER ERROR");
	        }
    	}else {
            response.setMessage("Input list is null or empty");
            response.setCode("400 BAD REQUEST");
        }
    	}catch (Exception e) {
    		e.printStackTrace();
    		response.setMessage("Exception occurred");
            response.setCode("500 INTERNAL SERVER ERROR");
    	}
  
    	return response;
    	
    }
    
    
   
//INSERT_ALL_EMPLOYEE_DETAILS(MULTIPLE/LIST)
    
    public EMSInsertMultipleResponseDTO insertEmployeeDetailsAll(EMSInsertMultipleRequestDTO insertData) {
    	EMSInsertMultipleResponseDTO response = new EMSInsertMultipleResponseDTO();
    	String message = "FAILURE";
    	
    	try {
    		List<EMSModel> dtoList = insertData.getEmployeeDetailsRequestAll();
 
    		if (dtoList != null && !dtoList.isEmpty()) {
    			
    			List<EMSModel> entityList = new ArrayList<>();
    			
    			for (EMSModel dto : dtoList){
    				
    			EMSModel entity = new EMSModel();
    			 entity.setId(dto.getId());
    			 entity.setRid(dto.getRid());
    			 entity.setName(dto.getName());
    			 entity.setParentName(dto.getParentName());
    			 entity.setStreamName(dto.getStreamName());
    			 entity.setDOB(dto.getDOB());
    			 entity.setPOY(dto.getPOY());
    			 entity.setMobileNumber(dto.getMobileNumber());
    			 entity.setMailID(dto.getMailID());
    			 entity.setAddress(dto.getAddress());
    			 entity.setStatus(dto.getStatus());
    			 
    			 entityList.add(entity);
    			}
    			
    			List<EMSModel> savedEntities = emsRepository.saveAll(entityList);
                

                if (savedEntities != null && !savedEntities.isEmpty()) {
                    message = "SUCCESS";
                    response.setMessage(message);
                    response.setCode("200 OK");
                } else {
                    response.setMessage("Insert failed");
                    response.setCode("500 INTERNAL SERVER ERROR");
                }
    			
    		}else {
    			response.setMessage("Input list is null or empty");
                response.setCode("400 BAD REQUEST");
    		}
    	}catch (Exception e) {
    		e.printStackTrace();
    		response.setMessage("Exception occurred");
            response.setCode("500 INTERNAL SERVER ERROR");
    	}
    	return response;
    }
    
//UPDATE
    public EMSUpdateResponseDTO updateEmployeeDetails(EMSUpdateRequestDTO insertData) {
    	EMSUpdateResponseDTO response =new EMSUpdateResponseDTO();
    	List<EMSModel> saveEntities =  new ArrayList<>();
    	try {
    		Optional<EMSModel> dbResponse = emsRepository.findById(insertData.getId());
    		if(dbResponse.isPresent()) {
    			EMSModel entity = new EMSModel();
    			
    			if(insertData.getId()!=null && insertData.getRid()!=null) {
    			
    				entity.setId(dbResponse.get().getId());
    				entity.setRid(insertData.getRid());
    				entity.setName(dbResponse.get().getName());
    				entity.setParentName(dbResponse.get().getParentName());
    				entity.setStreamName(dbResponse.get().getStreamName());
    				entity.setDOB(dbResponse.get().getDOB());
    				entity.setPOY(dbResponse.get().getPOY());
    				entity.setMobileNumber(dbResponse.get().getMobileNumber());
    				entity.setMailID(dbResponse.get().getMailID());
    				entity.setAddress(dbResponse.get().getAddress());
    				entity.setStatus(dbResponse.get().getStatus());
    				
    				saveEntities.add(entity);
    				
    				
    			}else if(insertData.getId()!=null && insertData.getName()!=null) {
    				entity.setId(dbResponse.get().getId());
    				entity.setRid(dbResponse.get().getRid());
    				entity.setName(insertData.getName());
    				entity.setParentName(dbResponse.get().getParentName());
    				entity.setStreamName(dbResponse.get().getStreamName());
    				entity.setDOB(dbResponse.get().getDOB());
    				entity.setPOY(dbResponse.get().getPOY());
    				entity.setMobileNumber(dbResponse.get().getMobileNumber());
    				entity.setMailID(dbResponse.get().getMailID());
    				entity.setAddress(dbResponse.get().getAddress());
    				entity.setStatus(dbResponse.get().getStatus());
    				
    				saveEntities.add(entity);
    			}else if(insertData.getId()!=null && insertData.getParentName()!=null) {
    				entity.setId(dbResponse.get().getId());
    				entity.setRid(dbResponse.get().getRid());
    				entity.setName(dbResponse.get().getName());
    				entity.setParentName(insertData.getParentName());
    				entity.setStreamName(dbResponse.get().getStreamName());
    				entity.setDOB(dbResponse.get().getDOB());
    				entity.setPOY(dbResponse.get().getPOY());
    				entity.setMobileNumber(dbResponse.get().getMobileNumber());
    				entity.setMailID(dbResponse.get().getMailID());
    				entity.setAddress(dbResponse.get().getAddress());
    				entity.setStatus(dbResponse.get().getStatus());
    				
    				saveEntities.add(entity);
    			}else if(insertData.getId()!=null && insertData.getStreamName()!=null) {
    				entity.setId(dbResponse.get().getId());
    				entity.setRid(dbResponse.get().getRid());
    				entity.setName(dbResponse.get().getName());
    				entity.setParentName(dbResponse.get());
    				entity.setStreamName(dbResponse.get().getStreamName());
    				entity.setDOB(dbResponse.get().getDOB());
    				entity.setPOY(dbResponse.get().getPOY());
    				entity.setMobileNumber(dbResponse.get().getMobileNumber());
    				entity.setMailID(dbResponse.get().getMailID());
    				entity.setAddress(dbResponse.get().getAddress());
    				entity.setStatus(dbResponse.get().getStatus());
    				
    				saveEntities.add(entity);
    			}else if(insertData.getId()!=null && insertData.getDOB()!=null) {
    				
    			}else if(insertData.getId()!=null && insertData.getPOY()!=null) {
    				
    			}else if(insertData.getId()!=null && insertData.getMobileNumber()!=null) {
    				
    			}else if(insertData.getId()!=null && insertData.getMailID()!=null) {
    				
    			}else if(insertData.getId()!=null && insertData.getAddress()!=null) {
    				
    			}else (insertData.getId()!=null && insertData.getStatus()!=null) {
    				
    			}
    			
    		}
    	}catch() {
    		
    	}
    }
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2038)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2243)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3278)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3055)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2025-06-10 23:50:47.988
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2038)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2243)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3278)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3055)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2025-06-10 23:50:47.990
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2038)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2243)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3278)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3055)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core 4 4 2025-06-10 23:50:49.410
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package com.example.EMSbackend.Service;

import java.util.ArrayList;
import java.util.List;
import java.util.Optional;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import com.example.EMSbackend.DTO.EMSGetAllDTO;
import com.example.EMSbackend.DTO.EMSInsertMultipleRequestDTO;
import com.example.EMSbackend.DTO.EMSInsertMultipleResponseDTO;
import com.example.EMSbackend.DTO.EMSInsertSingleRequestDTO;
import com.example.EMSbackend.DTO.EMSInsertSingleResponseDTO;
import com.example.EMSbackend.DTO.EMSUpdateRequestDTO;
import com.example.EMSbackend.DTO.EMSUpdateResponseDTO;
import com.example.EMSbackend.Model.EMSModel;
import com.example.EMSbackend.Repository.EMSRepository;

import lombok.extern.slf4j.Slf4j;

@Slf4j
@Service
public class EMSService {

	@Autowired
	private EMSRepository emsRepository;
	
	
//GET_ALL_EMPLOYEE_DETAILS
    public EMSGetAllDTO getEmployeeDetailsAll() {
    	EMSGetAllDTO response = new EMSGetAllDTO();
    
    	
    	//try { 	
    	List<EMSModel> modelDetails = (List<EMSModel>) emsRepository.findAll();
    	response.setEmployeeDetailsAll(modelDetails);
    	
    	/*if(modelDetails!=null) {
    		response.setEmployeeDetailsAll(modelDetails);
    	}
    	else {
    		System.out.println("Employee not found");
    		//log.info("Service response not found");
    	}
    	
    	}catch (Exception e) {
            System.out.println("Error while fetching employee list: " + e.getMessage());
            e.printStackTrace();
        }*/
    	    
    	return response;
    }
    
//INSERT_ALL_EMPLOYEE_DETAILS(SINGLE_DATA/NOT_LIST)
    public EMSInsertSingleResponseDTO insertEmployeeDetails(EMSInsertSingleRequestDTO requestData) {
    	EMSInsertSingleResponseDTO response = new EMSInsertSingleResponseDTO();
    	String message = "FAILURE";
    	List<EMSModel> entityList = new ArrayList<>();
  
    	try {
    	if (requestData != null) {
    		EMSModel entity = new EMSModel();
    		entity.setId(requestData.getId());
			entity.setRid(requestData.getRid());
			entity.setName(requestData.getName());
			entity.setParentName(requestData.getParentName());
			entity.setStreamName(requestData.getStreamName());
			entity.setDOB(requestData.getDOB());
			entity.setPOY(requestData.getPOY());
			entity.setMobileNumber(requestData.getMobileNumber());
			entity.setMailID(requestData.getMailID());
			entity.setAddress(requestData.getAddress());
			entity.setStatus(requestData.getStatus());
			 
			c
   
			List<EMSModel> savedEntities = emsRepository.saveAll(entityList);
			if (savedEntities != null && !savedEntities.isEmpty()) {
	            message = "SUCCESS";
	            response.setMessage(message);
	            response.setCode("200 OK");
	        } else {
	            response.setMessage("Insert failed");
	            response.setCode("500 INTERNAL SERVER ERROR");
	        }
    	}else {
            response.setMessage("Input list is null or empty");
            response.setCode("400 BAD REQUEST");
        }
    	}catch (Exception e) {
    		e.printStackTrace();
    		response.setMessage("Exception occurred");
            response.setCode("500 INTERNAL SERVER ERROR");
    	}
  
    	return response;
    	
    }
    
    
   
//INSERT_ALL_EMPLOYEE_DETAILS(MULTIPLE/LIST)
    
    public EMSInsertMultipleResponseDTO insertEmployeeDetailsAll(EMSInsertMultipleRequestDTO insertData) {
    	EMSInsertMultipleResponseDTO response = new EMSInsertMultipleResponseDTO();
    	String message = "FAILURE";
    	
    	try {
    		List<EMSModel> dtoList = insertData.getEmployeeDetailsRequestAll();
 
    		if (dtoList != null && !dtoList.isEmpty()) {
    			
    			List<EMSModel> entityList = new ArrayList<>();
    			
    			for (EMSModel dto : dtoList){
    				
    			EMSModel entity = new EMSModel();
    			 entity.setId(dto.getId());
    			 entity.setRid(dto.getRid());
    			 entity.setName(dto.getName());
    			 entity.setParentName(dto.getParentName());
    			 entity.setStreamName(dto.getStreamName());
    			 entity.setDOB(dto.getDOB());
    			 entity.setPOY(dto.getPOY());
    			 entity.setMobileNumber(dto.getMobileNumber());
    			 entity.setMailID(dto.getMailID());
    			 entity.setAddress(dto.getAddress());
    			 entity.setStatus(dto.getStatus());
    			 
    			 entityList.add(entity);
    			}
    			
    			List<EMSModel> savedEntities = emsRepository.saveAll(entityList);
                

                if (savedEntities != null && !savedEntities.isEmpty()) {
                    message = "SUCCESS";
                    response.setMessage(message);
                    response.setCode("200 OK");
                } else {
                    response.setMessage("Insert failed");
                    response.setCode("500 INTERNAL SERVER ERROR");
                }
    			
    		}else {
    			response.setMessage("Input list is null or empty");
                response.setCode("400 BAD REQUEST");
    		}
    	}catch (Exception e) {
    		e.printStackTrace();
    		response.setMessage("Exception occurred");
            response.setCode("500 INTERNAL SERVER ERROR");
    	}
    	return response;
    }
    
//UPDATE
    public EMSUpdateResponseDTO updateEmployeeDetails(EMSUpdateRequestDTO insertData) {
    	EMSUpdateResponseDTO response =new EMSUpdateResponseDTO();
    	List<EMSModel> saveEntities =  new ArrayList<>();
    	try {
    		Optional<EMSModel> dbResponse = emsRepository.findById(insertData.getId());
    		if(dbResponse.isPresent()) {
    			EMSModel entity = new EMSModel();
    			
    			if(insertData.getId()!=null && insertData.getRid()!=null) {
    			
    				entity.setId(dbResponse.get().getId());
    				entity.setRid(insertData.getRid());
    				entity.setName(dbResponse.get().getName());
    				entity.setParentName(dbResponse.get().getParentName());
    				entity.setStreamName(dbResponse.get().getStreamName());
    				entity.setDOB(dbResponse.get().getDOB());
    				entity.setPOY(dbResponse.get().getPOY());
    				entity.setMobileNumber(dbResponse.get().getMobileNumber());
    				entity.setMailID(dbResponse.get().getMailID());
    				entity.setAddress(dbResponse.get().getAddress());
    				entity.setStatus(dbResponse.get().getStatus());
    				
    				saveEntities.add(entity);
    				
    				
    			}else if(insertData.getId()!=null && insertData.getName()!=null) {
    				entity.setId(dbResponse.get().getId());
    				entity.setRid(dbResponse.get().getRid());
    				entity.setName(insertData.getName());
    				entity.setParentName(dbResponse.get().getParentName());
    				entity.setStreamName(dbResponse.get().getStreamName());
    				entity.setDOB(dbResponse.get().getDOB());
    				entity.setPOY(dbResponse.get().getPOY());
    				entity.setMobileNumber(dbResponse.get().getMobileNumber());
    				entity.setMailID(dbResponse.get().getMailID());
    				entity.setAddress(dbResponse.get().getAddress());
    				entity.setStatus(dbResponse.get().getStatus());
    				
    				saveEntities.add(entity);
    			}else if(insertData.getId()!=null && insertData.getParentName()!=null) {
    				entity.setId(dbResponse.get().getId());
    				entity.setRid(dbResponse.get().getRid());
    				entity.setName(dbResponse.get().getName());
    				entity.setParentName(insertData.getParentName());
    				entity.setStreamName(dbResponse.get().getStreamName());
    				entity.setDOB(dbResponse.get().getDOB());
    				entity.setPOY(dbResponse.get().getPOY());
    				entity.setMobileNumber(dbResponse.get().getMobileNumber());
    				entity.setMailID(dbResponse.get().getMailID());
    				entity.setAddress(dbResponse.get().getAddress());
    				entity.setStatus(dbResponse.get().getStatus());
    				
    				saveEntities.add(entity);
    			}else if(insertData.getId()!=null && insertData.getStreamName()!=null) {
    				entity.setId(dbResponse.get().getId());
    				entity.setRid(dbResponse.get().getRid());
    				entity.setName(dbResponse.get().getName());
    				entity.setParentName(dbResponse.get().get);
    				entity.setStreamName(dbResponse.get().getStreamName());
    				entity.setDOB(dbResponse.get().getDOB());
    				entity.setPOY(dbResponse.get().getPOY());
    				entity.setMobileNumber(dbResponse.get().getMobileNumber());
    				entity.setMailID(dbResponse.get().getMailID());
    				entity.setAddress(dbResponse.get().getAddress());
    				entity.setStatus(dbResponse.get().getStatus());
    				
    				saveEntities.add(entity);
    			}else if(insertData.getId()!=null && insertData.getDOB()!=null) {
    				
    			}else if(insertData.getId()!=null && insertData.getPOY()!=null) {
    				
    			}else if(insertData.getId()!=null && insertData.getMobileNumber()!=null) {
    				
    			}else if(insertData.getId()!=null && insertData.getMailID()!=null) {
    				
    			}else if(insertData.getId()!=null && insertData.getAddress()!=null) {
    				
    			}else (insertData.getId()!=null && insertData.getStatus()!=null) {
    				
    			}
    			
    		}
    	}catch() {
    		
    	}
    }
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2038)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2243)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3278)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3055)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:540)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:132)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:94)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:91)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:158)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)

!ENTRY org.eclipse.jdt.ui 4 2 2025-06-10 23:50:49.413
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2038)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2243)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3278)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3055)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:540)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:132)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:94)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:91)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:158)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)

!ENTRY org.eclipse.jdt.ui 4 0 2025-06-10 23:50:49.416
!MESSAGE Error in JDT Core during reconcile
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2038)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2243)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3278)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3055)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:540)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:132)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:94)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:91)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:158)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)

!ENTRY org.eclipse.jdt.core 4 4 2025-06-10 23:50:49.505
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package com.example.EMSbackend.Service;

import java.util.ArrayList;
import java.util.List;
import java.util.Optional;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import com.example.EMSbackend.DTO.EMSGetAllDTO;
import com.example.EMSbackend.DTO.EMSInsertMultipleRequestDTO;
import com.example.EMSbackend.DTO.EMSInsertMultipleResponseDTO;
import com.example.EMSbackend.DTO.EMSInsertSingleRequestDTO;
import com.example.EMSbackend.DTO.EMSInsertSingleResponseDTO;
import com.example.EMSbackend.DTO.EMSUpdateRequestDTO;
import com.example.EMSbackend.DTO.EMSUpdateResponseDTO;
import com.example.EMSbackend.Model.EMSModel;
import com.example.EMSbackend.Repository.EMSRepository;

import lombok.extern.slf4j.Slf4j;

@Slf4j
@Service
public class EMSService {

	@Autowired
	private EMSRepository emsRepository;
	
	
//GET_ALL_EMPLOYEE_DETAILS
    public EMSGetAllDTO getEmployeeDetailsAll() {
    	EMSGetAllDTO response = new EMSGetAllDTO();
    
    	
    	//try { 	
    	List<EMSModel> modelDetails = (List<EMSModel>) emsRepository.findAll();
    	response.setEmployeeDetailsAll(modelDetails);
    	
    	/*if(modelDetails!=null) {
    		response.setEmployeeDetailsAll(modelDetails);
    	}
    	else {
    		System.out.println("Employee not found");
    		//log.info("Service response not found");
    	}
    	
    	}catch (Exception e) {
            System.out.println("Error while fetching employee list: " + e.getMessage());
            e.printStackTrace();
        }*/
    	    
    	return response;
    }
    
//INSERT_ALL_EMPLOYEE_DETAILS(SINGLE_DATA/NOT_LIST)
    public EMSInsertSingleResponseDTO insertEmployeeDetails(EMSInsertSingleRequestDTO requestData) {
    	EMSInsertSingleResponseDTO response = new EMSInsertSingleResponseDTO();
    	String message = "FAILURE";
    	List<EMSModel> entityList = new ArrayList<>();
  
    	try {
    	if (requestData != null) {
    		EMSModel entity = new EMSModel();
    		entity.setId(requestData.getId());
			entity.setRid(requestData.getRid());
			entity.setName(requestData.getName());
			entity.setParentName(requestData.getParentName());
			entity.setStreamName(requestData.getStreamName());
			entity.setDOB(requestData.getDOB());
			entity.setPOY(requestData.getPOY());
			entity.setMobileNumber(requestData.getMobileNumber());
			entity.setMailID(requestData.getMailID());
			entity.setAddress(requestData.getAddress());
			entity.setStatus(requestData.getStatus());
			 
			c
   
			List<EMSModel> savedEntities = emsRepository.saveAll(entityList);
			if (savedEntities != null && !savedEntities.isEmpty()) {
	            message = "SUCCESS";
	            response.setMessage(message);
	            response.setCode("200 OK");
	        } else {
	            response.setMessage("Insert failed");
	            response.setCode("500 INTERNAL SERVER ERROR");
	        }
    	}else {
            response.setMessage("Input list is null or empty");
            response.setCode("400 BAD REQUEST");
        }
    	}catch (Exception e) {
    		e.printStackTrace();
    		response.setMessage("Exception occurred");
            response.setCode("500 INTERNAL SERVER ERROR");
    	}
  
    	return response;
    	
    }
    
    
   
//INSERT_ALL_EMPLOYEE_DETAILS(MULTIPLE/LIST)
    
    public EMSInsertMultipleResponseDTO insertEmployeeDetailsAll(EMSInsertMultipleRequestDTO insertData) {
    	EMSInsertMultipleResponseDTO response = new EMSInsertMultipleResponseDTO();
    	String message = "FAILURE";
    	
    	try {
    		List<EMSModel> dtoList = insertData.getEmployeeDetailsRequestAll();
 
    		if (dtoList != null && !dtoList.isEmpty()) {
    			
    			List<EMSModel> entityList = new ArrayList<>();
    			
    			for (EMSModel dto : dtoList){
    				
    			EMSModel entity = new EMSModel();
    			 entity.setId(dto.getId());
    			 entity.setRid(dto.getRid());
    			 entity.setName(dto.getName());
    			 entity.setParentName(dto.getParentName());
    			 entity.setStreamName(dto.getStreamName());
    			 entity.setDOB(dto.getDOB());
    			 entity.setPOY(dto.getPOY());
    			 entity.setMobileNumber(dto.getMobileNumber());
    			 entity.setMailID(dto.getMailID());
    			 entity.setAddress(dto.getAddress());
    			 entity.setStatus(dto.getStatus());
    			 
    			 entityList.add(entity);
    			}
    			
    			List<EMSModel> savedEntities = emsRepository.saveAll(entityList);
                

                if (savedEntities != null && !savedEntities.isEmpty()) {
                    message = "SUCCESS";
                    response.setMessage(message);
                    response.setCode("200 OK");
                } else {
                    response.setMessage("Insert failed");
                    response.setCode("500 INTERNAL SERVER ERROR");
                }
    			
    		}else {
    			response.setMessage("Input list is null or empty");
                response.setCode("400 BAD REQUEST");
    		}
    	}catch (Exception e) {
    		e.printStackTrace();
    		response.setMessage("Exception occurred");
            response.setCode("500 INTERNAL SERVER ERROR");
    	}
    	return response;
    }
    
//UPDATE
    public EMSUpdateResponseDTO updateEmployeeDetails(EMSUpdateRequestDTO insertData) {
    	EMSUpdateResponseDTO response =new EMSUpdateResponseDTO();
    	List<EMSModel> saveEntities =  new ArrayList<>();
    	try {
    		Optional<EMSModel> dbResponse = emsRepository.findById(insertData.getId());
    		if(dbResponse.isPresent()) {
    			EMSModel entity = new EMSModel();
    			
    			if(insertData.getId()!=null && insertData.getRid()!=null) {
    			
    				entity.setId(dbResponse.get().getId());
    				entity.setRid(insertData.getRid());
    				entity.setName(dbResponse.get().getName());
    				entity.setParentName(dbResponse.get().getParentName());
    				entity.setStreamName(dbResponse.get().getStreamName());
    				entity.setDOB(dbResponse.get().getDOB());
    				entity.setPOY(dbResponse.get().getPOY());
    				entity.setMobileNumber(dbResponse.get().getMobileNumber());
    				entity.setMailID(dbResponse.get().getMailID());
    				entity.setAddress(dbResponse.get().getAddress());
    				entity.setStatus(dbResponse.get().getStatus());
    				
    				saveEntities.add(entity);
    				
    				
    			}else if(insertData.getId()!=null && insertData.getName()!=null) {
    				entity.setId(dbResponse.get().getId());
    				entity.setRid(dbResponse.get().getRid());
    				entity.setName(insertData.getName());
    				entity.setParentName(dbResponse.get().getParentName());
    				entity.setStreamName(dbResponse.get().getStreamName());
    				entity.setDOB(dbResponse.get().getDOB());
    				entity.setPOY(dbResponse.get().getPOY());
    				entity.setMobileNumber(dbResponse.get().getMobileNumber());
    				entity.setMailID(dbResponse.get().getMailID());
    				entity.setAddress(dbResponse.get().getAddress());
    				entity.setStatus(dbResponse.get().getStatus());
    				
    				saveEntities.add(entity);
    			}else if(insertData.getId()!=null && insertData.getParentName()!=null) {
    				entity.setId(dbResponse.get().getId());
    				entity.setRid(dbResponse.get().getRid());
    				entity.setName(dbResponse.get().getName());
    				entity.setParentName(insertData.getParentName());
    				entity.setStreamName(dbResponse.get().getStreamName());
    				entity.setDOB(dbResponse.get().getDOB());
    				entity.setPOY(dbResponse.get().getPOY());
    				entity.setMobileNumber(dbResponse.get().getMobileNumber());
    				entity.setMailID(dbResponse.get().getMailID());
    				entity.setAddress(dbResponse.get().getAddress());
    				entity.setStatus(dbResponse.get().getStatus());
    				
    				saveEntities.add(entity);
    			}else if(insertData.getId()!=null && insertData.getStreamName()!=null) {
    				entity.setId(dbResponse.get().getId());
    				entity.setRid(dbResponse.get().getRid());
    				entity.setName(dbResponse.get().getName());
    				entity.setParentName(dbResponse.get().get);
    				entity.setStreamName(dbResponse.get().getStreamName());
    				entity.setDOB(dbResponse.get().getDOB());
    				entity.setPOY(dbResponse.get().getPOY());
    				entity.setMobileNumber(dbResponse.get().getMobileNumber());
    				entity.setMailID(dbResponse.get().getMailID());
    				entity.setAddress(dbResponse.get().getAddress());
    				entity.setStatus(dbResponse.get().getStatus());
    				
    				saveEntities.add(entity);
    			}else if(insertData.getId()!=null && insertData.getDOB()!=null) {
    				
    			}else if(insertData.getId()!=null && insertData.getPOY()!=null) {
    				
    			}else if(insertData.getId()!=null && insertData.getMobileNumber()!=null) {
    				
    			}else if(insertData.getId()!=null && insertData.getMailID()!=null) {
    				
    			}else if(insertData.getId()!=null && insertData.getAddress()!=null) {
    				
    			}else (insertData.getId()!=null && insertData.getStatus()!=null) {
    				
    			}
    			
    		}
    	}catch() {
    		
    	}
    }
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2038)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2243)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3278)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3055)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2025-06-10 23:50:49.509
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2038)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2243)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3278)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3055)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2025-06-10 23:50:49.511
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2038)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2243)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3278)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3055)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core 4 4 2025-06-10 23:50:51.642
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package com.example.EMSbackend.Service;

import java.util.ArrayList;
import java.util.List;
import java.util.Optional;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import com.example.EMSbackend.DTO.EMSGetAllDTO;
import com.example.EMSbackend.DTO.EMSInsertMultipleRequestDTO;
import com.example.EMSbackend.DTO.EMSInsertMultipleResponseDTO;
import com.example.EMSbackend.DTO.EMSInsertSingleRequestDTO;
import com.example.EMSbackend.DTO.EMSInsertSingleResponseDTO;
import com.example.EMSbackend.DTO.EMSUpdateRequestDTO;
import com.example.EMSbackend.DTO.EMSUpdateResponseDTO;
import com.example.EMSbackend.Model.EMSModel;
import com.example.EMSbackend.Repository.EMSRepository;

import lombok.extern.slf4j.Slf4j;

@Slf4j
@Service
public class EMSService {

	@Autowired
	private EMSRepository emsRepository;
	
	
//GET_ALL_EMPLOYEE_DETAILS
    public EMSGetAllDTO getEmployeeDetailsAll() {
    	EMSGetAllDTO response = new EMSGetAllDTO();
    
    	
    	//try { 	
    	List<EMSModel> modelDetails = (List<EMSModel>) emsRepository.findAll();
    	response.setEmployeeDetailsAll(modelDetails);
    	
    	/*if(modelDetails!=null) {
    		response.setEmployeeDetailsAll(modelDetails);
    	}
    	else {
    		System.out.println("Employee not found");
    		//log.info("Service response not found");
    	}
    	
    	}catch (Exception e) {
            System.out.println("Error while fetching employee list: " + e.getMessage());
            e.printStackTrace();
        }*/
    	    
    	return response;
    }
    
//INSERT_ALL_EMPLOYEE_DETAILS(SINGLE_DATA/NOT_LIST)
    public EMSInsertSingleResponseDTO insertEmployeeDetails(EMSInsertSingleRequestDTO requestData) {
    	EMSInsertSingleResponseDTO response = new EMSInsertSingleResponseDTO();
    	String message = "FAILURE";
    	List<EMSModel> entityList = new ArrayList<>();
  
    	try {
    	if (requestData != null) {
    		EMSModel entity = new EMSModel();
    		entity.setId(requestData.getId());
			entity.setRid(requestData.getRid());
			entity.setName(requestData.getName());
			entity.setParentName(requestData.getParentName());
			entity.setStreamName(requestData.getStreamName());
			entity.setDOB(requestData.getDOB());
			entity.setPOY(requestData.getPOY());
			entity.setMobileNumber(requestData.getMobileNumber());
			entity.setMailID(requestData.getMailID());
			entity.setAddress(requestData.getAddress());
			entity.setStatus(requestData.getStatus());
			 
			c
   
			List<EMSModel> savedEntities = emsRepository.saveAll(entityList);
			if (savedEntities != null && !savedEntities.isEmpty()) {
	            message = "SUCCESS";
	            response.setMessage(message);
	            response.setCode("200 OK");
	        } else {
	            response.setMessage("Insert failed");
	            response.setCode("500 INTERNAL SERVER ERROR");
	        }
    	}else {
            response.setMessage("Input list is null or empty");
            response.setCode("400 BAD REQUEST");
        }
    	}catch (Exception e) {
    		e.printStackTrace();
    		response.setMessage("Exception occurred");
            response.setCode("500 INTERNAL SERVER ERROR");
    	}
  
    	return response;
    	
    }
    
    
   
//INSERT_ALL_EMPLOYEE_DETAILS(MULTIPLE/LIST)
    
    public EMSInsertMultipleResponseDTO insertEmployeeDetailsAll(EMSInsertMultipleRequestDTO insertData) {
    	EMSInsertMultipleResponseDTO response = new EMSInsertMultipleResponseDTO();
    	String message = "FAILURE";
    	
    	try {
    		List<EMSModel> dtoList = insertData.getEmployeeDetailsRequestAll();
 
    		if (dtoList != null && !dtoList.isEmpty()) {
    			
    			List<EMSModel> entityList = new ArrayList<>();
    			
    			for (EMSModel dto : dtoList){
    				
    			EMSModel entity = new EMSModel();
    			 entity.setId(dto.getId());
    			 entity.setRid(dto.getRid());
    			 entity.setName(dto.getName());
    			 entity.setParentName(dto.getParentName());
    			 entity.setStreamName(dto.getStreamName());
    			 entity.setDOB(dto.getDOB());
    			 entity.setPOY(dto.getPOY());
    			 entity.setMobileNumber(dto.getMobileNumber());
    			 entity.setMailID(dto.getMailID());
    			 entity.setAddress(dto.getAddress());
    			 entity.setStatus(dto.getStatus());
    			 
    			 entityList.add(entity);
    			}
    			
    			List<EMSModel> savedEntities = emsRepository.saveAll(entityList);
                

                if (savedEntities != null && !savedEntities.isEmpty()) {
                    message = "SUCCESS";
                    response.setMessage(message);
                    response.setCode("200 OK");
                } else {
                    response.setMessage("Insert failed");
                    response.setCode("500 INTERNAL SERVER ERROR");
                }
    			
    		}else {
    			response.setMessage("Input list is null or empty");
                response.setCode("400 BAD REQUEST");
    		}
    	}catch (Exception e) {
    		e.printStackTrace();
    		response.setMessage("Exception occurred");
            response.setCode("500 INTERNAL SERVER ERROR");
    	}
    	return response;
    }
    
//UPDATE
    public EMSUpdateResponseDTO updateEmployeeDetails(EMSUpdateRequestDTO insertData) {
    	EMSUpdateResponseDTO response =new EMSUpdateResponseDTO();
    	List<EMSModel> saveEntities =  new ArrayList<>();
    	try {
    		Optional<EMSModel> dbResponse = emsRepository.findById(insertData.getId());
    		if(dbResponse.isPresent()) {
    			EMSModel entity = new EMSModel();
    			
    			if(insertData.getId()!=null && insertData.getRid()!=null) {
    			
    				entity.setId(dbResponse.get().getId());
    				entity.setRid(insertData.getRid());
    				entity.setName(dbResponse.get().getName());
    				entity.setParentName(dbResponse.get().getParentName());
    				entity.setStreamName(dbResponse.get().getStreamName());
    				entity.setDOB(dbResponse.get().getDOB());
    				entity.setPOY(dbResponse.get().getPOY());
    				entity.setMobileNumber(dbResponse.get().getMobileNumber());
    				entity.setMailID(dbResponse.get().getMailID());
    				entity.setAddress(dbResponse.get().getAddress());
    				entity.setStatus(dbResponse.get().getStatus());
    				
    				saveEntities.add(entity);
    				
    				
    			}else if(insertData.getId()!=null && insertData.getName()!=null) {
    				entity.setId(dbResponse.get().getId());
    				entity.setRid(dbResponse.get().getRid());
    				entity.setName(insertData.getName());
    				entity.setParentName(dbResponse.get().getParentName());
    				entity.setStreamName(dbResponse.get().getStreamName());
    				entity.setDOB(dbResponse.get().getDOB());
    				entity.setPOY(dbResponse.get().getPOY());
    				entity.setMobileNumber(dbResponse.get().getMobileNumber());
    				entity.setMailID(dbResponse.get().getMailID());
    				entity.setAddress(dbResponse.get().getAddress());
    				entity.setStatus(dbResponse.get().getStatus());
    				
    				saveEntities.add(entity);
    			}else if(insertData.getId()!=null && insertData.getParentName()!=null) {
    				entity.setId(dbResponse.get().getId());
    				entity.setRid(dbResponse.get().getRid());
    				entity.setName(dbResponse.get().getName());
    				entity.setParentName(insertData.getParentName());
    				entity.setStreamName(dbResponse.get().getStreamName());
    				entity.setDOB(dbResponse.get().getDOB());
    				entity.setPOY(dbResponse.get().getPOY());
    				entity.setMobileNumber(dbResponse.get().getMobileNumber());
    				entity.setMailID(dbResponse.get().getMailID());
    				entity.setAddress(dbResponse.get().getAddress());
    				entity.setStatus(dbResponse.get().getStatus());
    				
    				saveEntities.add(entity);
    			}else if(insertData.getId()!=null && insertData.getStreamName()!=null) {
    				entity.setId(dbResponse.get().getId());
    				entity.setRid(dbResponse.get().getRid());
    				entity.setName(dbResponse.get().getName());
    				entity.setParentName(dbResponse.get().getParentName());
    				entity.setStreamName(dbResponse.get().getStreamName());
    				entity.setDOB(dbResponse.get().getDOB());
    				entity.setPOY(dbResponse.get().getPOY());
    				entity.setMobileNumber(dbResponse.get().getMobileNumber());
    				entity.setMailID(dbResponse.get().getMailID());
    				entity.setAddress(dbResponse.get().getAddress());
    				entity.setStatus(dbResponse.get().getStatus());
    				
    				saveEntities.add(entity);
    			}else if(insertData.getId()!=null && insertData.getDOB()!=null) {
    				
    			}else if(insertData.getId()!=null && insertData.getPOY()!=null) {
    				
    			}else if(insertData.getId()!=null && insertData.getMobileNumber()!=null) {
    				
    			}else if(insertData.getId()!=null && insertData.getMailID()!=null) {
    				
    			}else if(insertData.getId()!=null && insertData.getAddress()!=null) {
    				
    			}else (insertData.getId()!=null && insertData.getStatus()!=null) {
    				
    			}
    			
    		}
    	}catch() {
    		
    	}
    }
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2038)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2243)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3278)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3055)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:540)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:132)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:94)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:91)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:158)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)

!ENTRY org.eclipse.jdt.ui 4 2 2025-06-10 23:50:51.647
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2038)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2243)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3278)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3055)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:540)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:132)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:94)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:91)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:158)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)

!ENTRY org.eclipse.jdt.ui 4 0 2025-06-10 23:50:51.648
!MESSAGE Error in JDT Core during reconcile
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2038)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2243)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3278)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3055)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:540)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:132)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:94)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:91)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:158)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)

!ENTRY org.eclipse.jdt.core 4 4 2025-06-10 23:50:51.688
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package com.example.EMSbackend.Service;

import java.util.ArrayList;
import java.util.List;
import java.util.Optional;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import com.example.EMSbackend.DTO.EMSGetAllDTO;
import com.example.EMSbackend.DTO.EMSInsertMultipleRequestDTO;
import com.example.EMSbackend.DTO.EMSInsertMultipleResponseDTO;
import com.example.EMSbackend.DTO.EMSInsertSingleRequestDTO;
import com.example.EMSbackend.DTO.EMSInsertSingleResponseDTO;
import com.example.EMSbackend.DTO.EMSUpdateRequestDTO;
import com.example.EMSbackend.DTO.EMSUpdateResponseDTO;
import com.example.EMSbackend.Model.EMSModel;
import com.example.EMSbackend.Repository.EMSRepository;

import lombok.extern.slf4j.Slf4j;

@Slf4j
@Service
public class EMSService {

	@Autowired
	private EMSRepository emsRepository;
	
	
//GET_ALL_EMPLOYEE_DETAILS
    public EMSGetAllDTO getEmployeeDetailsAll() {
    	EMSGetAllDTO response = new EMSGetAllDTO();
    
    	
    	//try { 	
    	List<EMSModel> modelDetails = (List<EMSModel>) emsRepository.findAll();
    	response.setEmployeeDetailsAll(modelDetails);
    	
    	/*if(modelDetails!=null) {
    		response.setEmployeeDetailsAll(modelDetails);
    	}
    	else {
    		System.out.println("Employee not found");
    		//log.info("Service response not found");
    	}
    	
    	}catch (Exception e) {
            System.out.println("Error while fetching employee list: " + e.getMessage());
            e.printStackTrace();
        }*/
    	    
    	return response;
    }
    
//INSERT_ALL_EMPLOYEE_DETAILS(SINGLE_DATA/NOT_LIST)
    public EMSInsertSingleResponseDTO insertEmployeeDetails(EMSInsertSingleRequestDTO requestData) {
    	EMSInsertSingleResponseDTO response = new EMSInsertSingleResponseDTO();
    	String message = "FAILURE";
    	List<EMSModel> entityList = new ArrayList<>();
  
    	try {
    	if (requestData != null) {
    		EMSModel entity = new EMSModel();
    		entity.setId(requestData.getId());
			entity.setRid(requestData.getRid());
			entity.setName(requestData.getName());
			entity.setParentName(requestData.getParentName());
			entity.setStreamName(requestData.getStreamName());
			entity.setDOB(requestData.getDOB());
			entity.setPOY(requestData.getPOY());
			entity.setMobileNumber(requestData.getMobileNumber());
			entity.setMailID(requestData.getMailID());
			entity.setAddress(requestData.getAddress());
			entity.setStatus(requestData.getStatus());
			 
			c
   
			List<EMSModel> savedEntities = emsRepository.saveAll(entityList);
			if (savedEntities != null && !savedEntities.isEmpty()) {
	            message = "SUCCESS";
	            response.setMessage(message);
	            response.setCode("200 OK");
	        } else {
	            response.setMessage("Insert failed");
	            response.setCode("500 INTERNAL SERVER ERROR");
	        }
    	}else {
            response.setMessage("Input list is null or empty");
            response.setCode("400 BAD REQUEST");
        }
    	}catch (Exception e) {
    		e.printStackTrace();
    		response.setMessage("Exception occurred");
            response.setCode("500 INTERNAL SERVER ERROR");
    	}
  
    	return response;
    	
    }
    
    
   
//INSERT_ALL_EMPLOYEE_DETAILS(MULTIPLE/LIST)
    
    public EMSInsertMultipleResponseDTO insertEmployeeDetailsAll(EMSInsertMultipleRequestDTO insertData) {
    	EMSInsertMultipleResponseDTO response = new EMSInsertMultipleResponseDTO();
    	String message = "FAILURE";
    	
    	try {
    		List<EMSModel> dtoList = insertData.getEmployeeDetailsRequestAll();
 
    		if (dtoList != null && !dtoList.isEmpty()) {
    			
    			List<EMSModel> entityList = new ArrayList<>();
    			
    			for (EMSModel dto : dtoList){
    				
    			EMSModel entity = new EMSModel();
    			 entity.setId(dto.getId());
    			 entity.setRid(dto.getRid());
    			 entity.setName(dto.getName());
    			 entity.setParentName(dto.getParentName());
    			 entity.setStreamName(dto.getStreamName());
    			 entity.setDOB(dto.getDOB());
    			 entity.setPOY(dto.getPOY());
    			 entity.setMobileNumber(dto.getMobileNumber());
    			 entity.setMailID(dto.getMailID());
    			 entity.setAddress(dto.getAddress());
    			 entity.setStatus(dto.getStatus());
    			 
    			 entityList.add(entity);
    			}
    			
    			List<EMSModel> savedEntities = emsRepository.saveAll(entityList);
                

                if (savedEntities != null && !savedEntities.isEmpty()) {
                    message = "SUCCESS";
                    response.setMessage(message);
                    response.setCode("200 OK");
                } else {
                    response.setMessage("Insert failed");
                    response.setCode("500 INTERNAL SERVER ERROR");
                }
    			
    		}else {
    			response.setMessage("Input list is null or empty");
                response.setCode("400 BAD REQUEST");
    		}
    	}catch (Exception e) {
    		e.printStackTrace();
    		response.setMessage("Exception occurred");
            response.setCode("500 INTERNAL SERVER ERROR");
    	}
    	return response;
    }
    
//UPDATE
    public EMSUpdateResponseDTO updateEmployeeDetails(EMSUpdateRequestDTO insertData) {
    	EMSUpdateResponseDTO response =new EMSUpdateResponseDTO();
    	List<EMSModel> saveEntities =  new ArrayList<>();
    	try {
    		Optional<EMSModel> dbResponse = emsRepository.findById(insertData.getId());
    		if(dbResponse.isPresent()) {
    			EMSModel entity = new EMSModel();
    			
    			if(insertData.getId()!=null && insertData.getRid()!=null) {
    			
    				entity.setId(dbResponse.get().getId());
    				entity.setRid(insertData.getRid());
    				entity.setName(dbResponse.get().getName());
    				entity.setParentName(dbResponse.get().getParentName());
    				entity.setStreamName(dbResponse.get().getStreamName());
    				entity.setDOB(dbResponse.get().getDOB());
    				entity.setPOY(dbResponse.get().getPOY());
    				entity.setMobileNumber(dbResponse.get().getMobileNumber());
    				entity.setMailID(dbResponse.get().getMailID());
    				entity.setAddress(dbResponse.get().getAddress());
    				entity.setStatus(dbResponse.get().getStatus());
    				
    				saveEntities.add(entity);
    				
    				
    			}else if(insertData.getId()!=null && insertData.getName()!=null) {
    				entity.setId(dbResponse.get().getId());
    				entity.setRid(dbResponse.get().getRid());
    				entity.setName(insertData.getName());
    				entity.setParentName(dbResponse.get().getParentName());
    				entity.setStreamName(dbResponse.get().getStreamName());
    				entity.setDOB(dbResponse.get().getDOB());
    				entity.setPOY(dbResponse.get().getPOY());
    				entity.setMobileNumber(dbResponse.get().getMobileNumber());
    				entity.setMailID(dbResponse.get().getMailID());
    				entity.setAddress(dbResponse.get().getAddress());
    				entity.setStatus(dbResponse.get().getStatus());
    				
    				saveEntities.add(entity);
    			}else if(insertData.getId()!=null && insertData.getParentName()!=null) {
    				entity.setId(dbResponse.get().getId());
    				entity.setRid(dbResponse.get().getRid());
    				entity.setName(dbResponse.get().getName());
    				entity.setParentName(insertData.getParentName());
    				entity.setStreamName(dbResponse.get().getStreamName());
    				entity.setDOB(dbResponse.get().getDOB());
    				entity.setPOY(dbResponse.get().getPOY());
    				entity.setMobileNumber(dbResponse.get().getMobileNumber());
    				entity.setMailID(dbResponse.get().getMailID());
    				entity.setAddress(dbResponse.get().getAddress());
    				entity.setStatus(dbResponse.get().getStatus());
    				
    				saveEntities.add(entity);
    			}else if(insertData.getId()!=null && insertData.getStreamName()!=null) {
    				entity.setId(dbResponse.get().getId());
    				entity.setRid(dbResponse.get().getRid());
    				entity.setName(dbResponse.get().getName());
    				entity.setParentName(dbResponse.get().getParentName());
    				entity.setStreamName(dbResponse.get().getStreamName());
    				entity.setDOB(dbResponse.get().getDOB());
    				entity.setPOY(dbResponse.get().getPOY());
    				entity.setMobileNumber(dbResponse.get().getMobileNumber());
    				entity.setMailID(dbResponse.get().getMailID());
    				entity.setAddress(dbResponse.get().getAddress());
    				entity.setStatus(dbResponse.get().getStatus());
    				
    				saveEntities.add(entity);
    			}else if(insertData.getId()!=null && insertData.getDOB()!=null) {
    				
    			}else if(insertData.getId()!=null && insertData.getPOY()!=null) {
    				
    			}else if(insertData.getId()!=null && insertData.getMobileNumber()!=null) {
    				
    			}else if(insertData.getId()!=null && insertData.getMailID()!=null) {
    				
    			}else if(insertData.getId()!=null && insertData.getAddress()!=null) {
    				
    			}else (insertData.getId()!=null && insertData.getStatus()!=null) {
    				
    			}
    			
    		}
    	}catch() {
    		
    	}
    }
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2038)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2243)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3278)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3055)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2025-06-10 23:50:51.690
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2038)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2243)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3278)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3055)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2025-06-10 23:50:51.693
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2038)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2243)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3278)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3055)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core 4 4 2025-06-10 23:50:52.967
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package com.example.EMSbackend.Service;

import java.util.ArrayList;
import java.util.List;
import java.util.Optional;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import com.example.EMSbackend.DTO.EMSGetAllDTO;
import com.example.EMSbackend.DTO.EMSInsertMultipleRequestDTO;
import com.example.EMSbackend.DTO.EMSInsertMultipleResponseDTO;
import com.example.EMSbackend.DTO.EMSInsertSingleRequestDTO;
import com.example.EMSbackend.DTO.EMSInsertSingleResponseDTO;
import com.example.EMSbackend.DTO.EMSUpdateRequestDTO;
import com.example.EMSbackend.DTO.EMSUpdateResponseDTO;
import com.example.EMSbackend.Model.EMSModel;
import com.example.EMSbackend.Repository.EMSRepository;

import lombok.extern.slf4j.Slf4j;

@Slf4j
@Service
public class EMSService {

	@Autowired
	private EMSRepository emsRepository;
	
	
//GET_ALL_EMPLOYEE_DETAILS
    public EMSGetAllDTO getEmployeeDetailsAll() {
    	EMSGetAllDTO response = new EMSGetAllDTO();
    
    	
    	//try { 	
    	List<EMSModel> modelDetails = (List<EMSModel>) emsRepository.findAll();
    	response.setEmployeeDetailsAll(modelDetails);
    	
    	/*if(modelDetails!=null) {
    		response.setEmployeeDetailsAll(modelDetails);
    	}
    	else {
    		System.out.println("Employee not found");
    		//log.info("Service response not found");
    	}
    	
    	}catch (Exception e) {
            System.out.println("Error while fetching employee list: " + e.getMessage());
            e.printStackTrace();
        }*/
    	    
    	return response;
    }
    
//INSERT_ALL_EMPLOYEE_DETAILS(SINGLE_DATA/NOT_LIST)
    public EMSInsertSingleResponseDTO insertEmployeeDetails(EMSInsertSingleRequestDTO requestData) {
    	EMSInsertSingleResponseDTO response = new EMSInsertSingleResponseDTO();
    	String message = "FAILURE";
    	List<EMSModel> entityList = new ArrayList<>();
  
    	try {
    	if (requestData != null) {
    		EMSModel entity = new EMSModel();
    		entity.setId(requestData.getId());
			entity.setRid(requestData.getRid());
			entity.setName(requestData.getName());
			entity.setParentName(requestData.getParentName());
			entity.setStreamName(requestData.getStreamName());
			entity.setDOB(requestData.getDOB());
			entity.setPOY(requestData.getPOY());
			entity.setMobileNumber(requestData.getMobileNumber());
			entity.setMailID(requestData.getMailID());
			entity.setAddress(requestData.getAddress());
			entity.setStatus(requestData.getStatus());
			 
			c
   
			List<EMSModel> savedEntities = emsRepository.saveAll(entityList);
			if (savedEntities != null && !savedEntities.isEmpty()) {
	            message = "SUCCESS";
	            response.setMessage(message);
	            response.setCode("200 OK");
	        } else {
	            response.setMessage("Insert failed");
	            response.setCode("500 INTERNAL SERVER ERROR");
	        }
    	}else {
            response.setMessage("Input list is null or empty");
            response.setCode("400 BAD REQUEST");
        }
    	}catch (Exception e) {
    		e.printStackTrace();
    		response.setMessage("Exception occurred");
            response.setCode("500 INTERNAL SERVER ERROR");
    	}
  
    	return response;
    	
    }
    
    
   
//INSERT_ALL_EMPLOYEE_DETAILS(MULTIPLE/LIST)
    
    public EMSInsertMultipleResponseDTO insertEmployeeDetailsAll(EMSInsertMultipleRequestDTO insertData) {
    	EMSInsertMultipleResponseDTO response = new EMSInsertMultipleResponseDTO();
    	String message = "FAILURE";
    	
    	try {
    		List<EMSModel> dtoList = insertData.getEmployeeDetailsRequestAll();
 
    		if (dtoList != null && !dtoList.isEmpty()) {
    			
    			List<EMSModel> entityList = new ArrayList<>();
    			
    			for (EMSModel dto : dtoList){
    				
    			EMSModel entity = new EMSModel();
    			 entity.setId(dto.getId());
    			 entity.setRid(dto.getRid());
    			 entity.setName(dto.getName());
    			 entity.setParentName(dto.getParentName());
    			 entity.setStreamName(dto.getStreamName());
    			 entity.setDOB(dto.getDOB());
    			 entity.setPOY(dto.getPOY());
    			 entity.setMobileNumber(dto.getMobileNumber());
    			 entity.setMailID(dto.getMailID());
    			 entity.setAddress(dto.getAddress());
    			 entity.setStatus(dto.getStatus());
    			 
    			 entityList.add(entity);
    			}
    			
    			List<EMSModel> savedEntities = emsRepository.saveAll(entityList);
                

                if (savedEntities != null && !savedEntities.isEmpty()) {
                    message = "SUCCESS";
                    response.setMessage(message);
                    response.setCode("200 OK");
                } else {
                    response.setMessage("Insert failed");
                    response.setCode("500 INTERNAL SERVER ERROR");
                }
    			
    		}else {
    			response.setMessage("Input list is null or empty");
                response.setCode("400 BAD REQUEST");
    		}
    	}catch (Exception e) {
    		e.printStackTrace();
    		response.setMessage("Exception occurred");
            response.setCode("500 INTERNAL SERVER ERROR");
    	}
    	return response;
    }
    
//UPDATE
    public EMSUpdateResponseDTO updateEmployeeDetails(EMSUpdateRequestDTO insertData) {
    	EMSUpdateResponseDTO response =new EMSUpdateResponseDTO();
    	List<EMSModel> saveEntities =  new ArrayList<>();
    	try {
    		Optional<EMSModel> dbResponse = emsRepository.findById(insertData.getId());
    		if(dbResponse.isPresent()) {
    			EMSModel entity = new EMSModel();
    			
    			if(insertData.getId()!=null && insertData.getRid()!=null) {
    			
    				entity.setId(dbResponse.get().getId());
    				entity.setRid(insertData.getRid());
    				entity.setName(dbResponse.get().getName());
    				entity.setParentName(dbResponse.get().getParentName());
    				entity.setStreamName(dbResponse.get().getStreamName());
    				entity.setDOB(dbResponse.get().getDOB());
    				entity.setPOY(dbResponse.get().getPOY());
    				entity.setMobileNumber(dbResponse.get().getMobileNumber());
    				entity.setMailID(dbResponse.get().getMailID());
    				entity.setAddress(dbResponse.get().getAddress());
    				entity.setStatus(dbResponse.get().getStatus());
    				
    				saveEntities.add(entity);
    				
    				
    			}else if(insertData.getId()!=null && insertData.getName()!=null) {
    				entity.setId(dbResponse.get().getId());
    				entity.setRid(dbResponse.get().getRid());
    				entity.setName(insertData.getName());
    				entity.setParentName(dbResponse.get().getParentName());
    				entity.setStreamName(dbResponse.get().getStreamName());
    				entity.setDOB(dbResponse.get().getDOB());
    				entity.setPOY(dbResponse.get().getPOY());
    				entity.setMobileNumber(dbResponse.get().getMobileNumber());
    				entity.setMailID(dbResponse.get().getMailID());
    				entity.setAddress(dbResponse.get().getAddress());
    				entity.setStatus(dbResponse.get().getStatus());
    				
    				saveEntities.add(entity);
    			}else if(insertData.getId()!=null && insertData.getParentName()!=null) {
    				entity.setId(dbResponse.get().getId());
    				entity.setRid(dbResponse.get().getRid());
    				entity.setName(dbResponse.get().getName());
    				entity.setParentName(insertData.getParentName());
    				entity.setStreamName(dbResponse.get().getStreamName());
    				entity.setDOB(dbResponse.get().getDOB());
    				entity.setPOY(dbResponse.get().getPOY());
    				entity.setMobileNumber(dbResponse.get().getMobileNumber());
    				entity.setMailID(dbResponse.get().getMailID());
    				entity.setAddress(dbResponse.get().getAddress());
    				entity.setStatus(dbResponse.get().getStatus());
    				
    				saveEntities.add(entity);
    			}else if(insertData.getId()!=null && insertData.getStreamName()!=null) {
    				entity.setId(dbResponse.get().getId());
    				entity.setRid(dbResponse.get().getRid());
    				entity.setName(dbResponse.get().getName());
    				entity.setParentName(dbResponse.get().getParentName());
    				entity.setStreamName(dbResponse.get().getStreamName());
    				entity.setDOB(dbResponse.get().getDOB());
    				entity.setPOY(dbResponse.get().getPOY());
    				entity.setMobileNumber(dbResponse.get().getMobileNumber());
    				entity.setMailID(dbResponse.get().getMailID());
    				entity.setAddress(dbResponse.get().getAddress());
    				entity.setStatus(dbResponse.get().getStatus());
    				
    				saveEntities.add(entity);
    			}else if(insertData.getId()!=null && insertData.getDOB()!=null) {
    				
    			}else if(insertData.getId()!=null && insertData.getPOY()!=null) {
    				
    			}else if(insertData.getId()!=null && insertData.getMobileNumber()!=null) {
    				
    			}else if(insertData.getId()!=null && insertData.getMailID()!=null) {
    				
    			}else if(insertData.getId()!=null && insertData.getAddress()!=null) {
    				
    			}else (insertData.getId()!=null && insertData.getStatus()!=null) {
    				
    			}
    			
    		}
    	}catch() {
    		
    	}
    }
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2038)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2243)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3278)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3055)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2025-06-10 23:50:52.972
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2038)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2243)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3278)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3055)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2025-06-10 23:50:52.974
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2038)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2243)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3278)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3055)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core 4 4 2025-06-10 23:50:55.699
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package com.example.EMSbackend.Service;

import java.util.ArrayList;
import java.util.List;
import java.util.Optional;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import com.example.EMSbackend.DTO.EMSGetAllDTO;
import com.example.EMSbackend.DTO.EMSInsertMultipleRequestDTO;
import com.example.EMSbackend.DTO.EMSInsertMultipleResponseDTO;
import com.example.EMSbackend.DTO.EMSInsertSingleRequestDTO;
import com.example.EMSbackend.DTO.EMSInsertSingleResponseDTO;
import com.example.EMSbackend.DTO.EMSUpdateRequestDTO;
import com.example.EMSbackend.DTO.EMSUpdateResponseDTO;
import com.example.EMSbackend.Model.EMSModel;
import com.example.EMSbackend.Repository.EMSRepository;

import lombok.extern.slf4j.Slf4j;

@Slf4j
@Service
public class EMSService {

	@Autowired
	private EMSRepository emsRepository;
	
	
//GET_ALL_EMPLOYEE_DETAILS
    public EMSGetAllDTO getEmployeeDetailsAll() {
    	EMSGetAllDTO response = new EMSGetAllDTO();
    
    	
    	//try { 	
    	List<EMSModel> modelDetails = (List<EMSModel>) emsRepository.findAll();
    	response.setEmployeeDetailsAll(modelDetails);
    	
    	/*if(modelDetails!=null) {
    		response.setEmployeeDetailsAll(modelDetails);
    	}
    	else {
    		System.out.println("Employee not found");
    		//log.info("Service response not found");
    	}
    	
    	}catch (Exception e) {
            System.out.println("Error while fetching employee list: " + e.getMessage());
            e.printStackTrace();
        }*/
    	    
    	return response;
    }
    
//INSERT_ALL_EMPLOYEE_DETAILS(SINGLE_DATA/NOT_LIST)
    public EMSInsertSingleResponseDTO insertEmployeeDetails(EMSInsertSingleRequestDTO requestData) {
    	EMSInsertSingleResponseDTO response = new EMSInsertSingleResponseDTO();
    	String message = "FAILURE";
    	List<EMSModel> entityList = new ArrayList<>();
  
    	try {
    	if (requestData != null) {
    		EMSModel entity = new EMSModel();
    		entity.setId(requestData.getId());
			entity.setRid(requestData.getRid());
			entity.setName(requestData.getName());
			entity.setParentName(requestData.getParentName());
			entity.setStreamName(requestData.getStreamName());
			entity.setDOB(requestData.getDOB());
			entity.setPOY(requestData.getPOY());
			entity.setMobileNumber(requestData.getMobileNumber());
			entity.setMailID(requestData.getMailID());
			entity.setAddress(requestData.getAddress());
			entity.setStatus(requestData.getStatus());
			 
			c
   
			List<EMSModel> savedEntities = emsRepository.saveAll(entityList);
			if (savedEntities != null && !savedEntities.isEmpty()) {
	            message = "SUCCESS";
	            response.setMessage(message);
	            response.setCode("200 OK");
	        } else {
	            response.setMessage("Insert failed");
	            response.setCode("500 INTERNAL SERVER ERROR");
	        }
    	}else {
            response.setMessage("Input list is null or empty");
            response.setCode("400 BAD REQUEST");
        }
    	}catch (Exception e) {
    		e.printStackTrace();
    		response.setMessage("Exception occurred");
            response.setCode("500 INTERNAL SERVER ERROR");
    	}
  
    	return response;
    	
    }
    
    
   
//INSERT_ALL_EMPLOYEE_DETAILS(MULTIPLE/LIST)
    
    public EMSInsertMultipleResponseDTO insertEmployeeDetailsAll(EMSInsertMultipleRequestDTO insertData) {
    	EMSInsertMultipleResponseDTO response = new EMSInsertMultipleResponseDTO();
    	String message = "FAILURE";
    	
    	try {
    		List<EMSModel> dtoList = insertData.getEmployeeDetailsRequestAll();
 
    		if (dtoList != null && !dtoList.isEmpty()) {
    			
    			List<EMSModel> entityList = new ArrayList<>();
    			
    			for (EMSModel dto : dtoList){
    				
    			EMSModel entity = new EMSModel();
    			 entity.setId(dto.getId());
    			 entity.setRid(dto.getRid());
    			 entity.setName(dto.getName());
    			 entity.setParentName(dto.getParentName());
    			 entity.setStreamName(dto.getStreamName());
    			 entity.setDOB(dto.getDOB());
    			 entity.setPOY(dto.getPOY());
    			 entity.setMobileNumber(dto.getMobileNumber());
    			 entity.setMailID(dto.getMailID());
    			 entity.setAddress(dto.getAddress());
    			 entity.setStatus(dto.getStatus());
    			 
    			 entityList.add(entity);
    			}
    			
    			List<EMSModel> savedEntities = emsRepository.saveAll(entityList);
                

                if (savedEntities != null && !savedEntities.isEmpty()) {
                    message = "SUCCESS";
                    response.setMessage(message);
                    response.setCode("200 OK");
                } else {
                    response.setMessage("Insert failed");
                    response.setCode("500 INTERNAL SERVER ERROR");
                }
    			
    		}else {
    			response.setMessage("Input list is null or empty");
                response.setCode("400 BAD REQUEST");
    		}
    	}catch (Exception e) {
    		e.printStackTrace();
    		response.setMessage("Exception occurred");
            response.setCode("500 INTERNAL SERVER ERROR");
    	}
    	return response;
    }
    
//UPDATE
    public EMSUpdateResponseDTO updateEmployeeDetails(EMSUpdateRequestDTO insertData) {
    	EMSUpdateResponseDTO response =new EMSUpdateResponseDTO();
    	List<EMSModel> saveEntities =  new ArrayList<>();
    	try {
    		Optional<EMSModel> dbResponse = emsRepository.findById(insertData.getId());
    		if(dbResponse.isPresent()) {
    			EMSModel entity = new EMSModel();
    			
    			if(insertData.getId()!=null && insertData.getRid()!=null) {
    			
    				entity.setId(dbResponse.get().getId());
    				entity.setRid(insertData.getRid());
    				entity.setName(dbResponse.get().getName());
    				entity.setParentName(dbResponse.get().getParentName());
    				entity.setStreamName(dbResponse.get().getStreamName());
    				entity.setDOB(dbResponse.get().getDOB());
    				entity.setPOY(dbResponse.get().getPOY());
    				entity.setMobileNumber(dbResponse.get().getMobileNumber());
    				entity.setMailID(dbResponse.get().getMailID());
    				entity.setAddress(dbResponse.get().getAddress());
    				entity.setStatus(dbResponse.get().getStatus());
    				
    				saveEntities.add(entity);
    				
    				
    			}else if(insertData.getId()!=null && insertData.getName()!=null) {
    				entity.setId(dbResponse.get().getId());
    				entity.setRid(dbResponse.get().getRid());
    				entity.setName(insertData.getName());
    				entity.setParentName(dbResponse.get().getParentName());
    				entity.setStreamName(dbResponse.get().getStreamName());
    				entity.setDOB(dbResponse.get().getDOB());
    				entity.setPOY(dbResponse.get().getPOY());
    				entity.setMobileNumber(dbResponse.get().getMobileNumber());
    				entity.setMailID(dbResponse.get().getMailID());
    				entity.setAddress(dbResponse.get().getAddress());
    				entity.setStatus(dbResponse.get().getStatus());
    				
    				saveEntities.add(entity);
    			}else if(insertData.getId()!=null && insertData.getParentName()!=null) {
    				entity.setId(dbResponse.get().getId());
    				entity.setRid(dbResponse.get().getRid());
    				entity.setName(dbResponse.get().getName());
    				entity.setParentName(insertData.getParentName());
    				entity.setStreamName(dbResponse.get().getStreamName());
    				entity.setDOB(dbResponse.get().getDOB());
    				entity.setPOY(dbResponse.get().getPOY());
    				entity.setMobileNumber(dbResponse.get().getMobileNumber());
    				entity.setMailID(dbResponse.get().getMailID());
    				entity.setAddress(dbResponse.get().getAddress());
    				entity.setStatus(dbResponse.get().getStatus());
    				
    				saveEntities.add(entity);
    			}else if(insertData.getId()!=null && insertData.getStreamName()!=null) {
    				entity.setId(dbResponse.get().getId());
    				entity.setRid(dbResponse.get().getRid());
    				entity.setName(dbResponse.get().getName());
    				entity.setParentName(dbResponse.get().getParentName());
    				entity.setStreamName(dbResponse.get().getStreamName());
    				entity.setDOB(dbResponse.get().getDOB());
    				entity.setPOY(dbResponse.get().getPOY());
    				entity.setMobileNumber(dbResponse.get().getMobileNumber());
    				entity.setMailID(dbResponse.get().getMailID());
    				entity.setAddress(dbResponse.get().getAddress());
    				entity.setStatus(dbResponse.get().getStatus());
    				
    				saveEntities.add(entity);
    			}else if(insertData.getId()!=null && insertData.getDOB()!=null) {
    				
    			}else if(insertData.getId()!=null && insertData.getPOY()!=null) {
    				
    			}else if(insertData.getId()!=null && insertData.getMobileNumber()!=null) {
    				
    			}else if(insertData.getId()!=null && insertData.getMailID()!=null) {
    				
    			}else if(insertData.getId()!=null && insertData.getAddress()!=null) {
    				
    			}else (insertData.getId()!=null && insertData.getStatus()!=null) {
    				
    			}
    			
    		}
    	}catch() {
    		
    	}
    }
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2038)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2243)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3278)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3055)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2025-06-10 23:50:55.705
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2038)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2243)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3278)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3055)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2025-06-10 23:50:55.707
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2038)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2243)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3278)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3055)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core 4 4 2025-06-10 23:50:55.852
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package com.example.EMSbackend.Service;

import java.util.ArrayList;
import java.util.List;
import java.util.Optional;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import com.example.EMSbackend.DTO.EMSGetAllDTO;
import com.example.EMSbackend.DTO.EMSInsertMultipleRequestDTO;
import com.example.EMSbackend.DTO.EMSInsertMultipleResponseDTO;
import com.example.EMSbackend.DTO.EMSInsertSingleRequestDTO;
import com.example.EMSbackend.DTO.EMSInsertSingleResponseDTO;
import com.example.EMSbackend.DTO.EMSUpdateRequestDTO;
import com.example.EMSbackend.DTO.EMSUpdateResponseDTO;
import com.example.EMSbackend.Model.EMSModel;
import com.example.EMSbackend.Repository.EMSRepository;

import lombok.extern.slf4j.Slf4j;

@Slf4j
@Service
public class EMSService {

	@Autowired
	private EMSRepository emsRepository;
	
	
//GET_ALL_EMPLOYEE_DETAILS
    public EMSGetAllDTO getEmployeeDetailsAll() {
    	EMSGetAllDTO response = new EMSGetAllDTO();
    
    	
    	//try { 	
    	List<EMSModel> modelDetails = (List<EMSModel>) emsRepository.findAll();
    	response.setEmployeeDetailsAll(modelDetails);
    	
    	/*if(modelDetails!=null) {
    		response.setEmployeeDetailsAll(modelDetails);
    	}
    	else {
    		System.out.println("Employee not found");
    		//log.info("Service response not found");
    	}
    	
    	}catch (Exception e) {
            System.out.println("Error while fetching employee list: " + e.getMessage());
            e.printStackTrace();
        }*/
    	    
    	return response;
    }
    
//INSERT_ALL_EMPLOYEE_DETAILS(SINGLE_DATA/NOT_LIST)
    public EMSInsertSingleResponseDTO insertEmployeeDetails(EMSInsertSingleRequestDTO requestData) {
    	EMSInsertSingleResponseDTO response = new EMSInsertSingleResponseDTO();
    	String message = "FAILURE";
    	List<EMSModel> entityList = new ArrayList<>();
  
    	try {
    	if (requestData != null) {
    		EMSModel entity = new EMSModel();
    		entity.setId(requestData.getId());
			entity.setRid(requestData.getRid());
			entity.setName(requestData.getName());
			entity.setParentName(requestData.getParentName());
			entity.setStreamName(requestData.getStreamName());
			entity.setDOB(requestData.getDOB());
			entity.setPOY(requestData.getPOY());
			entity.setMobileNumber(requestData.getMobileNumber());
			entity.setMailID(requestData.getMailID());
			entity.setAddress(requestData.getAddress());
			entity.setStatus(requestData.getStatus());
			 
			c
   
			List<EMSModel> savedEntities = emsRepository.saveAll(entityList);
			if (savedEntities != null && !savedEntities.isEmpty()) {
	            message = "SUCCESS";
	            response.setMessage(message);
	            response.setCode("200 OK");
	        } else {
	            response.setMessage("Insert failed");
	            response.setCode("500 INTERNAL SERVER ERROR");
	        }
    	}else {
            response.setMessage("Input list is null or empty");
            response.setCode("400 BAD REQUEST");
        }
    	}catch (Exception e) {
    		e.printStackTrace();
    		response.setMessage("Exception occurred");
            response.setCode("500 INTERNAL SERVER ERROR");
    	}
  
    	return response;
    	
    }
    
    
   
//INSERT_ALL_EMPLOYEE_DETAILS(MULTIPLE/LIST)
    
    public EMSInsertMultipleResponseDTO insertEmployeeDetailsAll(EMSInsertMultipleRequestDTO insertData) {
    	EMSInsertMultipleResponseDTO response = new EMSInsertMultipleResponseDTO();
    	String message = "FAILURE";
    	
    	try {
    		List<EMSModel> dtoList = insertData.getEmployeeDetailsRequestAll();
 
    		if (dtoList != null && !dtoList.isEmpty()) {
    			
    			List<EMSModel> entityList = new ArrayList<>();
    			
    			for (EMSModel dto : dtoList){
    				
    			EMSModel entity = new EMSModel();
    			 entity.setId(dto.getId());
    			 entity.setRid(dto.getRid());
    			 entity.setName(dto.getName());
    			 entity.setParentName(dto.getParentName());
    			 entity.setStreamName(dto.getStreamName());
    			 entity.setDOB(dto.getDOB());
    			 entity.setPOY(dto.getPOY());
    			 entity.setMobileNumber(dto.getMobileNumber());
    			 entity.setMailID(dto.getMailID());
    			 entity.setAddress(dto.getAddress());
    			 entity.setStatus(dto.getStatus());
    			 
    			 entityList.add(entity);
    			}
    			
    			List<EMSModel> savedEntities = emsRepository.saveAll(entityList);
                

                if (savedEntities != null && !savedEntities.isEmpty()) {
                    message = "SUCCESS";
                    response.setMessage(message);
                    response.setCode("200 OK");
                } else {
                    response.setMessage("Insert failed");
                    response.setCode("500 INTERNAL SERVER ERROR");
                }
    			
    		}else {
    			response.setMessage("Input list is null or empty");
                response.setCode("400 BAD REQUEST");
    		}
    	}catch (Exception e) {
    		e.printStackTrace();
    		response.setMessage("Exception occurred");
            response.setCode("500 INTERNAL SERVER ERROR");
    	}
    	return response;
    }
    
//UPDATE
    public EMSUpdateResponseDTO updateEmployeeDetails(EMSUpdateRequestDTO insertData) {
    	EMSUpdateResponseDTO response =new EMSUpdateResponseDTO();
    	List<EMSModel> saveEntities =  new ArrayList<>();
    	try {
    		Optional<EMSModel> dbResponse = emsRepository.findById(insertData.getId());
    		if(dbResponse.isPresent()) {
    			EMSModel entity = new EMSModel();
    			
    			if(insertData.getId()!=null && insertData.getRid()!=null) {
    			
    				entity.setId(dbResponse.get().getId());
    				entity.setRid(insertData.getRid());
    				entity.setName(dbResponse.get().getName());
    				entity.setParentName(dbResponse.get().getParentName());
    				entity.setStreamName(dbResponse.get().getStreamName());
    				entity.setDOB(dbResponse.get().getDOB());
    				entity.setPOY(dbResponse.get().getPOY());
    				entity.setMobileNumber(dbResponse.get().getMobileNumber());
    				entity.setMailID(dbResponse.get().getMailID());
    				entity.setAddress(dbResponse.get().getAddress());
    				entity.setStatus(dbResponse.get().getStatus());
    				
    				saveEntities.add(entity);
    				
    				
    			}else if(insertData.getId()!=null && insertData.getName()!=null) {
    				entity.setId(dbResponse.get().getId());
    				entity.setRid(dbResponse.get().getRid());
    				entity.setName(insertData.getName());
    				entity.setParentName(dbResponse.get().getParentName());
    				entity.setStreamName(dbResponse.get().getStreamName());
    				entity.setDOB(dbResponse.get().getDOB());
    				entity.setPOY(dbResponse.get().getPOY());
    				entity.setMobileNumber(dbResponse.get().getMobileNumber());
    				entity.setMailID(dbResponse.get().getMailID());
    				entity.setAddress(dbResponse.get().getAddress());
    				entity.setStatus(dbResponse.get().getStatus());
    				
    				saveEntities.add(entity);
    			}else if(insertData.getId()!=null && insertData.getParentName()!=null) {
    				entity.setId(dbResponse.get().getId());
    				entity.setRid(dbResponse.get().getRid());
    				entity.setName(dbResponse.get().getName());
    				entity.setParentName(insertData.getParentName());
    				entity.setStreamName(dbResponse.get().getStreamName());
    				entity.setDOB(dbResponse.get().getDOB());
    				entity.setPOY(dbResponse.get().getPOY());
    				entity.setMobileNumber(dbResponse.get().getMobileNumber());
    				entity.setMailID(dbResponse.get().getMailID());
    				entity.setAddress(dbResponse.get().getAddress());
    				entity.setStatus(dbResponse.get().getStatus());
    				
    				saveEntities.add(entity);
    			}else if(insertData.getId()!=null && insertData.getStreamName()!=null) {
    				entity.setId(dbResponse.get().getId());
    				entity.setRid(dbResponse.get().getRid());
    				entity.setName(dbResponse.get().getName());
    				entity.setParentName(dbResponse.get().getParentName());
    				entity.setStreamName(dbResponse.get().getStreamName());
    				entity.setDOB(dbResponse.get().getDOB());
    				entity.setPOY(dbResponse.get().getPOY());
    				entity.setMobileNumber(dbResponse.get().getMobileNumber());
    				entity.setMailID(dbResponse.get().getMailID());
    				entity.setAddress(dbResponse.get().getAddress());
    				entity.setStatus(dbResponse.get().getStatus());
    				
    				saveEntities.add(entity);
    			}else if(insertData.getId()!=null && insertData.getDOB()!=null) {
    				
    			}else if(insertData.getId()!=null && insertData.getPOY()!=null) {
    				
    			}else if(insertData.getId()!=null && insertData.getMobileNumber()!=null) {
    				
    			}else if(insertData.getId()!=null && insertData.getMailID()!=null) {
    				
    			}else if(insertData.getId()!=null && insertData.getAddress()!=null) {
    				
    			}else (insertData.getId()!=null && insertData.getStatus()!=null) {
    				
    			}
    			
    		}
    	}catch() {
    		
    	}
    }
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2038)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2243)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3278)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3055)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.internalGetHoverInfo(NLSStringHover.java:141)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.getHoverInfo2(NLSStringHover.java:120)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:163)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:130)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:89)
	at org.eclipse.jface.text.TextViewerHoverManager$1.run(TextViewerHoverManager.java:155)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2025-06-10 23:50:55.855
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2038)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2243)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3278)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3055)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.internalGetHoverInfo(NLSStringHover.java:141)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.getHoverInfo2(NLSStringHover.java:120)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:163)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:130)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:89)
	at org.eclipse.jface.text.TextViewerHoverManager$1.run(TextViewerHoverManager.java:155)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2025-06-10 23:50:55.858
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2038)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2243)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3278)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3055)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.internalGetHoverInfo(NLSStringHover.java:141)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.getHoverInfo2(NLSStringHover.java:120)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:163)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:130)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:89)
	at org.eclipse.jface.text.TextViewerHoverManager$1.run(TextViewerHoverManager.java:155)

!ENTRY org.eclipse.jdt.core 4 4 2025-06-10 23:50:56.614
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package com.example.EMSbackend.Service;

import java.util.ArrayList;
import java.util.List;
import java.util.Optional;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import com.example.EMSbackend.DTO.EMSGetAllDTO;
import com.example.EMSbackend.DTO.EMSInsertMultipleRequestDTO;
import com.example.EMSbackend.DTO.EMSInsertMultipleResponseDTO;
import com.example.EMSbackend.DTO.EMSInsertSingleRequestDTO;
import com.example.EMSbackend.DTO.EMSInsertSingleResponseDTO;
import com.example.EMSbackend.DTO.EMSUpdateRequestDTO;
import com.example.EMSbackend.DTO.EMSUpdateResponseDTO;
import com.example.EMSbackend.Model.EMSModel;
import com.example.EMSbackend.Repository.EMSRepository;

import lombok.extern.slf4j.Slf4j;

@Slf4j
@Service
public class EMSService {

	@Autowired
	private EMSRepository emsRepository;
	
	
//GET_ALL_EMPLOYEE_DETAILS
    public EMSGetAllDTO getEmployeeDetailsAll() {
    	EMSGetAllDTO response = new EMSGetAllDTO();
    
    	
    	//try { 	
    	List<EMSModel> modelDetails = (List<EMSModel>) emsRepository.findAll();
    	response.setEmployeeDetailsAll(modelDetails);
    	
    	/*if(modelDetails!=null) {
    		response.setEmployeeDetailsAll(modelDetails);
    	}
    	else {
    		System.out.println("Employee not found");
    		//log.info("Service response not found");
    	}
    	
    	}catch (Exception e) {
            System.out.println("Error while fetching employee list: " + e.getMessage());
            e.printStackTrace();
        }*/
    	    
    	return response;
    }
    
//INSERT_ALL_EMPLOYEE_DETAILS(SINGLE_DATA/NOT_LIST)
    public EMSInsertSingleResponseDTO insertEmployeeDetails(EMSInsertSingleRequestDTO requestData) {
    	EMSInsertSingleResponseDTO response = new EMSInsertSingleResponseDTO();
    	String message = "FAILURE";
    	List<EMSModel> entityList = new ArrayList<>();
  
    	try {
    	if (requestData != null) {
    		EMSModel entity = new EMSModel();
    		entity.setId(requestData.getId());
			entity.setRid(requestData.getRid());
			entity.setName(requestData.getName());
			entity.setParentName(requestData.getParentName());
			entity.setStreamName(requestData.getStreamName());
			entity.setDOB(requestData.getDOB());
			entity.setPOY(requestData.getPOY());
			entity.setMobileNumber(requestData.getMobileNumber());
			entity.setMailID(requestData.getMailID());
			entity.setAddress(requestData.getAddress());
			entity.setStatus(requestData.getStatus());
			 
			c
   
			List<EMSModel> savedEntities = emsRepository.saveAll(entityList);
			if (savedEntities != null && !savedEntities.isEmpty()) {
	            message = "SUCCESS";
	            response.setMessage(message);
	            response.setCode("200 OK");
	        } else {
	            response.setMessage("Insert failed");
	            response.setCode("500 INTERNAL SERVER ERROR");
	        }
    	}else {
            response.setMessage("Input list is null or empty");
            response.setCode("400 BAD REQUEST");
        }
    	}catch (Exception e) {
    		e.printStackTrace();
    		response.setMessage("Exception occurred");
            response.setCode("500 INTERNAL SERVER ERROR");
    	}
  
    	return response;
    	
    }
    
    
   
//INSERT_ALL_EMPLOYEE_DETAILS(MULTIPLE/LIST)
    
    public EMSInsertMultipleResponseDTO insertEmployeeDetailsAll(EMSInsertMultipleRequestDTO insertData) {
    	EMSInsertMultipleResponseDTO response = new EMSInsertMultipleResponseDTO();
    	String message = "FAILURE";
    	
    	try {
    		List<EMSModel> dtoList = insertData.getEmployeeDetailsRequestAll();
 
    		if (dtoList != null && !dtoList.isEmpty()) {
    			
    			List<EMSModel> entityList = new ArrayList<>();
    			
    			for (EMSModel dto : dtoList){
    				
    			EMSModel entity = new EMSModel();
    			 entity.setId(dto.getId());
    			 entity.setRid(dto.getRid());
    			 entity.setName(dto.getName());
    			 entity.setParentName(dto.getParentName());
    			 entity.setStreamName(dto.getStreamName());
    			 entity.setDOB(dto.getDOB());
    			 entity.setPOY(dto.getPOY());
    			 entity.setMobileNumber(dto.getMobileNumber());
    			 entity.setMailID(dto.getMailID());
    			 entity.setAddress(dto.getAddress());
    			 entity.setStatus(dto.getStatus());
    			 
    			 entityList.add(entity);
    			}
    			
    			List<EMSModel> savedEntities = emsRepository.saveAll(entityList);
                

                if (savedEntities != null && !savedEntities.isEmpty()) {
                    message = "SUCCESS";
                    response.setMessage(message);
                    response.setCode("200 OK");
                } else {
                    response.setMessage("Insert failed");
                    response.setCode("500 INTERNAL SERVER ERROR");
                }
    			
    		}else {
    			response.setMessage("Input list is null or empty");
                response.setCode("400 BAD REQUEST");
    		}
    	}catch (Exception e) {
    		e.printStackTrace();
    		response.setMessage("Exception occurred");
            response.setCode("500 INTERNAL SERVER ERROR");
    	}
    	return response;
    }
    
//UPDATE
    public EMSUpdateResponseDTO updateEmployeeDetails(EMSUpdateRequestDTO insertData) {
    	EMSUpdateResponseDTO response =new EMSUpdateResponseDTO();
    	List<EMSModel> saveEntities =  new ArrayList<>();
    	try {
    		Optional<EMSModel> dbResponse = emsRepository.findById(insertData.getId());
    		if(dbResponse.isPresent()) {
    			EMSModel entity = new EMSModel();
    			
    			if(insertData.getId()!=null && insertData.getRid()!=null) {
    			
    				entity.setId(dbResponse.get().getId());
    				entity.setRid(insertData.getRid());
    				entity.setName(dbResponse.get().getName());
    				entity.setParentName(dbResponse.get().getParentName());
    				entity.setStreamName(dbResponse.get().getStreamName());
    				entity.setDOB(dbResponse.get().getDOB());
    				entity.setPOY(dbResponse.get().getPOY());
    				entity.setMobileNumber(dbResponse.get().getMobileNumber());
    				entity.setMailID(dbResponse.get().getMailID());
    				entity.setAddress(dbResponse.get().getAddress());
    				entity.setStatus(dbResponse.get().getStatus());
    				
    				saveEntities.add(entity);
    				
    				
    			}else if(insertData.getId()!=null && insertData.getName()!=null) {
    				entity.setId(dbResponse.get().getId());
    				entity.setRid(dbResponse.get().getRid());
    				entity.setName(insertData.getName());
    				entity.setParentName(dbResponse.get().getParentName());
    				entity.setStreamName(dbResponse.get().getStreamName());
    				entity.setDOB(dbResponse.get().getDOB());
    				entity.setPOY(dbResponse.get().getPOY());
    				entity.setMobileNumber(dbResponse.get().getMobileNumber());
    				entity.setMailID(dbResponse.get().getMailID());
    				entity.setAddress(dbResponse.get().getAddress());
    				entity.setStatus(dbResponse.get().getStatus());
    				
    				saveEntities.add(entity);
    			}else if(insertData.getId()!=null && insertData.getParentName()!=null) {
    				entity.setId(dbResponse.get().getId());
    				entity.setRid(dbResponse.get().getRid());
    				entity.setName(dbResponse.get().getName());
    				entity.setParentName(insertData.getParentName());
    				entity.setStreamName(dbResponse.get().getStreamName());
    				entity.setDOB(dbResponse.get().getDOB());
    				entity.setPOY(dbResponse.get().getPOY());
    				entity.setMobileNumber(dbResponse.get().getMobileNumber());
    				entity.setMailID(dbResponse.get().getMailID());
    				entity.setAddress(dbResponse.get().getAddress());
    				entity.setStatus(dbResponse.get().getStatus());
    				
    				saveEntities.add(entity);
    			}else if(insertData.getId()!=null && insertData.getStreamName()!=null) {
    				entity.setId(dbResponse.get().getId());
    				entity.setRid(dbResponse.get().getRid());
    				entity.setName(dbResponse.get().getName());
    				entity.setParentName(dbResponse.get().getParentName());
    				entity.setStreamName();
    				entity.setDOB(dbResponse.get().getDOB());
    				entity.setPOY(dbResponse.get().getPOY());
    				entity.setMobileNumber(dbResponse.get().getMobileNumber());
    				entity.setMailID(dbResponse.get().getMailID());
    				entity.setAddress(dbResponse.get().getAddress());
    				entity.setStatus(dbResponse.get().getStatus());
    				
    				saveEntities.add(entity);
    			}else if(insertData.getId()!=null && insertData.getDOB()!=null) {
    				
    			}else if(insertData.getId()!=null && insertData.getPOY()!=null) {
    				
    			}else if(insertData.getId()!=null && insertData.getMobileNumber()!=null) {
    				
    			}else if(insertData.getId()!=null && insertData.getMailID()!=null) {
    				
    			}else if(insertData.getId()!=null && insertData.getAddress()!=null) {
    				
    			}else (insertData.getId()!=null && insertData.getStatus()!=null) {
    				
    			}
    			
    		}
    	}catch() {
    		
    	}
    }
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2038)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2243)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3278)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3055)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:540)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:132)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:94)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:91)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:158)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)

!ENTRY org.eclipse.jdt.ui 4 2 2025-06-10 23:50:56.617
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2038)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2243)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3278)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3055)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:540)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:132)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:94)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:91)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:158)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)

!ENTRY org.eclipse.jdt.ui 4 0 2025-06-10 23:50:56.620
!MESSAGE Error in JDT Core during reconcile
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2038)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2243)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3278)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3055)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:540)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:132)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:94)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:91)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:158)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)

!ENTRY org.eclipse.jdt.core 4 4 2025-06-10 23:50:56.718
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package com.example.EMSbackend.Service;

import java.util.ArrayList;
import java.util.List;
import java.util.Optional;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import com.example.EMSbackend.DTO.EMSGetAllDTO;
import com.example.EMSbackend.DTO.EMSInsertMultipleRequestDTO;
import com.example.EMSbackend.DTO.EMSInsertMultipleResponseDTO;
import com.example.EMSbackend.DTO.EMSInsertSingleRequestDTO;
import com.example.EMSbackend.DTO.EMSInsertSingleResponseDTO;
import com.example.EMSbackend.DTO.EMSUpdateRequestDTO;
import com.example.EMSbackend.DTO.EMSUpdateResponseDTO;
import com.example.EMSbackend.Model.EMSModel;
import com.example.EMSbackend.Repository.EMSRepository;

import lombok.extern.slf4j.Slf4j;

@Slf4j
@Service
public class EMSService {

	@Autowired
	private EMSRepository emsRepository;
	
	
//GET_ALL_EMPLOYEE_DETAILS
    public EMSGetAllDTO getEmployeeDetailsAll() {
    	EMSGetAllDTO response = new EMSGetAllDTO();
    
    	
    	//try { 	
    	List<EMSModel> modelDetails = (List<EMSModel>) emsRepository.findAll();
    	response.setEmployeeDetailsAll(modelDetails);
    	
    	/*if(modelDetails!=null) {
    		response.setEmployeeDetailsAll(modelDetails);
    	}
    	else {
    		System.out.println("Employee not found");
    		//log.info("Service response not found");
    	}
    	
    	}catch (Exception e) {
            System.out.println("Error while fetching employee list: " + e.getMessage());
            e.printStackTrace();
        }*/
    	    
    	return response;
    }
    
//INSERT_ALL_EMPLOYEE_DETAILS(SINGLE_DATA/NOT_LIST)
    public EMSInsertSingleResponseDTO insertEmployeeDetails(EMSInsertSingleRequestDTO requestData) {
    	EMSInsertSingleResponseDTO response = new EMSInsertSingleResponseDTO();
    	String message = "FAILURE";
    	List<EMSModel> entityList = new ArrayList<>();
  
    	try {
    	if (requestData != null) {
    		EMSModel entity = new EMSModel();
    		entity.setId(requestData.getId());
			entity.setRid(requestData.getRid());
			entity.setName(requestData.getName());
			entity.setParentName(requestData.getParentName());
			entity.setStreamName(requestData.getStreamName());
			entity.setDOB(requestData.getDOB());
			entity.setPOY(requestData.getPOY());
			entity.setMobileNumber(requestData.getMobileNumber());
			entity.setMailID(requestData.getMailID());
			entity.setAddress(requestData.getAddress());
			entity.setStatus(requestData.getStatus());
			 
			c
   
			List<EMSModel> savedEntities = emsRepository.saveAll(entityList);
			if (savedEntities != null && !savedEntities.isEmpty()) {
	            message = "SUCCESS";
	            response.setMessage(message);
	            response.setCode("200 OK");
	        } else {
	            response.setMessage("Insert failed");
	            response.setCode("500 INTERNAL SERVER ERROR");
	        }
    	}else {
            response.setMessage("Input list is null or empty");
            response.setCode("400 BAD REQUEST");
        }
    	}catch (Exception e) {
    		e.printStackTrace();
    		response.setMessage("Exception occurred");
            response.setCode("500 INTERNAL SERVER ERROR");
    	}
  
    	return response;
    	
    }
    
    
   
//INSERT_ALL_EMPLOYEE_DETAILS(MULTIPLE/LIST)
    
    public EMSInsertMultipleResponseDTO insertEmployeeDetailsAll(EMSInsertMultipleRequestDTO insertData) {
    	EMSInsertMultipleResponseDTO response = new EMSInsertMultipleResponseDTO();
    	String message = "FAILURE";
    	
    	try {
    		List<EMSModel> dtoList = insertData.getEmployeeDetailsRequestAll();
 
    		if (dtoList != null && !dtoList.isEmpty()) {
    			
    			List<EMSModel> entityList = new ArrayList<>();
    			
    			for (EMSModel dto : dtoList){
    				
    			EMSModel entity = new EMSModel();
    			 entity.setId(dto.getId());
    			 entity.setRid(dto.getRid());
    			 entity.setName(dto.getName());
    			 entity.setParentName(dto.getParentName());
    			 entity.setStreamName(dto.getStreamName());
    			 entity.setDOB(dto.getDOB());
    			 entity.setPOY(dto.getPOY());
    			 entity.setMobileNumber(dto.getMobileNumber());
    			 entity.setMailID(dto.getMailID());
    			 entity.setAddress(dto.getAddress());
    			 entity.setStatus(dto.getStatus());
    			 
    			 entityList.add(entity);
    			}
    			
    			List<EMSModel> savedEntities = emsRepository.saveAll(entityList);
                

                if (savedEntities != null && !savedEntities.isEmpty()) {
                    message = "SUCCESS";
                    response.setMessage(message);
                    response.setCode("200 OK");
                } else {
                    response.setMessage("Insert failed");
                    response.setCode("500 INTERNAL SERVER ERROR");
                }
    			
    		}else {
    			response.setMessage("Input list is null or empty");
                response.setCode("400 BAD REQUEST");
    		}
    	}catch (Exception e) {
    		e.printStackTrace();
    		response.setMessage("Exception occurred");
            response.setCode("500 INTERNAL SERVER ERROR");
    	}
    	return response;
    }
    
//UPDATE
    public EMSUpdateResponseDTO updateEmployeeDetails(EMSUpdateRequestDTO insertData) {
    	EMSUpdateResponseDTO response =new EMSUpdateResponseDTO();
    	List<EMSModel> saveEntities =  new ArrayList<>();
    	try {
    		Optional<EMSModel> dbResponse = emsRepository.findById(insertData.getId());
    		if(dbResponse.isPresent()) {
    			EMSModel entity = new EMSModel();
    			
    			if(insertData.getId()!=null && insertData.getRid()!=null) {
    			
    				entity.setId(dbResponse.get().getId());
    				entity.setRid(insertData.getRid());
    				entity.setName(dbResponse.get().getName());
    				entity.setParentName(dbResponse.get().getParentName());
    				entity.setStreamName(dbResponse.get().getStreamName());
    				entity.setDOB(dbResponse.get().getDOB());
    				entity.setPOY(dbResponse.get().getPOY());
    				entity.setMobileNumber(dbResponse.get().getMobileNumber());
    				entity.setMailID(dbResponse.get().getMailID());
    				entity.setAddress(dbResponse.get().getAddress());
    				entity.setStatus(dbResponse.get().getStatus());
    				
    				saveEntities.add(entity);
    				
    				
    			}else if(insertData.getId()!=null && insertData.getName()!=null) {
    				entity.setId(dbResponse.get().getId());
    				entity.setRid(dbResponse.get().getRid());
    				entity.setName(insertData.getName());
    				entity.setParentName(dbResponse.get().getParentName());
    				entity.setStreamName(dbResponse.get().getStreamName());
    				entity.setDOB(dbResponse.get().getDOB());
    				entity.setPOY(dbResponse.get().getPOY());
    				entity.setMobileNumber(dbResponse.get().getMobileNumber());
    				entity.setMailID(dbResponse.get().getMailID());
    				entity.setAddress(dbResponse.get().getAddress());
    				entity.setStatus(dbResponse.get().getStatus());
    				
    				saveEntities.add(entity);
    			}else if(insertData.getId()!=null && insertData.getParentName()!=null) {
    				entity.setId(dbResponse.get().getId());
    				entity.setRid(dbResponse.get().getRid());
    				entity.setName(dbResponse.get().getName());
    				entity.setParentName(insertData.getParentName());
    				entity.setStreamName(dbResponse.get().getStreamName());
    				entity.setDOB(dbResponse.get().getDOB());
    				entity.setPOY(dbResponse.get().getPOY());
    				entity.setMobileNumber(dbResponse.get().getMobileNumber());
    				entity.setMailID(dbResponse.get().getMailID());
    				entity.setAddress(dbResponse.get().getAddress());
    				entity.setStatus(dbResponse.get().getStatus());
    				
    				saveEntities.add(entity);
    			}else if(insertData.getId()!=null && insertData.getStreamName()!=null) {
    				entity.setId(dbResponse.get().getId());
    				entity.setRid(dbResponse.get().getRid());
    				entity.setName(dbResponse.get().getName());
    				entity.setParentName(dbResponse.get().getParentName());
    				entity.setStreamName();
    				entity.setDOB(dbResponse.get().getDOB());
    				entity.setPOY(dbResponse.get().getPOY());
    				entity.setMobileNumber(dbResponse.get().getMobileNumber());
    				entity.setMailID(dbResponse.get().getMailID());
    				entity.setAddress(dbResponse.get().getAddress());
    				entity.setStatus(dbResponse.get().getStatus());
    				
    				saveEntities.add(entity);
    			}else if(insertData.getId()!=null && insertData.getDOB()!=null) {
    				
    			}else if(insertData.getId()!=null && insertData.getPOY()!=null) {
    				
    			}else if(insertData.getId()!=null && insertData.getMobileNumber()!=null) {
    				
    			}else if(insertData.getId()!=null && insertData.getMailID()!=null) {
    				
    			}else if(insertData.getId()!=null && insertData.getAddress()!=null) {
    				
    			}else (insertData.getId()!=null && insertData.getStatus()!=null) {
    				
    			}
    			
    		}
    	}catch() {
    		
    	}
    }
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2038)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2243)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3278)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3055)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2025-06-10 23:50:56.722
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2038)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2243)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3278)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3055)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2025-06-10 23:50:56.724
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2038)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2243)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3278)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3055)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core 4 4 2025-06-10 23:50:58.645
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package com.example.EMSbackend.Service;

import java.util.ArrayList;
import java.util.List;
import java.util.Optional;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import com.example.EMSbackend.DTO.EMSGetAllDTO;
import com.example.EMSbackend.DTO.EMSInsertMultipleRequestDTO;
import com.example.EMSbackend.DTO.EMSInsertMultipleResponseDTO;
import com.example.EMSbackend.DTO.EMSInsertSingleRequestDTO;
import com.example.EMSbackend.DTO.EMSInsertSingleResponseDTO;
import com.example.EMSbackend.DTO.EMSUpdateRequestDTO;
import com.example.EMSbackend.DTO.EMSUpdateResponseDTO;
import com.example.EMSbackend.Model.EMSModel;
import com.example.EMSbackend.Repository.EMSRepository;

import lombok.extern.slf4j.Slf4j;

@Slf4j
@Service
public class EMSService {

	@Autowired
	private EMSRepository emsRepository;
	
	
//GET_ALL_EMPLOYEE_DETAILS
    public EMSGetAllDTO getEmployeeDetailsAll() {
    	EMSGetAllDTO response = new EMSGetAllDTO();
    
    	
    	//try { 	
    	List<EMSModel> modelDetails = (List<EMSModel>) emsRepository.findAll();
    	response.setEmployeeDetailsAll(modelDetails);
    	
    	/*if(modelDetails!=null) {
    		response.setEmployeeDetailsAll(modelDetails);
    	}
    	else {
    		System.out.println("Employee not found");
    		//log.info("Service response not found");
    	}
    	
    	}catch (Exception e) {
            System.out.println("Error while fetching employee list: " + e.getMessage());
            e.printStackTrace();
        }*/
    	    
    	return response;
    }
    
//INSERT_ALL_EMPLOYEE_DETAILS(SINGLE_DATA/NOT_LIST)
    public EMSInsertSingleResponseDTO insertEmployeeDetails(EMSInsertSingleRequestDTO requestData) {
    	EMSInsertSingleResponseDTO response = new EMSInsertSingleResponseDTO();
    	String message = "FAILURE";
    	List<EMSModel> entityList = new ArrayList<>();
  
    	try {
    	if (requestData != null) {
    		EMSModel entity = new EMSModel();
    		entity.setId(requestData.getId());
			entity.setRid(requestData.getRid());
			entity.setName(requestData.getName());
			entity.setParentName(requestData.getParentName());
			entity.setStreamName(requestData.getStreamName());
			entity.setDOB(requestData.getDOB());
			entity.setPOY(requestData.getPOY());
			entity.setMobileNumber(requestData.getMobileNumber());
			entity.setMailID(requestData.getMailID());
			entity.setAddress(requestData.getAddress());
			entity.setStatus(requestData.getStatus());
			 
			c
   
			List<EMSModel> savedEntities = emsRepository.saveAll(entityList);
			if (savedEntities != null && !savedEntities.isEmpty()) {
	            message = "SUCCESS";
	            response.setMessage(message);
	            response.setCode("200 OK");
	        } else {
	            response.setMessage("Insert failed");
	            response.setCode("500 INTERNAL SERVER ERROR");
	        }
    	}else {
            response.setMessage("Input list is null or empty");
            response.setCode("400 BAD REQUEST");
        }
    	}catch (Exception e) {
    		e.printStackTrace();
    		response.setMessage("Exception occurred");
            response.setCode("500 INTERNAL SERVER ERROR");
    	}
  
    	return response;
    	
    }
    
    
   
//INSERT_ALL_EMPLOYEE_DETAILS(MULTIPLE/LIST)
    
    public EMSInsertMultipleResponseDTO insertEmployeeDetailsAll(EMSInsertMultipleRequestDTO insertData) {
    	EMSInsertMultipleResponseDTO response = new EMSInsertMultipleResponseDTO();
    	String message = "FAILURE";
    	
    	try {
    		List<EMSModel> dtoList = insertData.getEmployeeDetailsRequestAll();
 
    		if (dtoList != null && !dtoList.isEmpty()) {
    			
    			List<EMSModel> entityList = new ArrayList<>();
    			
    			for (EMSModel dto : dtoList){
    				
    			EMSModel entity = new EMSModel();
    			 entity.setId(dto.getId());
    			 entity.setRid(dto.getRid());
    			 entity.setName(dto.getName());
    			 entity.setParentName(dto.getParentName());
    			 entity.setStreamName(dto.getStreamName());
    			 entity.setDOB(dto.getDOB());
    			 entity.setPOY(dto.getPOY());
    			 entity.setMobileNumber(dto.getMobileNumber());
    			 entity.setMailID(dto.getMailID());
    			 entity.setAddress(dto.getAddress());
    			 entity.setStatus(dto.getStatus());
    			 
    			 entityList.add(entity);
    			}
    			
    			List<EMSModel> savedEntities = emsRepository.saveAll(entityList);
                

                if (savedEntities != null && !savedEntities.isEmpty()) {
                    message = "SUCCESS";
                    response.setMessage(message);
                    response.setCode("200 OK");
                } else {
                    response.setMessage("Insert failed");
                    response.setCode("500 INTERNAL SERVER ERROR");
                }
    			
    		}else {
    			response.setMessage("Input list is null or empty");
                response.setCode("400 BAD REQUEST");
    		}
    	}catch (Exception e) {
    		e.printStackTrace();
    		response.setMessage("Exception occurred");
            response.setCode("500 INTERNAL SERVER ERROR");
    	}
    	return response;
    }
    
//UPDATE
    public EMSUpdateResponseDTO updateEmployeeDetails(EMSUpdateRequestDTO insertData) {
    	EMSUpdateResponseDTO response =new EMSUpdateResponseDTO();
    	List<EMSModel> saveEntities =  new ArrayList<>();
    	try {
    		Optional<EMSModel> dbResponse = emsRepository.findById(insertData.getId());
    		if(dbResponse.isPresent()) {
    			EMSModel entity = new EMSModel();
    			
    			if(insertData.getId()!=null && insertData.getRid()!=null) {
    			
    				entity.setId(dbResponse.get().getId());
    				entity.setRid(insertData.getRid());
    				entity.setName(dbResponse.get().getName());
    				entity.setParentName(dbResponse.get().getParentName());
    				entity.setStreamName(dbResponse.get().getStreamName());
    				entity.setDOB(dbResponse.get().getDOB());
    				entity.setPOY(dbResponse.get().getPOY());
    				entity.setMobileNumber(dbResponse.get().getMobileNumber());
    				entity.setMailID(dbResponse.get().getMailID());
    				entity.setAddress(dbResponse.get().getAddress());
    				entity.setStatus(dbResponse.get().getStatus());
    				
    				saveEntities.add(entity);
    				
    				
    			}else if(insertData.getId()!=null && insertData.getName()!=null) {
    				entity.setId(dbResponse.get().getId());
    				entity.setRid(dbResponse.get().getRid());
    				entity.setName(insertData.getName());
    				entity.setParentName(dbResponse.get().getParentName());
    				entity.setStreamName(dbResponse.get().getStreamName());
    				entity.setDOB(dbResponse.get().getDOB());
    				entity.setPOY(dbResponse.get().getPOY());
    				entity.setMobileNumber(dbResponse.get().getMobileNumber());
    				entity.setMailID(dbResponse.get().getMailID());
    				entity.setAddress(dbResponse.get().getAddress());
    				entity.setStatus(dbResponse.get().getStatus());
    				
    				saveEntities.add(entity);
    			}else if(insertData.getId()!=null && insertData.getParentName()!=null) {
    				entity.setId(dbResponse.get().getId());
    				entity.setRid(dbResponse.get().getRid());
    				entity.setName(dbResponse.get().getName());
    				entity.setParentName(insertData.getParentName());
    				entity.setStreamName(dbResponse.get().getStreamName());
    				entity.setDOB(dbResponse.get().getDOB());
    				entity.setPOY(dbResponse.get().getPOY());
    				entity.setMobileNumber(dbResponse.get().getMobileNumber());
    				entity.setMailID(dbResponse.get().getMailID());
    				entity.setAddress(dbResponse.get().getAddress());
    				entity.setStatus(dbResponse.get().getStatus());
    				
    				saveEntities.add(entity);
    			}else if(insertData.getId()!=null && insertData.getStreamName()!=null) {
    				entity.setId(dbResponse.get().getId());
    				entity.setRid(dbResponse.get().getRid());
    				entity.setName(dbResponse.get().getName());
    				entity.setParentName(dbResponse.get().getParentName());
    				entity.setStreamName(insert);
    				entity.setDOB(dbResponse.get().getDOB());
    				entity.setPOY(dbResponse.get().getPOY());
    				entity.setMobileNumber(dbResponse.get().getMobileNumber());
    				entity.setMailID(dbResponse.get().getMailID());
    				entity.setAddress(dbResponse.get().getAddress());
    				entity.setStatus(dbResponse.get().getStatus());
    				
    				saveEntities.add(entity);
    			}else if(insertData.getId()!=null && insertData.getDOB()!=null) {
    				
    			}else if(insertData.getId()!=null && insertData.getPOY()!=null) {
    				
    			}else if(insertData.getId()!=null && insertData.getMobileNumber()!=null) {
    				
    			}else if(insertData.getId()!=null && insertData.getMailID()!=null) {
    				
    			}else if(insertData.getId()!=null && insertData.getAddress()!=null) {
    				
    			}else (insertData.getId()!=null && insertData.getStatus()!=null) {
    				
    			}
    			
    		}
    	}catch() {
    		
    	}
    }
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2038)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2243)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3278)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3055)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:540)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:132)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:94)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:91)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:158)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)

!ENTRY org.eclipse.jdt.ui 4 2 2025-06-10 23:50:58.648
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2038)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2243)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3278)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3055)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:540)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:132)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:94)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:91)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:158)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)

!ENTRY org.eclipse.jdt.ui 4 0 2025-06-10 23:50:58.651
!MESSAGE Error in JDT Core during reconcile
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2038)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2243)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3278)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3055)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:540)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:132)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:94)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:91)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:158)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)

!ENTRY org.eclipse.jdt.core 4 4 2025-06-10 23:50:58.716
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package com.example.EMSbackend.Service;

import java.util.ArrayList;
import java.util.List;
import java.util.Optional;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import com.example.EMSbackend.DTO.EMSGetAllDTO;
import com.example.EMSbackend.DTO.EMSInsertMultipleRequestDTO;
import com.example.EMSbackend.DTO.EMSInsertMultipleResponseDTO;
import com.example.EMSbackend.DTO.EMSInsertSingleRequestDTO;
import com.example.EMSbackend.DTO.EMSInsertSingleResponseDTO;
import com.example.EMSbackend.DTO.EMSUpdateRequestDTO;
import com.example.EMSbackend.DTO.EMSUpdateResponseDTO;
import com.example.EMSbackend.Model.EMSModel;
import com.example.EMSbackend.Repository.EMSRepository;

import lombok.extern.slf4j.Slf4j;

@Slf4j
@Service
public class EMSService {

	@Autowired
	private EMSRepository emsRepository;
	
	
//GET_ALL_EMPLOYEE_DETAILS
    public EMSGetAllDTO getEmployeeDetailsAll() {
    	EMSGetAllDTO response = new EMSGetAllDTO();
    
    	
    	//try { 	
    	List<EMSModel> modelDetails = (List<EMSModel>) emsRepository.findAll();
    	response.setEmployeeDetailsAll(modelDetails);
    	
    	/*if(modelDetails!=null) {
    		response.setEmployeeDetailsAll(modelDetails);
    	}
    	else {
    		System.out.println("Employee not found");
    		//log.info("Service response not found");
    	}
    	
    	}catch (Exception e) {
            System.out.println("Error while fetching employee list: " + e.getMessage());
            e.printStackTrace();
        }*/
    	    
    	return response;
    }
    
//INSERT_ALL_EMPLOYEE_DETAILS(SINGLE_DATA/NOT_LIST)
    public EMSInsertSingleResponseDTO insertEmployeeDetails(EMSInsertSingleRequestDTO requestData) {
    	EMSInsertSingleResponseDTO response = new EMSInsertSingleResponseDTO();
    	String message = "FAILURE";
    	List<EMSModel> entityList = new ArrayList<>();
  
    	try {
    	if (requestData != null) {
    		EMSModel entity = new EMSModel();
    		entity.setId(requestData.getId());
			entity.setRid(requestData.getRid());
			entity.setName(requestData.getName());
			entity.setParentName(requestData.getParentName());
			entity.setStreamName(requestData.getStreamName());
			entity.setDOB(requestData.getDOB());
			entity.setPOY(requestData.getPOY());
			entity.setMobileNumber(requestData.getMobileNumber());
			entity.setMailID(requestData.getMailID());
			entity.setAddress(requestData.getAddress());
			entity.setStatus(requestData.getStatus());
			 
			c
   
			List<EMSModel> savedEntities = emsRepository.saveAll(entityList);
			if (savedEntities != null && !savedEntities.isEmpty()) {
	            message = "SUCCESS";
	            response.setMessage(message);
	            response.setCode("200 OK");
	        } else {
	            response.setMessage("Insert failed");
	            response.setCode("500 INTERNAL SERVER ERROR");
	        }
    	}else {
            response.setMessage("Input list is null or empty");
            response.setCode("400 BAD REQUEST");
        }
    	}catch (Exception e) {
    		e.printStackTrace();
    		response.setMessage("Exception occurred");
            response.setCode("500 INTERNAL SERVER ERROR");
    	}
  
    	return response;
    	
    }
    
    
   
//INSERT_ALL_EMPLOYEE_DETAILS(MULTIPLE/LIST)
    
    public EMSInsertMultipleResponseDTO insertEmployeeDetailsAll(EMSInsertMultipleRequestDTO insertData) {
    	EMSInsertMultipleResponseDTO response = new EMSInsertMultipleResponseDTO();
    	String message = "FAILURE";
    	
    	try {
    		List<EMSModel> dtoList = insertData.getEmployeeDetailsRequestAll();
 
    		if (dtoList != null && !dtoList.isEmpty()) {
    			
    			List<EMSModel> entityList = new ArrayList<>();
    			
    			for (EMSModel dto : dtoList){
    				
    			EMSModel entity = new EMSModel();
    			 entity.setId(dto.getId());
    			 entity.setRid(dto.getRid());
    			 entity.setName(dto.getName());
    			 entity.setParentName(dto.getParentName());
    			 entity.setStreamName(dto.getStreamName());
    			 entity.setDOB(dto.getDOB());
    			 entity.setPOY(dto.getPOY());
    			 entity.setMobileNumber(dto.getMobileNumber());
    			 entity.setMailID(dto.getMailID());
    			 entity.setAddress(dto.getAddress());
    			 entity.setStatus(dto.getStatus());
    			 
    			 entityList.add(entity);
    			}
    			
    			List<EMSModel> savedEntities = emsRepository.saveAll(entityList);
                

                if (savedEntities != null && !savedEntities.isEmpty()) {
                    message = "SUCCESS";
                    response.setMessage(message);
                    response.setCode("200 OK");
                } else {
                    response.setMessage("Insert failed");
                    response.setCode("500 INTERNAL SERVER ERROR");
                }
    			
    		}else {
    			response.setMessage("Input list is null or empty");
                response.setCode("400 BAD REQUEST");
    		}
    	}catch (Exception e) {
    		e.printStackTrace();
    		response.setMessage("Exception occurred");
            response.setCode("500 INTERNAL SERVER ERROR");
    	}
    	return response;
    }
    
//UPDATE
    public EMSUpdateResponseDTO updateEmployeeDetails(EMSUpdateRequestDTO insertData) {
    	EMSUpdateResponseDTO response =new EMSUpdateResponseDTO();
    	List<EMSModel> saveEntities =  new ArrayList<>();
    	try {
    		Optional<EMSModel> dbResponse = emsRepository.findById(insertData.getId());
    		if(dbResponse.isPresent()) {
    			EMSModel entity = new EMSModel();
    			
    			if(insertData.getId()!=null && insertData.getRid()!=null) {
    			
    				entity.setId(dbResponse.get().getId());
    				entity.setRid(insertData.getRid());
    				entity.setName(dbResponse.get().getName());
    				entity.setParentName(dbResponse.get().getParentName());
    				entity.setStreamName(dbResponse.get().getStreamName());
    				entity.setDOB(dbResponse.get().getDOB());
    				entity.setPOY(dbResponse.get().getPOY());
    				entity.setMobileNumber(dbResponse.get().getMobileNumber());
    				entity.setMailID(dbResponse.get().getMailID());
    				entity.setAddress(dbResponse.get().getAddress());
    				entity.setStatus(dbResponse.get().getStatus());
    				
    				saveEntities.add(entity);
    				
    				
    			}else if(insertData.getId()!=null && insertData.getName()!=null) {
    				entity.setId(dbResponse.get().getId());
    				entity.setRid(dbResponse.get().getRid());
    				entity.setName(insertData.getName());
    				entity.setParentName(dbResponse.get().getParentName());
    				entity.setStreamName(dbResponse.get().getStreamName());
    				entity.setDOB(dbResponse.get().getDOB());
    				entity.setPOY(dbResponse.get().getPOY());
    				entity.setMobileNumber(dbResponse.get().getMobileNumber());
    				entity.setMailID(dbResponse.get().getMailID());
    				entity.setAddress(dbResponse.get().getAddress());
    				entity.setStatus(dbResponse.get().getStatus());
    				
    				saveEntities.add(entity);
    			}else if(insertData.getId()!=null && insertData.getParentName()!=null) {
    				entity.setId(dbResponse.get().getId());
    				entity.setRid(dbResponse.get().getRid());
    				entity.setName(dbResponse.get().getName());
    				entity.setParentName(insertData.getParentName());
    				entity.setStreamName(dbResponse.get().getStreamName());
    				entity.setDOB(dbResponse.get().getDOB());
    				entity.setPOY(dbResponse.get().getPOY());
    				entity.setMobileNumber(dbResponse.get().getMobileNumber());
    				entity.setMailID(dbResponse.get().getMailID());
    				entity.setAddress(dbResponse.get().getAddress());
    				entity.setStatus(dbResponse.get().getStatus());
    				
    				saveEntities.add(entity);
    			}else if(insertData.getId()!=null && insertData.getStreamName()!=null) {
    				entity.setId(dbResponse.get().getId());
    				entity.setRid(dbResponse.get().getRid());
    				entity.setName(dbResponse.get().getName());
    				entity.setParentName(dbResponse.get().getParentName());
    				entity.setStreamName(insert);
    				entity.setDOB(dbResponse.get().getDOB());
    				entity.setPOY(dbResponse.get().getPOY());
    				entity.setMobileNumber(dbResponse.get().getMobileNumber());
    				entity.setMailID(dbResponse.get().getMailID());
    				entity.setAddress(dbResponse.get().getAddress());
    				entity.setStatus(dbResponse.get().getStatus());
    				
    				saveEntities.add(entity);
    			}else if(insertData.getId()!=null && insertData.getDOB()!=null) {
    				
    			}else if(insertData.getId()!=null && insertData.getPOY()!=null) {
    				
    			}else if(insertData.getId()!=null && insertData.getMobileNumber()!=null) {
    				
    			}else if(insertData.getId()!=null && insertData.getMailID()!=null) {
    				
    			}else if(insertData.getId()!=null && insertData.getAddress()!=null) {
    				
    			}else (insertData.getId()!=null && insertData.getStatus()!=null) {
    				
    			}
    			
    		}
    	}catch() {
    		
    	}
    }
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2038)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2243)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3278)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3055)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2025-06-10 23:50:58.721
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2038)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2243)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3278)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3055)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2025-06-10 23:50:58.723
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2038)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2243)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3278)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3055)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core 4 4 2025-06-10 23:50:59.810
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package com.example.EMSbackend.Service;

import java.util.ArrayList;
import java.util.List;
import java.util.Optional;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import com.example.EMSbackend.DTO.EMSGetAllDTO;
import com.example.EMSbackend.DTO.EMSInsertMultipleRequestDTO;
import com.example.EMSbackend.DTO.EMSInsertMultipleResponseDTO;
import com.example.EMSbackend.DTO.EMSInsertSingleRequestDTO;
import com.example.EMSbackend.DTO.EMSInsertSingleResponseDTO;
import com.example.EMSbackend.DTO.EMSUpdateRequestDTO;
import com.example.EMSbackend.DTO.EMSUpdateResponseDTO;
import com.example.EMSbackend.Model.EMSModel;
import com.example.EMSbackend.Repository.EMSRepository;

import lombok.extern.slf4j.Slf4j;

@Slf4j
@Service
public class EMSService {

	@Autowired
	private EMSRepository emsRepository;
	
	
//GET_ALL_EMPLOYEE_DETAILS
    public EMSGetAllDTO getEmployeeDetailsAll() {
    	EMSGetAllDTO response = new EMSGetAllDTO();
    
    	
    	//try { 	
    	List<EMSModel> modelDetails = (List<EMSModel>) emsRepository.findAll();
    	response.setEmployeeDetailsAll(modelDetails);
    	
    	/*if(modelDetails!=null) {
    		response.setEmployeeDetailsAll(modelDetails);
    	}
    	else {
    		System.out.println("Employee not found");
    		//log.info("Service response not found");
    	}
    	
    	}catch (Exception e) {
            System.out.println("Error while fetching employee list: " + e.getMessage());
            e.printStackTrace();
        }*/
    	    
    	return response;
    }
    
//INSERT_ALL_EMPLOYEE_DETAILS(SINGLE_DATA/NOT_LIST)
    public EMSInsertSingleResponseDTO insertEmployeeDetails(EMSInsertSingleRequestDTO requestData) {
    	EMSInsertSingleResponseDTO response = new EMSInsertSingleResponseDTO();
    	String message = "FAILURE";
    	List<EMSModel> entityList = new ArrayList<>();
  
    	try {
    	if (requestData != null) {
    		EMSModel entity = new EMSModel();
    		entity.setId(requestData.getId());
			entity.setRid(requestData.getRid());
			entity.setName(requestData.getName());
			entity.setParentName(requestData.getParentName());
			entity.setStreamName(requestData.getStreamName());
			entity.setDOB(requestData.getDOB());
			entity.setPOY(requestData.getPOY());
			entity.setMobileNumber(requestData.getMobileNumber());
			entity.setMailID(requestData.getMailID());
			entity.setAddress(requestData.getAddress());
			entity.setStatus(requestData.getStatus());
			 
			c
   
			List<EMSModel> savedEntities = emsRepository.saveAll(entityList);
			if (savedEntities != null && !savedEntities.isEmpty()) {
	            message = "SUCCESS";
	            response.setMessage(message);
	            response.setCode("200 OK");
	        } else {
	            response.setMessage("Insert failed");
	            response.setCode("500 INTERNAL SERVER ERROR");
	        }
    	}else {
            response.setMessage("Input list is null or empty");
            response.setCode("400 BAD REQUEST");
        }
    	}catch (Exception e) {
    		e.printStackTrace();
    		response.setMessage("Exception occurred");
            response.setCode("500 INTERNAL SERVER ERROR");
    	}
  
    	return response;
    	
    }
    
    
   
//INSERT_ALL_EMPLOYEE_DETAILS(MULTIPLE/LIST)
    
    public EMSInsertMultipleResponseDTO insertEmployeeDetailsAll(EMSInsertMultipleRequestDTO insertData) {
    	EMSInsertMultipleResponseDTO response = new EMSInsertMultipleResponseDTO();
    	String message = "FAILURE";
    	
    	try {
    		List<EMSModel> dtoList = insertData.getEmployeeDetailsRequestAll();
 
    		if (dtoList != null && !dtoList.isEmpty()) {
    			
    			List<EMSModel> entityList = new ArrayList<>();
    			
    			for (EMSModel dto : dtoList){
    				
    			EMSModel entity = new EMSModel();
    			 entity.setId(dto.getId());
    			 entity.setRid(dto.getRid());
    			 entity.setName(dto.getName());
    			 entity.setParentName(dto.getParentName());
    			 entity.setStreamName(dto.getStreamName());
    			 entity.setDOB(dto.getDOB());
    			 entity.setPOY(dto.getPOY());
    			 entity.setMobileNumber(dto.getMobileNumber());
    			 entity.setMailID(dto.getMailID());
    			 entity.setAddress(dto.getAddress());
    			 entity.setStatus(dto.getStatus());
    			 
    			 entityList.add(entity);
    			}
    			
    			List<EMSModel> savedEntities = emsRepository.saveAll(entityList);
                

                if (savedEntities != null && !savedEntities.isEmpty()) {
                    message = "SUCCESS";
                    response.setMessage(message);
                    response.setCode("200 OK");
                } else {
                    response.setMessage("Insert failed");
                    response.setCode("500 INTERNAL SERVER ERROR");
                }
    			
    		}else {
    			response.setMessage("Input list is null or empty");
                response.setCode("400 BAD REQUEST");
    		}
    	}catch (Exception e) {
    		e.printStackTrace();
    		response.setMessage("Exception occurred");
            response.setCode("500 INTERNAL SERVER ERROR");
    	}
    	return response;
    }
    
//UPDATE
    public EMSUpdateResponseDTO updateEmployeeDetails(EMSUpdateRequestDTO insertData) {
    	EMSUpdateResponseDTO response =new EMSUpdateResponseDTO();
    	List<EMSModel> saveEntities =  new ArrayList<>();
    	try {
    		Optional<EMSModel> dbResponse = emsRepository.findById(insertData.getId());
    		if(dbResponse.isPresent()) {
    			EMSModel entity = new EMSModel();
    			
    			if(insertData.getId()!=null && insertData.getRid()!=null) {
    			
    				entity.setId(dbResponse.get().getId());
    				entity.setRid(insertData.getRid());
    				entity.setName(dbResponse.get().getName());
    				entity.setParentName(dbResponse.get().getParentName());
    				entity.setStreamName(dbResponse.get().getStreamName());
    				entity.setDOB(dbResponse.get().getDOB());
    				entity.setPOY(dbResponse.get().getPOY());
    				entity.setMobileNumber(dbResponse.get().getMobileNumber());
    				entity.setMailID(dbResponse.get().getMailID());
    				entity.setAddress(dbResponse.get().getAddress());
    				entity.setStatus(dbResponse.get().getStatus());
    				
    				saveEntities.add(entity);
    				
    				
    			}else if(insertData.getId()!=null && insertData.getName()!=null) {
    				entity.setId(dbResponse.get().getId());
    				entity.setRid(dbResponse.get().getRid());
    				entity.setName(insertData.getName());
    				entity.setParentName(dbResponse.get().getParentName());
    				entity.setStreamName(dbResponse.get().getStreamName());
    				entity.setDOB(dbResponse.get().getDOB());
    				entity.setPOY(dbResponse.get().getPOY());
    				entity.setMobileNumber(dbResponse.get().getMobileNumber());
    				entity.setMailID(dbResponse.get().getMailID());
    				entity.setAddress(dbResponse.get().getAddress());
    				entity.setStatus(dbResponse.get().getStatus());
    				
    				saveEntities.add(entity);
    			}else if(insertData.getId()!=null && insertData.getParentName()!=null) {
    				entity.setId(dbResponse.get().getId());
    				entity.setRid(dbResponse.get().getRid());
    				entity.setName(dbResponse.get().getName());
    				entity.setParentName(insertData.getParentName());
    				entity.setStreamName(dbResponse.get().getStreamName());
    				entity.setDOB(dbResponse.get().getDOB());
    				entity.setPOY(dbResponse.get().getPOY());
    				entity.setMobileNumber(dbResponse.get().getMobileNumber());
    				entity.setMailID(dbResponse.get().getMailID());
    				entity.setAddress(dbResponse.get().getAddress());
    				entity.setStatus(dbResponse.get().getStatus());
    				
    				saveEntities.add(entity);
    			}else if(insertData.getId()!=null && insertData.getStreamName()!=null) {
    				entity.setId(dbResponse.get().getId());
    				entity.setRid(dbResponse.get().getRid());
    				entity.setName(dbResponse.get().getName());
    				entity.setParentName(dbResponse.get().getParentName());
    				entity.setStreamName(insert.);
    				entity.setDOB(dbResponse.get().getDOB());
    				entity.setPOY(dbResponse.get().getPOY());
    				entity.setMobileNumber(dbResponse.get().getMobileNumber());
    				entity.setMailID(dbResponse.get().getMailID());
    				entity.setAddress(dbResponse.get().getAddress());
    				entity.setStatus(dbResponse.get().getStatus());
    				
    				saveEntities.add(entity);
    			}else if(insertData.getId()!=null && insertData.getDOB()!=null) {
    				
    			}else if(insertData.getId()!=null && insertData.getPOY()!=null) {
    				
    			}else if(insertData.getId()!=null && insertData.getMobileNumber()!=null) {
    				
    			}else if(insertData.getId()!=null && insertData.getMailID()!=null) {
    				
    			}else if(insertData.getId()!=null && insertData.getAddress()!=null) {
    				
    			}else (insertData.getId()!=null && insertData.getStatus()!=null) {
    				
    			}
    			
    		}
    	}catch() {
    		
    	}
    }
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2038)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2243)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3278)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3055)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:540)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:132)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:94)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:91)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:158)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)

!ENTRY org.eclipse.jdt.ui 4 2 2025-06-10 23:50:59.815
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2038)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2243)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3278)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3055)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:540)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:132)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:94)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:91)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:158)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)

!ENTRY org.eclipse.jdt.ui 4 0 2025-06-10 23:50:59.819
!MESSAGE Error in JDT Core during reconcile
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2038)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2243)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3278)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3055)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:540)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:132)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:94)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:91)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:158)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)

!ENTRY org.eclipse.jdt.core 4 4 2025-06-10 23:50:59.903
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package com.example.EMSbackend.Service;

import java.util.ArrayList;
import java.util.List;
import java.util.Optional;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import com.example.EMSbackend.DTO.EMSGetAllDTO;
import com.example.EMSbackend.DTO.EMSInsertMultipleRequestDTO;
import com.example.EMSbackend.DTO.EMSInsertMultipleResponseDTO;
import com.example.EMSbackend.DTO.EMSInsertSingleRequestDTO;
import com.example.EMSbackend.DTO.EMSInsertSingleResponseDTO;
import com.example.EMSbackend.DTO.EMSUpdateRequestDTO;
import com.example.EMSbackend.DTO.EMSUpdateResponseDTO;
import com.example.EMSbackend.Model.EMSModel;
import com.example.EMSbackend.Repository.EMSRepository;

import lombok.extern.slf4j.Slf4j;

@Slf4j
@Service
public class EMSService {

	@Autowired
	private EMSRepository emsRepository;
	
	
//GET_ALL_EMPLOYEE_DETAILS
    public EMSGetAllDTO getEmployeeDetailsAll() {
    	EMSGetAllDTO response = new EMSGetAllDTO();
    
    	
    	//try { 	
    	List<EMSModel> modelDetails = (List<EMSModel>) emsRepository.findAll();
    	response.setEmployeeDetailsAll(modelDetails);
    	
    	/*if(modelDetails!=null) {
    		response.setEmployeeDetailsAll(modelDetails);
    	}
    	else {
    		System.out.println("Employee not found");
    		//log.info("Service response not found");
    	}
    	
    	}catch (Exception e) {
            System.out.println("Error while fetching employee list: " + e.getMessage());
            e.printStackTrace();
        }*/
    	    
    	return response;
    }
    
//INSERT_ALL_EMPLOYEE_DETAILS(SINGLE_DATA/NOT_LIST)
    public EMSInsertSingleResponseDTO insertEmployeeDetails(EMSInsertSingleRequestDTO requestData) {
    	EMSInsertSingleResponseDTO response = new EMSInsertSingleResponseDTO();
    	String message = "FAILURE";
    	List<EMSModel> entityList = new ArrayList<>();
  
    	try {
    	if (requestData != null) {
    		EMSModel entity = new EMSModel();
    		entity.setId(requestData.getId());
			entity.setRid(requestData.getRid());
			entity.setName(requestData.getName());
			entity.setParentName(requestData.getParentName());
			entity.setStreamName(requestData.getStreamName());
			entity.setDOB(requestData.getDOB());
			entity.setPOY(requestData.getPOY());
			entity.setMobileNumber(requestData.getMobileNumber());
			entity.setMailID(requestData.getMailID());
			entity.setAddress(requestData.getAddress());
			entity.setStatus(requestData.getStatus());
			 
			c
   
			List<EMSModel> savedEntities = emsRepository.saveAll(entityList);
			if (savedEntities != null && !savedEntities.isEmpty()) {
	            message = "SUCCESS";
	            response.setMessage(message);
	            response.setCode("200 OK");
	        } else {
	            response.setMessage("Insert failed");
	            response.setCode("500 INTERNAL SERVER ERROR");
	        }
    	}else {
            response.setMessage("Input list is null or empty");
            response.setCode("400 BAD REQUEST");
        }
    	}catch (Exception e) {
    		e.printStackTrace();
    		response.setMessage("Exception occurred");
            response.setCode("500 INTERNAL SERVER ERROR");
    	}
  
    	return response;
    	
    }
    
    
   
//INSERT_ALL_EMPLOYEE_DETAILS(MULTIPLE/LIST)
    
    public EMSInsertMultipleResponseDTO insertEmployeeDetailsAll(EMSInsertMultipleRequestDTO insertData) {
    	EMSInsertMultipleResponseDTO response = new EMSInsertMultipleResponseDTO();
    	String message = "FAILURE";
    	
    	try {
    		List<EMSModel> dtoList = insertData.getEmployeeDetailsRequestAll();
 
    		if (dtoList != null && !dtoList.isEmpty()) {
    			
    			List<EMSModel> entityList = new ArrayList<>();
    			
    			for (EMSModel dto : dtoList){
    				
    			EMSModel entity = new EMSModel();
    			 entity.setId(dto.getId());
    			 entity.setRid(dto.getRid());
    			 entity.setName(dto.getName());
    			 entity.setParentName(dto.getParentName());
    			 entity.setStreamName(dto.getStreamName());
    			 entity.setDOB(dto.getDOB());
    			 entity.setPOY(dto.getPOY());
    			 entity.setMobileNumber(dto.getMobileNumber());
    			 entity.setMailID(dto.getMailID());
    			 entity.setAddress(dto.getAddress());
    			 entity.setStatus(dto.getStatus());
    			 
    			 entityList.add(entity);
    			}
    			
    			List<EMSModel> savedEntities = emsRepository.saveAll(entityList);
                

                if (savedEntities != null && !savedEntities.isEmpty()) {
                    message = "SUCCESS";
                    response.setMessage(message);
                    response.setCode("200 OK");
                } else {
                    response.setMessage("Insert failed");
                    response.setCode("500 INTERNAL SERVER ERROR");
                }
    			
    		}else {
    			response.setMessage("Input list is null or empty");
                response.setCode("400 BAD REQUEST");
    		}
    	}catch (Exception e) {
    		e.printStackTrace();
    		response.setMessage("Exception occurred");
            response.setCode("500 INTERNAL SERVER ERROR");
    	}
    	return response;
    }
    
//UPDATE
    public EMSUpdateResponseDTO updateEmployeeDetails(EMSUpdateRequestDTO insertData) {
    	EMSUpdateResponseDTO response =new EMSUpdateResponseDTO();
    	List<EMSModel> saveEntities =  new ArrayList<>();
    	try {
    		Optional<EMSModel> dbResponse = emsRepository.findById(insertData.getId());
    		if(dbResponse.isPresent()) {
    			EMSModel entity = new EMSModel();
    			
    			if(insertData.getId()!=null && insertData.getRid()!=null) {
    			
    				entity.setId(dbResponse.get().getId());
    				entity.setRid(insertData.getRid());
    				entity.setName(dbResponse.get().getName());
    				entity.setParentName(dbResponse.get().getParentName());
    				entity.setStreamName(dbResponse.get().getStreamName());
    				entity.setDOB(dbResponse.get().getDOB());
    				entity.setPOY(dbResponse.get().getPOY());
    				entity.setMobileNumber(dbResponse.get().getMobileNumber());
    				entity.setMailID(dbResponse.get().getMailID());
    				entity.setAddress(dbResponse.get().getAddress());
    				entity.setStatus(dbResponse.get().getStatus());
    				
    				saveEntities.add(entity);
    				
    				
    			}else if(insertData.getId()!=null && insertData.getName()!=null) {
    				entity.setId(dbResponse.get().getId());
    				entity.setRid(dbResponse.get().getRid());
    				entity.setName(insertData.getName());
    				entity.setParentName(dbResponse.get().getParentName());
    				entity.setStreamName(dbResponse.get().getStreamName());
    				entity.setDOB(dbResponse.get().getDOB());
    				entity.setPOY(dbResponse.get().getPOY());
    				entity.setMobileNumber(dbResponse.get().getMobileNumber());
    				entity.setMailID(dbResponse.get().getMailID());
    				entity.setAddress(dbResponse.get().getAddress());
    				entity.setStatus(dbResponse.get().getStatus());
    				
    				saveEntities.add(entity);
    			}else if(insertData.getId()!=null && insertData.getParentName()!=null) {
    				entity.setId(dbResponse.get().getId());
    				entity.setRid(dbResponse.get().getRid());
    				entity.setName(dbResponse.get().getName());
    				entity.setParentName(insertData.getParentName());
    				entity.setStreamName(dbResponse.get().getStreamName());
    				entity.setDOB(dbResponse.get().getDOB());
    				entity.setPOY(dbResponse.get().getPOY());
    				entity.setMobileNumber(dbResponse.get().getMobileNumber());
    				entity.setMailID(dbResponse.get().getMailID());
    				entity.setAddress(dbResponse.get().getAddress());
    				entity.setStatus(dbResponse.get().getStatus());
    				
    				saveEntities.add(entity);
    			}else if(insertData.getId()!=null && insertData.getStreamName()!=null) {
    				entity.setId(dbResponse.get().getId());
    				entity.setRid(dbResponse.get().getRid());
    				entity.setName(dbResponse.get().getName());
    				entity.setParentName(dbResponse.get().getParentName());
    				entity.setStreamName(insert.);
    				entity.setDOB(dbResponse.get().getDOB());
    				entity.setPOY(dbResponse.get().getPOY());
    				entity.setMobileNumber(dbResponse.get().getMobileNumber());
    				entity.setMailID(dbResponse.get().getMailID());
    				entity.setAddress(dbResponse.get().getAddress());
    				entity.setStatus(dbResponse.get().getStatus());
    				
    				saveEntities.add(entity);
    			}else if(insertData.getId()!=null && insertData.getDOB()!=null) {
    				
    			}else if(insertData.getId()!=null && insertData.getPOY()!=null) {
    				
    			}else if(insertData.getId()!=null && insertData.getMobileNumber()!=null) {
    				
    			}else if(insertData.getId()!=null && insertData.getMailID()!=null) {
    				
    			}else if(insertData.getId()!=null && insertData.getAddress()!=null) {
    				
    			}else (insertData.getId()!=null && insertData.getStatus()!=null) {
    				
    			}
    			
    		}
    	}catch() {
    		
    	}
    }
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2038)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2243)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3278)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3055)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)
