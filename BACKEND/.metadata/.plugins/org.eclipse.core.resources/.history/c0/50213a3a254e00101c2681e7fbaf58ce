package com.example.EMSbackend.Repository;

import java.time.LocalDate;
import java.util.List;

import org.springframework.data.jpa.repository.JpaRepository;
import org.springframework.data.jpa.repository.Query;
import org.springframework.data.repository.query.Param;
import org.springframework.stereotype.Repository;

import com.example.EMSbackend.Model.EMSModel;

@Repository
public interface EMSRepository extends JpaRepository<EMSModel, Long> {
	
	
//IF I WANT TO QUERY ALL THE DATA FIELDS IN ONE GO, 
//THEN I HAVE TO INPUT ALL THE FILTERS DATA FIELD TOGETHER AND IF NOT HAVE TO PROVIDE NULL CHECKER 
//Note - "AND" means check both || "OR" means anyone
	
	/*@Query("SELECT s FROM Student s WHERE "
	         + "(:name IS NULL OR s.name = :name) AND "
	         + "(:erollmentNumber IS NULL OR s.erollmentNumber = :erollmentNumber) AND "  
	         + "(:poy IS NULL OR s.POY = :poy)")
	    List<Student> filterStudents(
	        @Param("name") String name,
	        @Param("erollmentNumber") String erollmentNumber,
	        @Param("poy") Integer poy
	    );*/
	

//ALL FILTERS SECTION 
//IN PAYLOAD/REQUEST DATA A GROUP OF DATA FIELDS

	@Query("SELECT * FROM EMPLOYEE_DETAILS s WHERE "
	       +"(s.rid = :rid)",nativeQuery = true)
	List<EMSModel> filterEmployeeDetailsGroupDataByRegistrationID(@Param("rid") Integer rid );
	
	@Query("SELECT * FROM EMPLOYEE_DETAILS s WHERE "
		       +"(s.name = :name) ")
		List<EMSModel> filterEmployeeDetailsGroupDataByName(@Param("name") String name );
	
	@Query("SELECT * FROM EMPLOYEE_DETAILS s WHERE "
		       +"(s.POY = :POY) ")
		List<EMSModel> filterEmployeeDetailsGroupDataByPassOutYear(@Param("POY") LocalDate POY );
	
	@Query("SELECT * FROM EMPLOYEE_DETAILS s WHERE "
		       +"(s.streamName = :streamName) ")
		List<EMSModel> filterEmployeeDetailsGroupDataByStreamName(@Param("streamName") String streamName );
	
	@Query("SELECT * FROM EMPLOYEE_DETAILS s WHERE "
		       +"(s.status = :status) ")
		List<EMSModel> filterEmployeeDetailsGroupDataByStatus(@Param("status") String status );

}
