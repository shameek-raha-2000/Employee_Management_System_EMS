!SESSION 2025-06-10 21:09:24.746 -----------------------------------------------
eclipse.buildId=4.15.3.202208110744
java.version=17.0.4
java.vendor=Eclipse Adoptium
BootLoader constants: OS=win32, ARCH=x86_64, WS=win32, NL=en_IN
Framework arguments:  -product org.springframework.boot.ide.branding.sts4
Command-line arguments:  -os win32 -ws win32 -arch x86_64 -product org.springframework.boot.ide.branding.sts4

This is a continuation of log file C:\Users\Shameek\Desktop\PROJECT\EMPLOYEE_MANAGEMENT_SYSTEM\BACKEND\.metadata\.bak_0.log
Created Time: 2025-06-10 23:49:26.403

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2025-06-10 23:49:26.404
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2038)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2243)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3278)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3055)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getHoveredASTNode(JavadocHover.java:1003)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getInfoText(JavadocHover.java:799)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getHoverInfo(JavadocHover.java:743)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.internalGetHoverInfo(JavadocHover.java:666)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getHoverInfo2(JavadocHover.java:658)
	at org.eclipse.lsp4e.jdt.LSJavaHoverProvider.lambda$0(LSJavaHoverProvider.java:68)
	at java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1804)
	at java.base/java.util.concurrent.CompletableFuture$AsyncRun.exec(CompletableFuture.java:1796)
	at java.base/java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:373)
	at java.base/java.util.concurrent.ForkJoinPool$WorkQueue.topLevelExec(ForkJoinPool.java:1182)
	at java.base/java.util.concurrent.ForkJoinPool.scan(ForkJoinPool.java:1655)
	at java.base/java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1622)
	at java.base/java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:165)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2025-06-10 23:49:26.407
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2038)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2243)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3278)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3055)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getHoveredASTNode(JavadocHover.java:1003)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getInfoText(JavadocHover.java:799)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getHoverInfo(JavadocHover.java:743)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.internalGetHoverInfo(JavadocHover.java:666)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getHoverInfo2(JavadocHover.java:658)
	at org.eclipse.lsp4e.jdt.LSJavaHoverProvider.lambda$0(LSJavaHoverProvider.java:68)
	at java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1804)
	at java.base/java.util.concurrent.CompletableFuture$AsyncRun.exec(CompletableFuture.java:1796)
	at java.base/java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:373)
	at java.base/java.util.concurrent.ForkJoinPool$WorkQueue.topLevelExec(ForkJoinPool.java:1182)
	at java.base/java.util.concurrent.ForkJoinPool.scan(ForkJoinPool.java:1655)
	at java.base/java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1622)
	at java.base/java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:165)

!ENTRY org.eclipse.jdt.core 4 4 2025-06-10 23:49:26.426
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package com.example.EMSbackend.Service;

import java.util.ArrayList;
import java.util.List;
import java.util.Optional;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import com.example.EMSbackend.DTO.EMSGetAllDTO;
import com.example.EMSbackend.DTO.EMSInsertMultipleRequestDTO;
import com.example.EMSbackend.DTO.EMSInsertMultipleResponseDTO;
import com.example.EMSbackend.DTO.EMSInsertSingleRequestDTO;
import com.example.EMSbackend.DTO.EMSInsertSingleResponseDTO;
import com.example.EMSbackend.DTO.EMSUpdateRequestDTO;
import com.example.EMSbackend.DTO.EMSUpdateResponseDTO;
import com.example.EMSbackend.Model.EMSModel;
import com.example.EMSbackend.Repository.EMSRepository;

import lombok.extern.slf4j.Slf4j;

@Slf4j
@Service
public class EMSService {

	@Autowired
	private EMSRepository emsRepository;
	
	
//GET_ALL_EMPLOYEE_DETAILS
    public EMSGetAllDTO getEmployeeDetailsAll() {
    	EMSGetAllDTO response = new EMSGetAllDTO();
    
    	
    	//try { 	
    	List<EMSModel> modelDetails = (List<EMSModel>) emsRepository.findAll();
    	response.setEmployeeDetailsAll(modelDetails);
    	
    	/*if(modelDetails!=null) {
    		response.setEmployeeDetailsAll(modelDetails);
    	}
    	else {
    		System.out.println("Employee not found");
    		//log.info("Service response not found");
    	}
    	
    	}catch (Exception e) {
            System.out.println("Error while fetching employee list: " + e.getMessage());
            e.printStackTrace();
        }*/
    	    
    	return response;
    }
    
//INSERT_ALL_EMPLOYEE_DETAILS(SINGLE_DATA/NOT_LIST)
    public EMSInsertSingleResponseDTO insertEmployeeDetails(EMSInsertSingleRequestDTO requestData) {
    	EMSInsertSingleResponseDTO response = new EMSInsertSingleResponseDTO();
    	String message = "FAILURE";
    	List<EMSModel> entityList = new ArrayList<>();
  
    	try {
    	if (requestData != null) {
    		EMSModel entity = new EMSModel();
    		entity.setId(requestData.getId());
			entity.setRid(requestData.getRid());
			entity.setName(requestData.getName());
			entity.setParentName(requestData.getParentName());
			entity.setStreamName(requestData.getStreamName());
			entity.setDOB(requestData.getDOB());
			entity.setPOY(requestData.getPOY());
			entity.setMobileNumber(requestData.getMobileNumber());
			entity.setMailID(requestData.getMailID());
			entity.setAddress(requestData.getAddress());
			entity.setStatus(requestData.getStatus());
			 
			c
   
			List<EMSModel> savedEntities = emsRepository.saveAll(entityList);
			if (savedEntities != null && !savedEntities.isEmpty()) {
	            message = "SUCCESS";
	            response.setMessage(message);
	            response.setCode("200 OK");
	        } else {
	            response.setMessage("Insert failed");
	            response.setCode("500 INTERNAL SERVER ERROR");
	        }
    	}else {
            response.setMessage("Input list is null or empty");
            response.setCode("400 BAD REQUEST");
        }
    	}catch (Exception e) {
    		e.printStackTrace();
    		response.setMessage("Exception occurred");
            response.setCode("500 INTERNAL SERVER ERROR");
    	}
  
    	return response;
    	
    }
    
    
   
//INSERT_ALL_EMPLOYEE_DETAILS(MULTIPLE/LIST)
    
    public EMSInsertMultipleResponseDTO insertEmployeeDetailsAll(EMSInsertMultipleRequestDTO insertData) {
    	EMSInsertMultipleResponseDTO response = new EMSInsertMultipleResponseDTO();
    	String message = "FAILURE";
    	
    	try {
    		List<EMSModel> dtoList = insertData.getEmployeeDetailsRequestAll();
 
    		if (dtoList != null && !dtoList.isEmpty()) {
    			
    			List<EMSModel> entityList = new ArrayList<>();
    			
    			for (EMSModel dto : dtoList){
    				
    			EMSModel entity = new EMSModel();
    			 entity.setId(dto.getId());
    			 entity.setRid(dto.getRid());
    			 entity.setName(dto.getName());
    			 entity.setParentName(dto.getParentName());
    			 entity.setStreamName(dto.getStreamName());
    			 entity.setDOB(dto.getDOB());
    			 entity.setPOY(dto.getPOY());
    			 entity.setMobileNumber(dto.getMobileNumber());
    			 entity.setMailID(dto.getMailID());
    			 entity.setAddress(dto.getAddress());
    			 entity.setStatus(dto.getStatus());
    			 
    			 entityList.add(entity);
    			}
    			
    			List<EMSModel> savedEntities = emsRepository.saveAll(entityList);
                

                if (savedEntities != null && !savedEntities.isEmpty()) {
                    message = "SUCCESS";
                    response.setMessage(message);
                    response.setCode("200 OK");
                } else {
                    response.setMessage("Insert failed");
                    response.setCode("500 INTERNAL SERVER ERROR");
                }
    			
    		}else {
    			response.setMessage("Input list is null or empty");
                response.setCode("400 BAD REQUEST");
    		}
    	}catch (Exception e) {
    		e.printStackTrace();
    		response.setMessage("Exception occurred");
            response.setCode("500 INTERNAL SERVER ERROR");
    	}
    	return response;
    }
    
//UPDATE
    public EMSUpdateResponseDTO updateEmployeeDetails(EMSUpdateRequestDTO insertData) {
    	EMSUpdateResponseDTO response =new EMSUpdateResponseDTO();
    	List<EMSModel> saveEntities =  new ArrayList<>();
    	try {
    		Optional<EMSModel> dbResponse = emsRepository.findById(insertData.getId());
    		if(dbResponse.isPresent()) {
    			EMSModel entity = new EMSModel();
    			
    			if(insertData.getId()!=null && insertData.getRid()!=null) {
    			
    				entity.setId(dbResponse.get().getId());
    				entity.setRid(insertData.getRid());
    				entity.setName(dbResponse.get().getName());
    				entity.setParentName(dbResponse.get().getParentName());
    				entity.setStreamName(dbResponse.get().getStreamName());
    				entity.setDOB(dbResponse.get().getDOB());
    				entity.setPOY(dbResponse.get().getPOY());
    				entity.setMobileNumber(dbResponse.get().getMobileNumber());
    				entity.setMailID(dbResponse.get().getMailID());
    				entity.setAddress(dbResponse.get().getAddress());
    				entity.setStatus(dbResponse.get().getStatus());
    				
    				saveEntities.add(entity);
    				
    				
    			}else if(insertData.getId()!=null && insertData.getName()!=null) {
    				entity.setId(dbResponse.get().getId());
    				entity.setRid(dbResponse.get().getRid());
    				entity.setName(insertData.getName());
    				entity.setParentName(dbResponse.get().getParentName());
    				entity.setStreamName(dbResponse.get().getStreamName());
    				entity.setDOB(dbResponse.get().getDOB());
    				entity.setPOY(dbResponse.get().getPOY());
    				entity.setMobileNumber(dbResponse.get().getMobileNumber());
    				entity.setMailID(dbResponse.get().getMailID());
    				entity.setAddress(dbResponse.get().getAddress());
    				entity.setStatus(dbResponse.get().getStatus());
    				
    				saveEntities.add(entity);
    			}else if(insertData.getId()!=null && insertData.getParentName()!=null) {
    				entity.setId(dbResponse.get().getId());
    				entity.setRid(dbResponse.get().getRid());
    				entity.setName(dbResponse.get().getName());
    				entity.setParentName();
    				entity.setStreamName(dbResponse.get().getStreamName());
    				entity.setDOB(dbResponse.get().getDOB());
    				entity.setPOY(dbResponse.get().getPOY());
    				entity.setMobileNumber(dbResponse.get().getMobileNumber());
    				entity.setMailID(dbResponse.get().getMailID());
    				entity.setAddress(dbResponse.get().getAddress());
    				entity.setStatus(dbResponse.get().getStatus());
    				
    				saveEntities.add(entity);
    			}else if(insertData.getId()!=null && insertData.getStreamName()!=null) {
    				
    			}else if(insertData.getId()!=null && insertData.getDOB()!=null) {
    				
    			}else if(insertData.getId()!=null && insertData.getPOY()!=null) {
    				
    			}else if(insertData.getId()!=null && insertData.getMobileNumber()!=null) {
    				
    			}else if(insertData.getId()!=null && insertData.getMailID()!=null) {
    				
    			}else if(insertData.getId()!=null && insertData.getAddress()!=null) {
    				
    			}else (insertData.getId()!=null && insertData.getStatus()!=null) {
    				
    			}
    			
    		}
    	}catch() {
    		
    	}
    }
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2038)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2243)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3278)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3055)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getHoveredASTNode(JavadocHover.java:1003)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getHoveredNodeBinding(JavadocHover.java:882)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getAnnotations(JavadocHover.java:1173)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.addAnnotations(JavadocHover.java:1137)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getHoverInfo(JavadocHover.java:745)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.internalGetHoverInfo(JavadocHover.java:666)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getHoverInfo2(JavadocHover.java:658)
	at org.eclipse.lsp4e.jdt.LSJavaHoverProvider.lambda$0(LSJavaHoverProvider.java:68)
	at java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1804)
	at java.base/java.util.concurrent.CompletableFuture$AsyncRun.exec(CompletableFuture.java:1796)
	at java.base/java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:373)
	at java.base/java.util.concurrent.ForkJoinPool$WorkQueue.topLevelExec(ForkJoinPool.java:1182)
	at java.base/java.util.concurrent.ForkJoinPool.scan(ForkJoinPool.java:1655)
	at java.base/java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1622)
	at java.base/java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:165)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2025-06-10 23:49:26.429
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2038)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2243)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3278)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3055)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getHoveredASTNode(JavadocHover.java:1003)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getHoveredNodeBinding(JavadocHover.java:882)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getAnnotations(JavadocHover.java:1173)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.addAnnotations(JavadocHover.java:1137)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getHoverInfo(JavadocHover.java:745)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.internalGetHoverInfo(JavadocHover.java:666)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getHoverInfo2(JavadocHover.java:658)
	at org.eclipse.lsp4e.jdt.LSJavaHoverProvider.lambda$0(LSJavaHoverProvider.java:68)
	at java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1804)
	at java.base/java.util.concurrent.CompletableFuture$AsyncRun.exec(CompletableFuture.java:1796)
	at java.base/java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:373)
	at java.base/java.util.concurrent.ForkJoinPool$WorkQueue.topLevelExec(ForkJoinPool.java:1182)
	at java.base/java.util.concurrent.ForkJoinPool.scan(ForkJoinPool.java:1655)
	at java.base/java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1622)
	at java.base/java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:165)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2025-06-10 23:49:26.431
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2038)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2243)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3278)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3055)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getHoveredASTNode(JavadocHover.java:1003)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getHoveredNodeBinding(JavadocHover.java:882)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getAnnotations(JavadocHover.java:1173)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.addAnnotations(JavadocHover.java:1137)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getHoverInfo(JavadocHover.java:745)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.internalGetHoverInfo(JavadocHover.java:666)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getHoverInfo2(JavadocHover.java:658)
	at org.eclipse.lsp4e.jdt.LSJavaHoverProvider.lambda$0(LSJavaHoverProvider.java:68)
	at java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1804)
	at java.base/java.util.concurrent.CompletableFuture$AsyncRun.exec(CompletableFuture.java:1796)
	at java.base/java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:373)
	at java.base/java.util.concurrent.ForkJoinPool$WorkQueue.topLevelExec(ForkJoinPool.java:1182)
	at java.base/java.util.concurrent.ForkJoinPool.scan(ForkJoinPool.java:1655)
	at java.base/java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1622)
	at java.base/java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:165)

!ENTRY org.eclipse.jdt.core 4 4 2025-06-10 23:49:26.459
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package com.example.EMSbackend.Service;

import java.util.ArrayList;
import java.util.List;
import java.util.Optional;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import com.example.EMSbackend.DTO.EMSGetAllDTO;
import com.example.EMSbackend.DTO.EMSInsertMultipleRequestDTO;
import com.example.EMSbackend.DTO.EMSInsertMultipleResponseDTO;
import com.example.EMSbackend.DTO.EMSInsertSingleRequestDTO;
import com.example.EMSbackend.DTO.EMSInsertSingleResponseDTO;
import com.example.EMSbackend.DTO.EMSUpdateRequestDTO;
import com.example.EMSbackend.DTO.EMSUpdateResponseDTO;
import com.example.EMSbackend.Model.EMSModel;
import com.example.EMSbackend.Repository.EMSRepository;

import lombok.extern.slf4j.Slf4j;

@Slf4j
@Service
public class EMSService {

	@Autowired
	private EMSRepository emsRepository;
	
	
//GET_ALL_EMPLOYEE_DETAILS
    public EMSGetAllDTO getEmployeeDetailsAll() {
    	EMSGetAllDTO response = new EMSGetAllDTO();
    
    	
    	//try { 	
    	List<EMSModel> modelDetails = (List<EMSModel>) emsRepository.findAll();
    	response.setEmployeeDetailsAll(modelDetails);
    	
    	/*if(modelDetails!=null) {
    		response.setEmployeeDetailsAll(modelDetails);
    	}
    	else {
    		System.out.println("Employee not found");
    		//log.info("Service response not found");
    	}
    	
    	}catch (Exception e) {
            System.out.println("Error while fetching employee list: " + e.getMessage());
            e.printStackTrace();
        }*/
    	    
    	return response;
    }
    
//INSERT_ALL_EMPLOYEE_DETAILS(SINGLE_DATA/NOT_LIST)
    public EMSInsertSingleResponseDTO insertEmployeeDetails(EMSInsertSingleRequestDTO requestData) {
    	EMSInsertSingleResponseDTO response = new EMSInsertSingleResponseDTO();
    	String message = "FAILURE";
    	List<EMSModel> entityList = new ArrayList<>();
  
    	try {
    	if (requestData != null) {
    		EMSModel entity = new EMSModel();
    		entity.setId(requestData.getId());
			entity.setRid(requestData.getRid());
			entity.setName(requestData.getName());
			entity.setParentName(requestData.getParentName());
			entity.setStreamName(requestData.getStreamName());
			entity.setDOB(requestData.getDOB());
			entity.setPOY(requestData.getPOY());
			entity.setMobileNumber(requestData.getMobileNumber());
			entity.setMailID(requestData.getMailID());
			entity.setAddress(requestData.getAddress());
			entity.setStatus(requestData.getStatus());
			 
			c
   
			List<EMSModel> savedEntities = emsRepository.saveAll(entityList);
			if (savedEntities != null && !savedEntities.isEmpty()) {
	            message = "SUCCESS";
	            response.setMessage(message);
	            response.setCode("200 OK");
	        } else {
	            response.setMessage("Insert failed");
	            response.setCode("500 INTERNAL SERVER ERROR");
	        }
    	}else {
            response.setMessage("Input list is null or empty");
            response.setCode("400 BAD REQUEST");
        }
    	}catch (Exception e) {
    		e.printStackTrace();
    		response.setMessage("Exception occurred");
            response.setCode("500 INTERNAL SERVER ERROR");
    	}
  
    	return response;
    	
    }
    
    
   
//INSERT_ALL_EMPLOYEE_DETAILS(MULTIPLE/LIST)
    
    public EMSInsertMultipleResponseDTO insertEmployeeDetailsAll(EMSInsertMultipleRequestDTO insertData) {
    	EMSInsertMultipleResponseDTO response = new EMSInsertMultipleResponseDTO();
    	String message = "FAILURE";
    	
    	try {
    		List<EMSModel> dtoList = insertData.getEmployeeDetailsRequestAll();
 
    		if (dtoList != null && !dtoList.isEmpty()) {
    			
    			List<EMSModel> entityList = new ArrayList<>();
    			
    			for (EMSModel dto : dtoList){
    				
    			EMSModel entity = new EMSModel();
    			 entity.setId(dto.getId());
    			 entity.setRid(dto.getRid());
    			 entity.setName(dto.getName());
    			 entity.setParentName(dto.getParentName());
    			 entity.setStreamName(dto.getStreamName());
    			 entity.setDOB(dto.getDOB());
    			 entity.setPOY(dto.getPOY());
    			 entity.setMobileNumber(dto.getMobileNumber());
    			 entity.setMailID(dto.getMailID());
    			 entity.setAddress(dto.getAddress());
    			 entity.setStatus(dto.getStatus());
    			 
    			 entityList.add(entity);
    			}
    			
    			List<EMSModel> savedEntities = emsRepository.saveAll(entityList);
                

                if (savedEntities != null && !savedEntities.isEmpty()) {
                    message = "SUCCESS";
                    response.setMessage(message);
                    response.setCode("200 OK");
                } else {
                    response.setMessage("Insert failed");
                    response.setCode("500 INTERNAL SERVER ERROR");
                }
    			
    		}else {
    			response.setMessage("Input list is null or empty");
                response.setCode("400 BAD REQUEST");
    		}
    	}catch (Exception e) {
    		e.printStackTrace();
    		response.setMessage("Exception occurred");
            response.setCode("500 INTERNAL SERVER ERROR");
    	}
    	return response;
    }
    
//UPDATE
    public EMSUpdateResponseDTO updateEmployeeDetails(EMSUpdateRequestDTO insertData) {
    	EMSUpdateResponseDTO response =new EMSUpdateResponseDTO();
    	List<EMSModel> saveEntities =  new ArrayList<>();
    	try {
    		Optional<EMSModel> dbResponse = emsRepository.findById(insertData.getId());
    		if(dbResponse.isPresent()) {
    			EMSModel entity = new EMSModel();
    			
    			if(insertData.getId()!=null && insertData.getRid()!=null) {
    			
    				entity.setId(dbResponse.get().getId());
    				entity.setRid(insertData.getRid());
    				entity.setName(dbResponse.get().getName());
    				entity.setParentName(dbResponse.get().getParentName());
    				entity.setStreamName(dbResponse.get().getStreamName());
    				entity.setDOB(dbResponse.get().getDOB());
    				entity.setPOY(dbResponse.get().getPOY());
    				entity.setMobileNumber(dbResponse.get().getMobileNumber());
    				entity.setMailID(dbResponse.get().getMailID());
    				entity.setAddress(dbResponse.get().getAddress());
    				entity.setStatus(dbResponse.get().getStatus());
    				
    				saveEntities.add(entity);
    				
    				
    			}else if(insertData.getId()!=null && insertData.getName()!=null) {
    				entity.setId(dbResponse.get().getId());
    				entity.setRid(dbResponse.get().getRid());
    				entity.setName(insertData.getName());
    				entity.setParentName(dbResponse.get().getParentName());
    				entity.setStreamName(dbResponse.get().getStreamName());
    				entity.setDOB(dbResponse.get().getDOB());
    				entity.setPOY(dbResponse.get().getPOY());
    				entity.setMobileNumber(dbResponse.get().getMobileNumber());
    				entity.setMailID(dbResponse.get().getMailID());
    				entity.setAddress(dbResponse.get().getAddress());
    				entity.setStatus(dbResponse.get().getStatus());
    				
    				saveEntities.add(entity);
    			}else if(insertData.getId()!=null && insertData.getParentName()!=null) {
    				entity.setId(dbResponse.get().getId());
    				entity.setRid(dbResponse.get().getRid());
    				entity.setName(dbResponse.get().getName());
    				entity.setParentName();
    				entity.setStreamName(dbResponse.get().getStreamName());
    				entity.setDOB(dbResponse.get().getDOB());
    				entity.setPOY(dbResponse.get().getPOY());
    				entity.setMobileNumber(dbResponse.get().getMobileNumber());
    				entity.setMailID(dbResponse.get().getMailID());
    				entity.setAddress(dbResponse.get().getAddress());
    				entity.setStatus(dbResponse.get().getStatus());
    				
    				saveEntities.add(entity);
    			}else if(insertData.getId()!=null && insertData.getStreamName()!=null) {
    				
    			}else if(insertData.getId()!=null && insertData.getDOB()!=null) {
    				
    			}else if(insertData.getId()!=null && insertData.getPOY()!=null) {
    				
    			}else if(insertData.getId()!=null && insertData.getMobileNumber()!=null) {
    				
    			}else if(insertData.getId()!=null && insertData.getMailID()!=null) {
    				
    			}else if(insertData.getId()!=null && insertData.getAddress()!=null) {
    				
    			}else (insertData.getId()!=null && insertData.getStatus()!=null) {
    				
    			}
    			
    		}
    	}catch() {
    		
    	}
    }
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2038)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2243)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3278)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3055)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.internalGetHoverInfo(NLSStringHover.java:141)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.getHoverInfo2(NLSStringHover.java:120)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:163)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:130)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:89)
	at org.eclipse.jface.text.TextViewerHoverManager$1.run(TextViewerHoverManager.java:155)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2025-06-10 23:49:26.461
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2038)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2243)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3278)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3055)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.internalGetHoverInfo(NLSStringHover.java:141)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.getHoverInfo2(NLSStringHover.java:120)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:163)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:130)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:89)
	at org.eclipse.jface.text.TextViewerHoverManager$1.run(TextViewerHoverManager.java:155)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2025-06-10 23:49:26.466
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2038)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2243)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3278)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3055)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.internalGetHoverInfo(NLSStringHover.java:141)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.getHoverInfo2(NLSStringHover.java:120)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:163)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:130)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:89)
	at org.eclipse.jface.text.TextViewerHoverManager$1.run(TextViewerHoverManager.java:155)

!ENTRY org.eclipse.jdt.core 4 4 2025-06-10 23:49:26.508
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package com.example.EMSbackend.Service;

import java.util.ArrayList;
import java.util.List;
import java.util.Optional;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import com.example.EMSbackend.DTO.EMSGetAllDTO;
import com.example.EMSbackend.DTO.EMSInsertMultipleRequestDTO;
import com.example.EMSbackend.DTO.EMSInsertMultipleResponseDTO;
import com.example.EMSbackend.DTO.EMSInsertSingleRequestDTO;
import com.example.EMSbackend.DTO.EMSInsertSingleResponseDTO;
import com.example.EMSbackend.DTO.EMSUpdateRequestDTO;
import com.example.EMSbackend.DTO.EMSUpdateResponseDTO;
import com.example.EMSbackend.Model.EMSModel;
import com.example.EMSbackend.Repository.EMSRepository;

import lombok.extern.slf4j.Slf4j;

@Slf4j
@Service
public class EMSService {

	@Autowired
	private EMSRepository emsRepository;
	
	
//GET_ALL_EMPLOYEE_DETAILS
    public EMSGetAllDTO getEmployeeDetailsAll() {
    	EMSGetAllDTO response = new EMSGetAllDTO();
    
    	
    	//try { 	
    	List<EMSModel> modelDetails = (List<EMSModel>) emsRepository.findAll();
    	response.setEmployeeDetailsAll(modelDetails);
    	
    	/*if(modelDetails!=null) {
    		response.setEmployeeDetailsAll(modelDetails);
    	}
    	else {
    		System.out.println("Employee not found");
    		//log.info("Service response not found");
    	}
    	
    	}catch (Exception e) {
            System.out.println("Error while fetching employee list: " + e.getMessage());
            e.printStackTrace();
        }*/
    	    
    	return response;
    }
    
//INSERT_ALL_EMPLOYEE_DETAILS(SINGLE_DATA/NOT_LIST)
    public EMSInsertSingleResponseDTO insertEmployeeDetails(EMSInsertSingleRequestDTO requestData) {
    	EMSInsertSingleResponseDTO response = new EMSInsertSingleResponseDTO();
    	String message = "FAILURE";
    	List<EMSModel> entityList = new ArrayList<>();
  
    	try {
    	if (requestData != null) {
    		EMSModel entity = new EMSModel();
    		entity.setId(requestData.getId());
			entity.setRid(requestData.getRid());
			entity.setName(requestData.getName());
			entity.setParentName(requestData.getParentName());
			entity.setStreamName(requestData.getStreamName());
			entity.setDOB(requestData.getDOB());
			entity.setPOY(requestData.getPOY());
			entity.setMobileNumber(requestData.getMobileNumber());
			entity.setMailID(requestData.getMailID());
			entity.setAddress(requestData.getAddress());
			entity.setStatus(requestData.getStatus());
			 
			c
   
			List<EMSModel> savedEntities = emsRepository.saveAll(entityList);
			if (savedEntities != null && !savedEntities.isEmpty()) {
	            message = "SUCCESS";
	            response.setMessage(message);
	            response.setCode("200 OK");
	        } else {
	            response.setMessage("Insert failed");
	            response.setCode("500 INTERNAL SERVER ERROR");
	        }
    	}else {
            response.setMessage("Input list is null or empty");
            response.setCode("400 BAD REQUEST");
        }
    	}catch (Exception e) {
    		e.printStackTrace();
    		response.setMessage("Exception occurred");
            response.setCode("500 INTERNAL SERVER ERROR");
    	}
  
    	return response;
    	
    }
    
    
   
//INSERT_ALL_EMPLOYEE_DETAILS(MULTIPLE/LIST)
    
    public EMSInsertMultipleResponseDTO insertEmployeeDetailsAll(EMSInsertMultipleRequestDTO insertData) {
    	EMSInsertMultipleResponseDTO response = new EMSInsertMultipleResponseDTO();
    	String message = "FAILURE";
    	
    	try {
    		List<EMSModel> dtoList = insertData.getEmployeeDetailsRequestAll();
 
    		if (dtoList != null && !dtoList.isEmpty()) {
    			
    			List<EMSModel> entityList = new ArrayList<>();
    			
    			for (EMSModel dto : dtoList){
    				
    			EMSModel entity = new EMSModel();
    			 entity.setId(dto.getId());
    			 entity.setRid(dto.getRid());
    			 entity.setName(dto.getName());
    			 entity.setParentName(dto.getParentName());
    			 entity.setStreamName(dto.getStreamName());
    			 entity.setDOB(dto.getDOB());
    			 entity.setPOY(dto.getPOY());
    			 entity.setMobileNumber(dto.getMobileNumber());
    			 entity.setMailID(dto.getMailID());
    			 entity.setAddress(dto.getAddress());
    			 entity.setStatus(dto.getStatus());
    			 
    			 entityList.add(entity);
    			}
    			
    			List<EMSModel> savedEntities = emsRepository.saveAll(entityList);
                

                if (savedEntities != null && !savedEntities.isEmpty()) {
                    message = "SUCCESS";
                    response.setMessage(message);
                    response.setCode("200 OK");
                } else {
                    response.setMessage("Insert failed");
                    response.setCode("500 INTERNAL SERVER ERROR");
                }
    			
    		}else {
    			response.setMessage("Input list is null or empty");
                response.setCode("400 BAD REQUEST");
    		}
    	}catch (Exception e) {
    		e.printStackTrace();
    		response.setMessage("Exception occurred");
            response.setCode("500 INTERNAL SERVER ERROR");
    	}
    	return response;
    }
    
//UPDATE
    public EMSUpdateResponseDTO updateEmployeeDetails(EMSUpdateRequestDTO insertData) {
    	EMSUpdateResponseDTO response =new EMSUpdateResponseDTO();
    	List<EMSModel> saveEntities =  new ArrayList<>();
    	try {
    		Optional<EMSModel> dbResponse = emsRepository.findById(insertData.getId());
    		if(dbResponse.isPresent()) {
    			EMSModel entity = new EMSModel();
    			
    			if(insertData.getId()!=null && insertData.getRid()!=null) {
    			
    				entity.setId(dbResponse.get().getId());
    				entity.setRid(insertData.getRid());
    				entity.setName(dbResponse.get().getName());
    				entity.setParentName(dbResponse.get().getParentName());
    				entity.setStreamName(dbResponse.get().getStreamName());
    				entity.setDOB(dbResponse.get().getDOB());
    				entity.setPOY(dbResponse.get().getPOY());
    				entity.setMobileNumber(dbResponse.get().getMobileNumber());
    				entity.setMailID(dbResponse.get().getMailID());
    				entity.setAddress(dbResponse.get().getAddress());
    				entity.setStatus(dbResponse.get().getStatus());
    				
    				saveEntities.add(entity);
    				
    				
    			}else if(insertData.getId()!=null && insertData.getName()!=null) {
    				entity.setId(dbResponse.get().getId());
    				entity.setRid(dbResponse.get().getRid());
    				entity.setName(insertData.getName());
    				entity.setParentName(dbResponse.get().getParentName());
    				entity.setStreamName(dbResponse.get().getStreamName());
    				entity.setDOB(dbResponse.get().getDOB());
    				entity.setPOY(dbResponse.get().getPOY());
    				entity.setMobileNumber(dbResponse.get().getMobileNumber());
    				entity.setMailID(dbResponse.get().getMailID());
    				entity.setAddress(dbResponse.get().getAddress());
    				entity.setStatus(dbResponse.get().getStatus());
    				
    				saveEntities.add(entity);
    			}else if(insertData.getId()!=null && insertData.getParentName()!=null) {
    				entity.setId(dbResponse.get().getId());
    				entity.setRid(dbResponse.get().getRid());
    				entity.setName(dbResponse.get().getName());
    				entity.setParentName(i);
    				entity.setStreamName(dbResponse.get().getStreamName());
    				entity.setDOB(dbResponse.get().getDOB());
    				entity.setPOY(dbResponse.get().getPOY());
    				entity.setMobileNumber(dbResponse.get().getMobileNumber());
    				entity.setMailID(dbResponse.get().getMailID());
    				entity.setAddress(dbResponse.get().getAddress());
    				entity.setStatus(dbResponse.get().getStatus());
    				
    				saveEntities.add(entity);
    			}else if(insertData.getId()!=null && insertData.getStreamName()!=null) {
    				
    			}else if(insertData.getId()!=null && insertData.getDOB()!=null) {
    				
    			}else if(insertData.getId()!=null && insertData.getPOY()!=null) {
    				
    			}else if(insertData.getId()!=null && insertData.getMobileNumber()!=null) {
    				
    			}else if(insertData.getId()!=null && insertData.getMailID()!=null) {
    				
    			}else if(insertData.getId()!=null && insertData.getAddress()!=null) {
    				
    			}else (insertData.getId()!=null && insertData.getStatus()!=null) {
    				
    			}
    			
    		}
    	}catch() {
    		
    	}
    }
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2038)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2243)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3278)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3055)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getHoveredASTNode(JavadocHover.java:1003)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getInfoText(JavadocHover.java:799)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getHoverInfo(JavadocHover.java:743)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.internalGetHoverInfo(JavadocHover.java:666)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getHoverInfo2(JavadocHover.java:658)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:163)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:130)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:89)
	at org.eclipse.jface.text.TextViewerHoverManager$1.run(TextViewerHoverManager.java:155)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2025-06-10 23:49:26.511
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2038)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2243)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3278)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3055)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getHoveredASTNode(JavadocHover.java:1003)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getInfoText(JavadocHover.java:799)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getHoverInfo(JavadocHover.java:743)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.internalGetHoverInfo(JavadocHover.java:666)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getHoverInfo2(JavadocHover.java:658)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:163)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:130)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:89)
	at org.eclipse.jface.text.TextViewerHoverManager$1.run(TextViewerHoverManager.java:155)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2025-06-10 23:49:26.514
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2038)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2243)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3278)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3055)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getHoveredASTNode(JavadocHover.java:1003)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getInfoText(JavadocHover.java:799)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getHoverInfo(JavadocHover.java:743)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.internalGetHoverInfo(JavadocHover.java:666)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getHoverInfo2(JavadocHover.java:658)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:163)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:130)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:89)
	at org.eclipse.jface.text.TextViewerHoverManager$1.run(TextViewerHoverManager.java:155)

!ENTRY org.eclipse.jdt.core 4 4 2025-06-10 23:49:26.536
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package com.example.EMSbackend.Service;

import java.util.ArrayList;
import java.util.List;
import java.util.Optional;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import com.example.EMSbackend.DTO.EMSGetAllDTO;
import com.example.EMSbackend.DTO.EMSInsertMultipleRequestDTO;
import com.example.EMSbackend.DTO.EMSInsertMultipleResponseDTO;
import com.example.EMSbackend.DTO.EMSInsertSingleRequestDTO;
import com.example.EMSbackend.DTO.EMSInsertSingleResponseDTO;
import com.example.EMSbackend.DTO.EMSUpdateRequestDTO;
import com.example.EMSbackend.DTO.EMSUpdateResponseDTO;
import com.example.EMSbackend.Model.EMSModel;
import com.example.EMSbackend.Repository.EMSRepository;

import lombok.extern.slf4j.Slf4j;

@Slf4j
@Service
public class EMSService {

	@Autowired
	private EMSRepository emsRepository;
	
	
//GET_ALL_EMPLOYEE_DETAILS
    public EMSGetAllDTO getEmployeeDetailsAll() {
    	EMSGetAllDTO response = new EMSGetAllDTO();
    
    	
    	//try { 	
    	List<EMSModel> modelDetails = (List<EMSModel>) emsRepository.findAll();
    	response.setEmployeeDetailsAll(modelDetails);
    	
    	/*if(modelDetails!=null) {
    		response.setEmployeeDetailsAll(modelDetails);
    	}
    	else {
    		System.out.println("Employee not found");
    		//log.info("Service response not found");
    	}
    	
    	}catch (Exception e) {
            System.out.println("Error while fetching employee list: " + e.getMessage());
            e.printStackTrace();
        }*/
    	    
    	return response;
    }
    
//INSERT_ALL_EMPLOYEE_DETAILS(SINGLE_DATA/NOT_LIST)
    public EMSInsertSingleResponseDTO insertEmployeeDetails(EMSInsertSingleRequestDTO requestData) {
    	EMSInsertSingleResponseDTO response = new EMSInsertSingleResponseDTO();
    	String message = "FAILURE";
    	List<EMSModel> entityList = new ArrayList<>();
  
    	try {
    	if (requestData != null) {
    		EMSModel entity = new EMSModel();
    		entity.setId(requestData.getId());
			entity.setRid(requestData.getRid());
			entity.setName(requestData.getName());
			entity.setParentName(requestData.getParentName());
			entity.setStreamName(requestData.getStreamName());
			entity.setDOB(requestData.getDOB());
			entity.setPOY(requestData.getPOY());
			entity.setMobileNumber(requestData.getMobileNumber());
			entity.setMailID(requestData.getMailID());
			entity.setAddress(requestData.getAddress());
			entity.setStatus(requestData.getStatus());
			 
			c
   
			List<EMSModel> savedEntities = emsRepository.saveAll(entityList);
			if (savedEntities != null && !savedEntities.isEmpty()) {
	            message = "SUCCESS";
	            response.setMessage(message);
	            response.setCode("200 OK");
	        } else {
	            response.setMessage("Insert failed");
	            response.setCode("500 INTERNAL SERVER ERROR");
	        }
    	}else {
            response.setMessage("Input list is null or empty");
            response.setCode("400 BAD REQUEST");
        }
    	}catch (Exception e) {
    		e.printStackTrace();
    		response.setMessage("Exception occurred");
            response.setCode("500 INTERNAL SERVER ERROR");
    	}
  
    	return response;
    	
    }
    
    
   
//INSERT_ALL_EMPLOYEE_DETAILS(MULTIPLE/LIST)
    
    public EMSInsertMultipleResponseDTO insertEmployeeDetailsAll(EMSInsertMultipleRequestDTO insertData) {
    	EMSInsertMultipleResponseDTO response = new EMSInsertMultipleResponseDTO();
    	String message = "FAILURE";
    	
    	try {
    		List<EMSModel> dtoList = insertData.getEmployeeDetailsRequestAll();
 
    		if (dtoList != null && !dtoList.isEmpty()) {
    			
    			List<EMSModel> entityList = new ArrayList<>();
    			
    			for (EMSModel dto : dtoList){
    				
    			EMSModel entity = new EMSModel();
    			 entity.setId(dto.getId());
    			 entity.setRid(dto.getRid());
    			 entity.setName(dto.getName());
    			 entity.setParentName(dto.getParentName());
    			 entity.setStreamName(dto.getStreamName());
    			 entity.setDOB(dto.getDOB());
    			 entity.setPOY(dto.getPOY());
    			 entity.setMobileNumber(dto.getMobileNumber());
    			 entity.setMailID(dto.getMailID());
    			 entity.setAddress(dto.getAddress());
    			 entity.setStatus(dto.getStatus());
    			 
    			 entityList.add(entity);
    			}
    			
    			List<EMSModel> savedEntities = emsRepository.saveAll(entityList);
                

                if (savedEntities != null && !savedEntities.isEmpty()) {
                    message = "SUCCESS";
                    response.setMessage(message);
                    response.setCode("200 OK");
                } else {
                    response.setMessage("Insert failed");
                    response.setCode("500 INTERNAL SERVER ERROR");
                }
    			
    		}else {
    			response.setMessage("Input list is null or empty");
                response.setCode("400 BAD REQUEST");
    		}
    	}catch (Exception e) {
    		e.printStackTrace();
    		response.setMessage("Exception occurred");
            response.setCode("500 INTERNAL SERVER ERROR");
    	}
    	return response;
    }
    
//UPDATE
    public EMSUpdateResponseDTO updateEmployeeDetails(EMSUpdateRequestDTO insertData) {
    	EMSUpdateResponseDTO response =new EMSUpdateResponseDTO();
    	List<EMSModel> saveEntities =  new ArrayList<>();
    	try {
    		Optional<EMSModel> dbResponse = emsRepository.findById(insertData.getId());
    		if(dbResponse.isPresent()) {
    			EMSModel entity = new EMSModel();
    			
    			if(insertData.getId()!=null && insertData.getRid()!=null) {
    			
    				entity.setId(dbResponse.get().getId());
    				entity.setRid(insertData.getRid());
    				entity.setName(dbResponse.get().getName());
    				entity.setParentName(dbResponse.get().getParentName());
    				entity.setStreamName(dbResponse.get().getStreamName());
    				entity.setDOB(dbResponse.get().getDOB());
    				entity.setPOY(dbResponse.get().getPOY());
    				entity.setMobileNumber(dbResponse.get().getMobileNumber());
    				entity.setMailID(dbResponse.get().getMailID());
    				entity.setAddress(dbResponse.get().getAddress());
    				entity.setStatus(dbResponse.get().getStatus());
    				
    				saveEntities.add(entity);
    				
    				
    			}else if(insertData.getId()!=null && insertData.getName()!=null) {
    				entity.setId(dbResponse.get().getId());
    				entity.setRid(dbResponse.get().getRid());
    				entity.setName(insertData.getName());
    				entity.setParentName(dbResponse.get().getParentName());
    				entity.setStreamName(dbResponse.get().getStreamName());
    				entity.setDOB(dbResponse.get().getDOB());
    				entity.setPOY(dbResponse.get().getPOY());
    				entity.setMobileNumber(dbResponse.get().getMobileNumber());
    				entity.setMailID(dbResponse.get().getMailID());
    				entity.setAddress(dbResponse.get().getAddress());
    				entity.setStatus(dbResponse.get().getStatus());
    				
    				saveEntities.add(entity);
    			}else if(insertData.getId()!=null && insertData.getParentName()!=null) {
    				entity.setId(dbResponse.get().getId());
    				entity.setRid(dbResponse.get().getRid());
    				entity.setName(dbResponse.get().getName());
    				entity.setParentName(i);
    				entity.setStreamName(dbResponse.get().getStreamName());
    				entity.setDOB(dbResponse.get().getDOB());
    				entity.setPOY(dbResponse.get().getPOY());
    				entity.setMobileNumber(dbResponse.get().getMobileNumber());
    				entity.setMailID(dbResponse.get().getMailID());
    				entity.setAddress(dbResponse.get().getAddress());
    				entity.setStatus(dbResponse.get().getStatus());
    				
    				saveEntities.add(entity);
    			}else if(insertData.getId()!=null && insertData.getStreamName()!=null) {
    				
    			}else if(insertData.getId()!=null && insertData.getDOB()!=null) {
    				
    			}else if(insertData.getId()!=null && insertData.getPOY()!=null) {
    				
    			}else if(insertData.getId()!=null && insertData.getMobileNumber()!=null) {
    				
    			}else if(insertData.getId()!=null && insertData.getMailID()!=null) {
    				
    			}else if(insertData.getId()!=null && insertData.getAddress()!=null) {
    				
    			}else (insertData.getId()!=null && insertData.getStatus()!=null) {
    				
    			}
    			
    		}
    	}catch() {
    		
    	}
    }
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2038)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2243)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3278)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3055)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getHoveredASTNode(JavadocHover.java:1003)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getHoveredNodeBinding(JavadocHover.java:882)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getAnnotations(JavadocHover.java:1173)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.addAnnotations(JavadocHover.java:1137)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getHoverInfo(JavadocHover.java:745)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.internalGetHoverInfo(JavadocHover.java:666)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getHoverInfo2(JavadocHover.java:658)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:163)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:130)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:89)
	at org.eclipse.jface.text.TextViewerHoverManager$1.run(TextViewerHoverManager.java:155)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2025-06-10 23:49:26.541
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2038)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2243)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3278)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3055)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getHoveredASTNode(JavadocHover.java:1003)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getHoveredNodeBinding(JavadocHover.java:882)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getAnnotations(JavadocHover.java:1173)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.addAnnotations(JavadocHover.java:1137)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getHoverInfo(JavadocHover.java:745)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.internalGetHoverInfo(JavadocHover.java:666)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getHoverInfo2(JavadocHover.java:658)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:163)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:130)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:89)
	at org.eclipse.jface.text.TextViewerHoverManager$1.run(TextViewerHoverManager.java:155)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2025-06-10 23:49:26.544
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2038)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2243)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3278)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3055)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getHoveredASTNode(JavadocHover.java:1003)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getHoveredNodeBinding(JavadocHover.java:882)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getAnnotations(JavadocHover.java:1173)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.addAnnotations(JavadocHover.java:1137)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getHoverInfo(JavadocHover.java:745)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.internalGetHoverInfo(JavadocHover.java:666)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getHoverInfo2(JavadocHover.java:658)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:163)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:130)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:89)
	at org.eclipse.jface.text.TextViewerHoverManager$1.run(TextViewerHoverManager.java:155)

!ENTRY org.eclipse.jdt.core 4 4 2025-06-10 23:49:27.989
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package com.example.EMSbackend.Service;

import java.util.ArrayList;
import java.util.List;
import java.util.Optional;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import com.example.EMSbackend.DTO.EMSGetAllDTO;
import com.example.EMSbackend.DTO.EMSInsertMultipleRequestDTO;
import com.example.EMSbackend.DTO.EMSInsertMultipleResponseDTO;
import com.example.EMSbackend.DTO.EMSInsertSingleRequestDTO;
import com.example.EMSbackend.DTO.EMSInsertSingleResponseDTO;
import com.example.EMSbackend.DTO.EMSUpdateRequestDTO;
import com.example.EMSbackend.DTO.EMSUpdateResponseDTO;
import com.example.EMSbackend.Model.EMSModel;
import com.example.EMSbackend.Repository.EMSRepository;

import lombok.extern.slf4j.Slf4j;

@Slf4j
@Service
public class EMSService {

	@Autowired
	private EMSRepository emsRepository;
	
	
//GET_ALL_EMPLOYEE_DETAILS
    public EMSGetAllDTO getEmployeeDetailsAll() {
    	EMSGetAllDTO response = new EMSGetAllDTO();
    
    	
    	//try { 	
    	List<EMSModel> modelDetails = (List<EMSModel>) emsRepository.findAll();
    	response.setEmployeeDetailsAll(modelDetails);
    	
    	/*if(modelDetails!=null) {
    		response.setEmployeeDetailsAll(modelDetails);
    	}
    	else {
    		System.out.println("Employee not found");
    		//log.info("Service response not found");
    	}
    	
    	}catch (Exception e) {
            System.out.println("Error while fetching employee list: " + e.getMessage());
            e.printStackTrace();
        }*/
    	    
    	return response;
    }
    
//INSERT_ALL_EMPLOYEE_DETAILS(SINGLE_DATA/NOT_LIST)
    public EMSInsertSingleResponseDTO insertEmployeeDetails(EMSInsertSingleRequestDTO requestData) {
    	EMSInsertSingleResponseDTO response = new EMSInsertSingleResponseDTO();
    	String message = "FAILURE";
    	List<EMSModel> entityList = new ArrayList<>();
  
    	try {
    	if (requestData != null) {
    		EMSModel entity = new EMSModel();
    		entity.setId(requestData.getId());
			entity.setRid(requestData.getRid());
			entity.setName(requestData.getName());
			entity.setParentName(requestData.getParentName());
			entity.setStreamName(requestData.getStreamName());
			entity.setDOB(requestData.getDOB());
			entity.setPOY(requestData.getPOY());
			entity.setMobileNumber(requestData.getMobileNumber());
			entity.setMailID(requestData.getMailID());
			entity.setAddress(requestData.getAddress());
			entity.setStatus(requestData.getStatus());
			 
			c
   
			List<EMSModel> savedEntities = emsRepository.saveAll(entityList);
			if (savedEntities != null && !savedEntities.isEmpty()) {
	            message = "SUCCESS";
	            response.setMessage(message);
	            response.setCode("200 OK");
	        } else {
	            response.setMessage("Insert failed");
	            response.setCode("500 INTERNAL SERVER ERROR");
	        }
    	}else {
            response.setMessage("Input list is null or empty");
            response.setCode("400 BAD REQUEST");
        }
    	}catch (Exception e) {
    		e.printStackTrace();
    		response.setMessage("Exception occurred");
            response.setCode("500 INTERNAL SERVER ERROR");
    	}
  
    	return response;
    	
    }
    
    
   
//INSERT_ALL_EMPLOYEE_DETAILS(MULTIPLE/LIST)
    
    public EMSInsertMultipleResponseDTO insertEmployeeDetailsAll(EMSInsertMultipleRequestDTO insertData) {
    	EMSInsertMultipleResponseDTO response = new EMSInsertMultipleResponseDTO();
    	String message = "FAILURE";
    	
    	try {
    		List<EMSModel> dtoList = insertData.getEmployeeDetailsRequestAll();
 
    		if (dtoList != null && !dtoList.isEmpty()) {
    			
    			List<EMSModel> entityList = new ArrayList<>();
    			
    			for (EMSModel dto : dtoList){
    				
    			EMSModel entity = new EMSModel();
    			 entity.setId(dto.getId());
    			 entity.setRid(dto.getRid());
    			 entity.setName(dto.getName());
    			 entity.setParentName(dto.getParentName());
    			 entity.setStreamName(dto.getStreamName());
    			 entity.setDOB(dto.getDOB());
    			 entity.setPOY(dto.getPOY());
    			 entity.setMobileNumber(dto.getMobileNumber());
    			 entity.setMailID(dto.getMailID());
    			 entity.setAddress(dto.getAddress());
    			 entity.setStatus(dto.getStatus());
    			 
    			 entityList.add(entity);
    			}
    			
    			List<EMSModel> savedEntities = emsRepository.saveAll(entityList);
                

                if (savedEntities != null && !savedEntities.isEmpty()) {
                    message = "SUCCESS";
                    response.setMessage(message);
                    response.setCode("200 OK");
                } else {
                    response.setMessage("Insert failed");
                    response.setCode("500 INTERNAL SERVER ERROR");
                }
    			
    		}else {
    			response.setMessage("Input list is null or empty");
                response.setCode("400 BAD REQUEST");
    		}
    	}catch (Exception e) {
    		e.printStackTrace();
    		response.setMessage("Exception occurred");
            response.setCode("500 INTERNAL SERVER ERROR");
    	}
    	return response;
    }
    
//UPDATE
    public EMSUpdateResponseDTO updateEmployeeDetails(EMSUpdateRequestDTO insertData) {
    	EMSUpdateResponseDTO response =new EMSUpdateResponseDTO();
    	List<EMSModel> saveEntities =  new ArrayList<>();
    	try {
    		Optional<EMSModel> dbResponse = emsRepository.findById(insertData.getId());
    		if(dbResponse.isPresent()) {
    			EMSModel entity = new EMSModel();
    			
    			if(insertData.getId()!=null && insertData.getRid()!=null) {
    			
    				entity.setId(dbResponse.get().getId());
    				entity.setRid(insertData.getRid());
    				entity.setName(dbResponse.get().getName());
    				entity.setParentName(dbResponse.get().getParentName());
    				entity.setStreamName(dbResponse.get().getStreamName());
    				entity.setDOB(dbResponse.get().getDOB());
    				entity.setPOY(dbResponse.get().getPOY());
    				entity.setMobileNumber(dbResponse.get().getMobileNumber());
    				entity.setMailID(dbResponse.get().getMailID());
    				entity.setAddress(dbResponse.get().getAddress());
    				entity.setStatus(dbResponse.get().getStatus());
    				
    				saveEntities.add(entity);
    				
    				
    			}else if(insertData.getId()!=null && insertData.getName()!=null) {
    				entity.setId(dbResponse.get().getId());
    				entity.setRid(dbResponse.get().getRid());
    				entity.setName(insertData.getName());
    				entity.setParentName(dbResponse.get().getParentName());
    				entity.setStreamName(dbResponse.get().getStreamName());
    				entity.setDOB(dbResponse.get().getDOB());
    				entity.setPOY(dbResponse.get().getPOY());
    				entity.setMobileNumber(dbResponse.get().getMobileNumber());
    				entity.setMailID(dbResponse.get().getMailID());
    				entity.setAddress(dbResponse.get().getAddress());
    				entity.setStatus(dbResponse.get().getStatus());
    				
    				saveEntities.add(entity);
    			}else if(insertData.getId()!=null && insertData.getParentName()!=null) {
    				entity.setId(dbResponse.get().getId());
    				entity.setRid(dbResponse.get().getRid());
    				entity.setName(dbResponse.get().getName());
    				entity.setParentName(inser);
    				entity.setStreamName(dbResponse.get().getStreamName());
    				entity.setDOB(dbResponse.get().getDOB());
    				entity.setPOY(dbResponse.get().getPOY());
    				entity.setMobileNumber(dbResponse.get().getMobileNumber());
    				entity.setMailID(dbResponse.get().getMailID());
    				entity.setAddress(dbResponse.get().getAddress());
    				entity.setStatus(dbResponse.get().getStatus());
    				
    				saveEntities.add(entity);
    			}else if(insertData.getId()!=null && insertData.getStreamName()!=null) {
    				
    			}else if(insertData.getId()!=null && insertData.getDOB()!=null) {
    				
    			}else if(insertData.getId()!=null && insertData.getPOY()!=null) {
    				
    			}else if(insertData.getId()!=null && insertData.getMobileNumber()!=null) {
    				
    			}else if(insertData.getId()!=null && insertData.getMailID()!=null) {
    				
    			}else if(insertData.getId()!=null && insertData.getAddress()!=null) {
    				
    			}else (insertData.getId()!=null && insertData.getStatus()!=null) {
    				
    			}
    			
    		}
    	}catch() {
    		
    	}
    }
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2038)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2243)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3278)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3055)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:540)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:132)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:94)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:91)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:158)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)

!ENTRY org.eclipse.jdt.ui 4 2 2025-06-10 23:49:27.993
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2038)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2243)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3278)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3055)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:540)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:132)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:94)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:91)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:158)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)

!ENTRY org.eclipse.jdt.ui 4 0 2025-06-10 23:49:27.995
!MESSAGE Error in JDT Core during reconcile
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2038)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2243)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3278)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3055)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:540)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:132)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:94)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:91)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:158)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)

!ENTRY org.eclipse.jdt.core 4 4 2025-06-10 23:49:28.075
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package com.example.EMSbackend.Service;

import java.util.ArrayList;
import java.util.List;
import java.util.Optional;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import com.example.EMSbackend.DTO.EMSGetAllDTO;
import com.example.EMSbackend.DTO.EMSInsertMultipleRequestDTO;
import com.example.EMSbackend.DTO.EMSInsertMultipleResponseDTO;
import com.example.EMSbackend.DTO.EMSInsertSingleRequestDTO;
import com.example.EMSbackend.DTO.EMSInsertSingleResponseDTO;
import com.example.EMSbackend.DTO.EMSUpdateRequestDTO;
import com.example.EMSbackend.DTO.EMSUpdateResponseDTO;
import com.example.EMSbackend.Model.EMSModel;
import com.example.EMSbackend.Repository.EMSRepository;

import lombok.extern.slf4j.Slf4j;

@Slf4j
@Service
public class EMSService {

	@Autowired
	private EMSRepository emsRepository;
	
	
//GET_ALL_EMPLOYEE_DETAILS
    public EMSGetAllDTO getEmployeeDetailsAll() {
    	EMSGetAllDTO response = new EMSGetAllDTO();
    
    	
    	//try { 	
    	List<EMSModel> modelDetails = (List<EMSModel>) emsRepository.findAll();
    	response.setEmployeeDetailsAll(modelDetails);
    	
    	/*if(modelDetails!=null) {
    		response.setEmployeeDetailsAll(modelDetails);
    	}
    	else {
    		System.out.println("Employee not found");
    		//log.info("Service response not found");
    	}
    	
    	}catch (Exception e) {
            System.out.println("Error while fetching employee list: " + e.getMessage());
            e.printStackTrace();
        }*/
    	    
    	return response;
    }
    
//INSERT_ALL_EMPLOYEE_DETAILS(SINGLE_DATA/NOT_LIST)
    public EMSInsertSingleResponseDTO insertEmployeeDetails(EMSInsertSingleRequestDTO requestData) {
    	EMSInsertSingleResponseDTO response = new EMSInsertSingleResponseDTO();
    	String message = "FAILURE";
    	List<EMSModel> entityList = new ArrayList<>();
  
    	try {
    	if (requestData != null) {
    		EMSModel entity = new EMSModel();
    		entity.setId(requestData.getId());
			entity.setRid(requestData.getRid());
			entity.setName(requestData.getName());
			entity.setParentName(requestData.getParentName());
			entity.setStreamName(requestData.getStreamName());
			entity.setDOB(requestData.getDOB());
			entity.setPOY(requestData.getPOY());
			entity.setMobileNumber(requestData.getMobileNumber());
			entity.setMailID(requestData.getMailID());
			entity.setAddress(requestData.getAddress());
			entity.setStatus(requestData.getStatus());
			 
			c
   
			List<EMSModel> savedEntities = emsRepository.saveAll(entityList);
			if (savedEntities != null && !savedEntities.isEmpty()) {
	            message = "SUCCESS";
	            response.setMessage(message);
	            response.setCode("200 OK");
	        } else {
	            response.setMessage("Insert failed");
	            response.setCode("500 INTERNAL SERVER ERROR");
	        }
    	}else {
            response.setMessage("Input list is null or empty");
            response.setCode("400 BAD REQUEST");
        }
    	}catch (Exception e) {
    		e.printStackTrace();
    		response.setMessage("Exception occurred");
            response.setCode("500 INTERNAL SERVER ERROR");
    	}
  
    	return response;
    	
    }
    
    
   
//INSERT_ALL_EMPLOYEE_DETAILS(MULTIPLE/LIST)
    
    public EMSInsertMultipleResponseDTO insertEmployeeDetailsAll(EMSInsertMultipleRequestDTO insertData) {
    	EMSInsertMultipleResponseDTO response = new EMSInsertMultipleResponseDTO();
    	String message = "FAILURE";
    	
    	try {
    		List<EMSModel> dtoList = insertData.getEmployeeDetailsRequestAll();
 
    		if (dtoList != null && !dtoList.isEmpty()) {
    			
    			List<EMSModel> entityList = new ArrayList<>();
    			
    			for (EMSModel dto : dtoList){
    				
    			EMSModel entity = new EMSModel();
    			 entity.setId(dto.getId());
    			 entity.setRid(dto.getRid());
    			 entity.setName(dto.getName());
    			 entity.setParentName(dto.getParentName());
    			 entity.setStreamName(dto.getStreamName());
    			 entity.setDOB(dto.getDOB());
    			 entity.setPOY(dto.getPOY());
    			 entity.setMobileNumber(dto.getMobileNumber());
    			 entity.setMailID(dto.getMailID());
    			 entity.setAddress(dto.getAddress());
    			 entity.setStatus(dto.getStatus());
    			 
    			 entityList.add(entity);
    			}
    			
    			List<EMSModel> savedEntities = emsRepository.saveAll(entityList);
                

                if (savedEntities != null && !savedEntities.isEmpty()) {
                    message = "SUCCESS";
                    response.setMessage(message);
                    response.setCode("200 OK");
                } else {
                    response.setMessage("Insert failed");
                    response.setCode("500 INTERNAL SERVER ERROR");
                }
    			
    		}else {
    			response.setMessage("Input list is null or empty");
                response.setCode("400 BAD REQUEST");
    		}
    	}catch (Exception e) {
    		e.printStackTrace();
    		response.setMessage("Exception occurred");
            response.setCode("500 INTERNAL SERVER ERROR");
    	}
    	return response;
    }
    
//UPDATE
    public EMSUpdateResponseDTO updateEmployeeDetails(EMSUpdateRequestDTO insertData) {
    	EMSUpdateResponseDTO response =new EMSUpdateResponseDTO();
    	List<EMSModel> saveEntities =  new ArrayList<>();
    	try {
    		Optional<EMSModel> dbResponse = emsRepository.findById(insertData.getId());
    		if(dbResponse.isPresent()) {
    			EMSModel entity = new EMSModel();
    			
    			if(insertData.getId()!=null && insertData.getRid()!=null) {
    			
    				entity.setId(dbResponse.get().getId());
    				entity.setRid(insertData.getRid());
    				entity.setName(dbResponse.get().getName());
    				entity.setParentName(dbResponse.get().getParentName());
    				entity.setStreamName(dbResponse.get().getStreamName());
    				entity.setDOB(dbResponse.get().getDOB());
    				entity.setPOY(dbResponse.get().getPOY());
    				entity.setMobileNumber(dbResponse.get().getMobileNumber());
    				entity.setMailID(dbResponse.get().getMailID());
    				entity.setAddress(dbResponse.get().getAddress());
    				entity.setStatus(dbResponse.get().getStatus());
    				
    				saveEntities.add(entity);
    				
    				
    			}else if(insertData.getId()!=null && insertData.getName()!=null) {
    				entity.setId(dbResponse.get().getId());
    				entity.setRid(dbResponse.get().getRid());
    				entity.setName(insertData.getName());
    				entity.setParentName(dbResponse.get().getParentName());
    				entity.setStreamName(dbResponse.get().getStreamName());
    				entity.setDOB(dbResponse.get().getDOB());
    				entity.setPOY(dbResponse.get().getPOY());
    				entity.setMobileNumber(dbResponse.get().getMobileNumber());
    				entity.setMailID(dbResponse.get().getMailID());
    				entity.setAddress(dbResponse.get().getAddress());
    				entity.setStatus(dbResponse.get().getStatus());
    				
    				saveEntities.add(entity);
    			}else if(insertData.getId()!=null && insertData.getParentName()!=null) {
    				entity.setId(dbResponse.get().getId());
    				entity.setRid(dbResponse.get().getRid());
    				entity.setName(dbResponse.get().getName());
    				entity.setParentName(insert);
    				entity.setStreamName(dbResponse.get().getStreamName());
    				entity.setDOB(dbResponse.get().getDOB());
    				entity.setPOY(dbResponse.get().getPOY());
    				entity.setMobileNumber(dbResponse.get().getMobileNumber());
    				entity.setMailID(dbResponse.get().getMailID());
    				entity.setAddress(dbResponse.get().getAddress());
    				entity.setStatus(dbResponse.get().getStatus());
    				
    				saveEntities.add(entity);
    			}else if(insertData.getId()!=null && insertData.getStreamName()!=null) {
    				
    			}else if(insertData.getId()!=null && insertData.getDOB()!=null) {
    				
    			}else if(insertData.getId()!=null && insertData.getPOY()!=null) {
    				
    			}else if(insertData.getId()!=null && insertData.getMobileNumber()!=null) {
    				
    			}else if(insertData.getId()!=null && insertData.getMailID()!=null) {
    				
    			}else if(insertData.getId()!=null && insertData.getAddress()!=null) {
    				
    			}else (insertData.getId()!=null && insertData.getStatus()!=null) {
    				
    			}
    			
    		}
    	}catch() {
    		
    	}
    }
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2038)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2243)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3278)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3055)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:540)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:132)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:94)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:91)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:158)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)

!ENTRY org.eclipse.jdt.ui 4 2 2025-06-10 23:49:28.077
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2038)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2243)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3278)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3055)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:540)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:132)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:94)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:91)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:158)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)

!ENTRY org.eclipse.jdt.ui 4 0 2025-06-10 23:49:28.080
!MESSAGE Error in JDT Core during reconcile
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2038)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2243)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3278)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3055)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:540)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:132)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:94)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:91)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:158)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)

!ENTRY org.eclipse.jdt.core 4 4 2025-06-10 23:49:28.118
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package com.example.EMSbackend.Service;

import java.util.ArrayList;
import java.util.List;
import java.util.Optional;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import com.example.EMSbackend.DTO.EMSGetAllDTO;
import com.example.EMSbackend.DTO.EMSInsertMultipleRequestDTO;
import com.example.EMSbackend.DTO.EMSInsertMultipleResponseDTO;
import com.example.EMSbackend.DTO.EMSInsertSingleRequestDTO;
import com.example.EMSbackend.DTO.EMSInsertSingleResponseDTO;
import com.example.EMSbackend.DTO.EMSUpdateRequestDTO;
import com.example.EMSbackend.DTO.EMSUpdateResponseDTO;
import com.example.EMSbackend.Model.EMSModel;
import com.example.EMSbackend.Repository.EMSRepository;

import lombok.extern.slf4j.Slf4j;

@Slf4j
@Service
public class EMSService {

	@Autowired
	private EMSRepository emsRepository;
	
	
//GET_ALL_EMPLOYEE_DETAILS
    public EMSGetAllDTO getEmployeeDetailsAll() {
    	EMSGetAllDTO response = new EMSGetAllDTO();
    
    	
    	//try { 	
    	List<EMSModel> modelDetails = (List<EMSModel>) emsRepository.findAll();
    	response.setEmployeeDetailsAll(modelDetails);
    	
    	/*if(modelDetails!=null) {
    		response.setEmployeeDetailsAll(modelDetails);
    	}
    	else {
    		System.out.println("Employee not found");
    		//log.info("Service response not found");
    	}
    	
    	}catch (Exception e) {
            System.out.println("Error while fetching employee list: " + e.getMessage());
            e.printStackTrace();
        }*/
    	    
    	return response;
    }
    
//INSERT_ALL_EMPLOYEE_DETAILS(SINGLE_DATA/NOT_LIST)
    public EMSInsertSingleResponseDTO insertEmployeeDetails(EMSInsertSingleRequestDTO requestData) {
    	EMSInsertSingleResponseDTO response = new EMSInsertSingleResponseDTO();
    	String message = "FAILURE";
    	List<EMSModel> entityList = new ArrayList<>();
  
    	try {
    	if (requestData != null) {
    		EMSModel entity = new EMSModel();
    		entity.setId(requestData.getId());
			entity.setRid(requestData.getRid());
			entity.setName(requestData.getName());
			entity.setParentName(requestData.getParentName());
			entity.setStreamName(requestData.getStreamName());
			entity.setDOB(requestData.getDOB());
			entity.setPOY(requestData.getPOY());
			entity.setMobileNumber(requestData.getMobileNumber());
			entity.setMailID(requestData.getMailID());
			entity.setAddress(requestData.getAddress());
			entity.setStatus(requestData.getStatus());
			 
			c
   
			List<EMSModel> savedEntities = emsRepository.saveAll(entityList);
			if (savedEntities != null && !savedEntities.isEmpty()) {
	            message = "SUCCESS";
	            response.setMessage(message);
	            response.setCode("200 OK");
	        } else {
	            response.setMessage("Insert failed");
	            response.setCode("500 INTERNAL SERVER ERROR");
	        }
    	}else {
            response.setMessage("Input list is null or empty");
            response.setCode("400 BAD REQUEST");
        }
    	}catch (Exception e) {
    		e.printStackTrace();
    		response.setMessage("Exception occurred");
            response.setCode("500 INTERNAL SERVER ERROR");
    	}
  
    	return response;
    	
    }
    
    
   
//INSERT_ALL_EMPLOYEE_DETAILS(MULTIPLE/LIST)
    
    public EMSInsertMultipleResponseDTO insertEmployeeDetailsAll(EMSInsertMultipleRequestDTO insertData) {
    	EMSInsertMultipleResponseDTO response = new EMSInsertMultipleResponseDTO();
    	String message = "FAILURE";
    	
    	try {
    		List<EMSModel> dtoList = insertData.getEmployeeDetailsRequestAll();
 
    		if (dtoList != null && !dtoList.isEmpty()) {
    			
    			List<EMSModel> entityList = new ArrayList<>();
    			
    			for (EMSModel dto : dtoList){
    				
    			EMSModel entity = new EMSModel();
    			 entity.setId(dto.getId());
    			 entity.setRid(dto.getRid());
    			 entity.setName(dto.getName());
    			 entity.setParentName(dto.getParentName());
    			 entity.setStreamName(dto.getStreamName());
    			 entity.setDOB(dto.getDOB());
    			 entity.setPOY(dto.getPOY());
    			 entity.setMobileNumber(dto.getMobileNumber());
    			 entity.setMailID(dto.getMailID());
    			 entity.setAddress(dto.getAddress());
    			 entity.setStatus(dto.getStatus());
    			 
    			 entityList.add(entity);
    			}
    			
    			List<EMSModel> savedEntities = emsRepository.saveAll(entityList);
                

                if (savedEntities != null && !savedEntities.isEmpty()) {
                    message = "SUCCESS";
                    response.setMessage(message);
                    response.setCode("200 OK");
                } else {
                    response.setMessage("Insert failed");
                    response.setCode("500 INTERNAL SERVER ERROR");
                }
    			
    		}else {
    			response.setMessage("Input list is null or empty");
                response.setCode("400 BAD REQUEST");
    		}
    	}catch (Exception e) {
    		e.printStackTrace();
    		response.setMessage("Exception occurred");
            response.setCode("500 INTERNAL SERVER ERROR");
    	}
    	return response;
    }
    
//UPDATE
    public EMSUpdateResponseDTO updateEmployeeDetails(EMSUpdateRequestDTO insertData) {
    	EMSUpdateResponseDTO response =new EMSUpdateResponseDTO();
    	List<EMSModel> saveEntities =  new ArrayList<>();
    	try {
    		Optional<EMSModel> dbResponse = emsRepository.findById(insertData.getId());
    		if(dbResponse.isPresent()) {
    			EMSModel entity = new EMSModel();
    			
    			if(insertData.getId()!=null && insertData.getRid()!=null) {
    			
    				entity.setId(dbResponse.get().getId());
    				entity.setRid(insertData.getRid());
    				entity.setName(dbResponse.get().getName());
    				entity.setParentName(dbResponse.get().getParentName());
    				entity.setStreamName(dbResponse.get().getStreamName());
    				entity.setDOB(dbResponse.get().getDOB());
    				entity.setPOY(dbResponse.get().getPOY());
    				entity.setMobileNumber(dbResponse.get().getMobileNumber());
    				entity.setMailID(dbResponse.get().getMailID());
    				entity.setAddress(dbResponse.get().getAddress());
    				entity.setStatus(dbResponse.get().getStatus());
    				
    				saveEntities.add(entity);
    				
    				
    			}else if(insertData.getId()!=null && insertData.getName()!=null) {
    				entity.setId(dbResponse.get().getId());
    				entity.setRid(dbResponse.get().getRid());
    				entity.setName(insertData.getName());
    				entity.setParentName(dbResponse.get().getParentName());
    				entity.setStreamName(dbResponse.get().getStreamName());
    				entity.setDOB(dbResponse.get().getDOB());
    				entity.setPOY(dbResponse.get().getPOY());
    				entity.setMobileNumber(dbResponse.get().getMobileNumber());
    				entity.setMailID(dbResponse.get().getMailID());
    				entity.setAddress(dbResponse.get().getAddress());
    				entity.setStatus(dbResponse.get().getStatus());
    				
    				saveEntities.add(entity);
    			}else if(insertData.getId()!=null && insertData.getParentName()!=null) {
    				entity.setId(dbResponse.get().getId());
    				entity.setRid(dbResponse.get().getRid());
    				entity.setName(dbResponse.get().getName());
    				entity.setParentName(insert);
    				entity.setStreamName(dbResponse.get().getStreamName());
    				entity.setDOB(dbResponse.get().getDOB());
    				entity.setPOY(dbResponse.get().getPOY());
    				entity.setMobileNumber(dbResponse.get().getMobileNumber());
    				entity.setMailID(dbResponse.get().getMailID());
    				entity.setAddress(dbResponse.get().getAddress());
    				entity.setStatus(dbResponse.get().getStatus());
    				
    				saveEntities.add(entity);
    			}else if(insertData.getId()!=null && insertData.getStreamName()!=null) {
    				
    			}else if(insertData.getId()!=null && insertData.getDOB()!=null) {
    				
    			}else if(insertData.getId()!=null && insertData.getPOY()!=null) {
    				
    			}else if(insertData.getId()!=null && insertData.getMobileNumber()!=null) {
    				
    			}else if(insertData.getId()!=null && insertData.getMailID()!=null) {
    				
    			}else if(insertData.getId()!=null && insertData.getAddress()!=null) {
    				
    			}else (insertData.getId()!=null && insertData.getStatus()!=null) {
    				
    			}
    			
    		}
    	}catch() {
    		
    	}
    }
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2038)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2243)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3278)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3055)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:189)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2025-06-10 23:49:28.124
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2038)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2243)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3278)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3055)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:189)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2025-06-10 23:49:28.127
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2038)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2243)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3278)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3055)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:189)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core 4 4 2025-06-10 23:49:29.375
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package com.example.EMSbackend.Service;

import java.util.ArrayList;
import java.util.List;
import java.util.Optional;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import com.example.EMSbackend.DTO.EMSGetAllDTO;
import com.example.EMSbackend.DTO.EMSInsertMultipleRequestDTO;
import com.example.EMSbackend.DTO.EMSInsertMultipleResponseDTO;
import com.example.EMSbackend.DTO.EMSInsertSingleRequestDTO;
import com.example.EMSbackend.DTO.EMSInsertSingleResponseDTO;
import com.example.EMSbackend.DTO.EMSUpdateRequestDTO;
import com.example.EMSbackend.DTO.EMSUpdateResponseDTO;
import com.example.EMSbackend.Model.EMSModel;
import com.example.EMSbackend.Repository.EMSRepository;

import lombok.extern.slf4j.Slf4j;

@Slf4j
@Service
public class EMSService {

	@Autowired
	private EMSRepository emsRepository;
	
	
//GET_ALL_EMPLOYEE_DETAILS
    public EMSGetAllDTO getEmployeeDetailsAll() {
    	EMSGetAllDTO response = new EMSGetAllDTO();
    
    	
    	//try { 	
    	List<EMSModel> modelDetails = (List<EMSModel>) emsRepository.findAll();
    	response.setEmployeeDetailsAll(modelDetails);
    	
    	/*if(modelDetails!=null) {
    		response.setEmployeeDetailsAll(modelDetails);
    	}
    	else {
    		System.out.println("Employee not found");
    		//log.info("Service response not found");
    	}
    	
    	}catch (Exception e) {
            System.out.println("Error while fetching employee list: " + e.getMessage());
            e.printStackTrace();
        }*/
    	    
    	return response;
    }
    
//INSERT_ALL_EMPLOYEE_DETAILS(SINGLE_DATA/NOT_LIST)
    public EMSInsertSingleResponseDTO insertEmployeeDetails(EMSInsertSingleRequestDTO requestData) {
    	EMSInsertSingleResponseDTO response = new EMSInsertSingleResponseDTO();
    	String message = "FAILURE";
    	List<EMSModel> entityList = new ArrayList<>();
  
    	try {
    	if (requestData != null) {
    		EMSModel entity = new EMSModel();
    		entity.setId(requestData.getId());
			entity.setRid(requestData.getRid());
			entity.setName(requestData.getName());
			entity.setParentName(requestData.getParentName());
			entity.setStreamName(requestData.getStreamName());
			entity.setDOB(requestData.getDOB());
			entity.setPOY(requestData.getPOY());
			entity.setMobileNumber(requestData.getMobileNumber());
			entity.setMailID(requestData.getMailID());
			entity.setAddress(requestData.getAddress());
			entity.setStatus(requestData.getStatus());
			 
			c
   
			List<EMSModel> savedEntities = emsRepository.saveAll(entityList);
			if (savedEntities != null && !savedEntities.isEmpty()) {
	            message = "SUCCESS";
	            response.setMessage(message);
	            response.setCode("200 OK");
	        } else {
	            response.setMessage("Insert failed");
	            response.setCode("500 INTERNAL SERVER ERROR");
	        }
    	}else {
            response.setMessage("Input list is null or empty");
            response.setCode("400 BAD REQUEST");
        }
    	}catch (Exception e) {
    		e.printStackTrace();
    		response.setMessage("Exception occurred");
            response.setCode("500 INTERNAL SERVER ERROR");
    	}
  
    	return response;
    	
    }
    
    
   
//INSERT_ALL_EMPLOYEE_DETAILS(MULTIPLE/LIST)
    
    public EMSInsertMultipleResponseDTO insertEmployeeDetailsAll(EMSInsertMultipleRequestDTO insertData) {
    	EMSInsertMultipleResponseDTO response = new EMSInsertMultipleResponseDTO();
    	String message = "FAILURE";
    	
    	try {
    		List<EMSModel> dtoList = insertData.getEmployeeDetailsRequestAll();
 
    		if (dtoList != null && !dtoList.isEmpty()) {
    			
    			List<EMSModel> entityList = new ArrayList<>();
    			
    			for (EMSModel dto : dtoList){
    				
    			EMSModel entity = new EMSModel();
    			 entity.setId(dto.getId());
    			 entity.setRid(dto.getRid());
    			 entity.setName(dto.getName());
    			 entity.setParentName(dto.getParentName());
    			 entity.setStreamName(dto.getStreamName());
    			 entity.setDOB(dto.getDOB());
    			 entity.setPOY(dto.getPOY());
    			 entity.setMobileNumber(dto.getMobileNumber());
    			 entity.setMailID(dto.getMailID());
    			 entity.setAddress(dto.getAddress());
    			 entity.setStatus(dto.getStatus());
    			 
    			 entityList.add(entity);
    			}
    			
    			List<EMSModel> savedEntities = emsRepository.saveAll(entityList);
                

                if (savedEntities != null && !savedEntities.isEmpty()) {
                    message = "SUCCESS";
                    response.setMessage(message);
                    response.setCode("200 OK");
                } else {
                    response.setMessage("Insert failed");
                    response.setCode("500 INTERNAL SERVER ERROR");
                }
    			
    		}else {
    			response.setMessage("Input list is null or empty");
                response.setCode("400 BAD REQUEST");
    		}
    	}catch (Exception e) {
    		e.printStackTrace();
    		response.setMessage("Exception occurred");
            response.setCode("500 INTERNAL SERVER ERROR");
    	}
    	return response;
    }
    
//UPDATE
    public EMSUpdateResponseDTO updateEmployeeDetails(EMSUpdateRequestDTO insertData) {
    	EMSUpdateResponseDTO response =new EMSUpdateResponseDTO();
    	List<EMSModel> saveEntities =  new ArrayList<>();
    	try {
    		Optional<EMSModel> dbResponse = emsRepository.findById(insertData.getId());
    		if(dbResponse.isPresent()) {
    			EMSModel entity = new EMSModel();
    			
    			if(insertData.getId()!=null && insertData.getRid()!=null) {
    			
    				entity.setId(dbResponse.get().getId());
    				entity.setRid(insertData.getRid());
    				entity.setName(dbResponse.get().getName());
    				entity.setParentName(dbResponse.get().getParentName());
    				entity.setStreamName(dbResponse.get().getStreamName());
    				entity.setDOB(dbResponse.get().getDOB());
    				entity.setPOY(dbResponse.get().getPOY());
    				entity.setMobileNumber(dbResponse.get().getMobileNumber());
    				entity.setMailID(dbResponse.get().getMailID());
    				entity.setAddress(dbResponse.get().getAddress());
    				entity.setStatus(dbResponse.get().getStatus());
    				
    				saveEntities.add(entity);
    				
    				
    			}else if(insertData.getId()!=null && insertData.getName()!=null) {
    				entity.setId(dbResponse.get().getId());
    				entity.setRid(dbResponse.get().getRid());
    				entity.setName(insertData.getName());
    				entity.setParentName(dbResponse.get().getParentName());
    				entity.setStreamName(dbResponse.get().getStreamName());
    				entity.setDOB(dbResponse.get().getDOB());
    				entity.setPOY(dbResponse.get().getPOY());
    				entity.setMobileNumber(dbResponse.get().getMobileNumber());
    				entity.setMailID(dbResponse.get().getMailID());
    				entity.setAddress(dbResponse.get().getAddress());
    				entity.setStatus(dbResponse.get().getStatus());
    				
    				saveEntities.add(entity);
    			}else if(insertData.getId()!=null && insertData.getParentName()!=null) {
    				entity.setId(dbResponse.get().getId());
    				entity.setRid(dbResponse.get().getRid());
    				entity.setName(dbResponse.get().getName());
    				entity.setParentName(insertData);
    				entity.setStreamName(dbResponse.get().getStreamName());
    				entity.setDOB(dbResponse.get().getDOB());
    				entity.setPOY(dbResponse.get().getPOY());
    				entity.setMobileNumber(dbResponse.get().getMobileNumber());
    				entity.setMailID(dbResponse.get().getMailID());
    				entity.setAddress(dbResponse.get().getAddress());
    				entity.setStatus(dbResponse.get().getStatus());
    				
    				saveEntities.add(entity);
    			}else if(insertData.getId()!=null && insertData.getStreamName()!=null) {
    				
    			}else if(insertData.getId()!=null && insertData.getDOB()!=null) {
    				
    			}else if(insertData.getId()!=null && insertData.getPOY()!=null) {
    				
    			}else if(insertData.getId()!=null && insertData.getMobileNumber()!=null) {
    				
    			}else if(insertData.getId()!=null && insertData.getMailID()!=null) {
    				
    			}else if(insertData.getId()!=null && insertData.getAddress()!=null) {
    				
    			}else (insertData.getId()!=null && insertData.getStatus()!=null) {
    				
    			}
    			
    		}
    	}catch() {
    		
    	}
    }
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2038)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2243)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3278)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3055)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:540)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:132)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:94)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:91)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:158)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)

!ENTRY org.eclipse.jdt.ui 4 2 2025-06-10 23:49:29.378
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2038)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2243)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3278)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3055)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:540)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:132)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:94)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:91)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:158)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)

!ENTRY org.eclipse.jdt.ui 4 0 2025-06-10 23:49:29.381
!MESSAGE Error in JDT Core during reconcile
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2038)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2243)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3278)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3055)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:540)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:132)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:94)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:91)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:158)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)

!ENTRY org.eclipse.jdt.core 4 4 2025-06-10 23:49:29.413
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package com.example.EMSbackend.Service;

import java.util.ArrayList;
import java.util.List;
import java.util.Optional;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import com.example.EMSbackend.DTO.EMSGetAllDTO;
import com.example.EMSbackend.DTO.EMSInsertMultipleRequestDTO;
import com.example.EMSbackend.DTO.EMSInsertMultipleResponseDTO;
import com.example.EMSbackend.DTO.EMSInsertSingleRequestDTO;
import com.example.EMSbackend.DTO.EMSInsertSingleResponseDTO;
import com.example.EMSbackend.DTO.EMSUpdateRequestDTO;
import com.example.EMSbackend.DTO.EMSUpdateResponseDTO;
import com.example.EMSbackend.Model.EMSModel;
import com.example.EMSbackend.Repository.EMSRepository;

import lombok.extern.slf4j.Slf4j;

@Slf4j
@Service
public class EMSService {

	@Autowired
	private EMSRepository emsRepository;
	
	
//GET_ALL_EMPLOYEE_DETAILS
    public EMSGetAllDTO getEmployeeDetailsAll() {
    	EMSGetAllDTO response = new EMSGetAllDTO();
    
    	
    	//try { 	
    	List<EMSModel> modelDetails = (List<EMSModel>) emsRepository.findAll();
    	response.setEmployeeDetailsAll(modelDetails);
    	
    	/*if(modelDetails!=null) {
    		response.setEmployeeDetailsAll(modelDetails);
    	}
    	else {
    		System.out.println("Employee not found");
    		//log.info("Service response not found");
    	}
    	
    	}catch (Exception e) {
            System.out.println("Error while fetching employee list: " + e.getMessage());
            e.printStackTrace();
        }*/
    	    
    	return response;
    }
    
//INSERT_ALL_EMPLOYEE_DETAILS(SINGLE_DATA/NOT_LIST)
    public EMSInsertSingleResponseDTO insertEmployeeDetails(EMSInsertSingleRequestDTO requestData) {
    	EMSInsertSingleResponseDTO response = new EMSInsertSingleResponseDTO();
    	String message = "FAILURE";
    	List<EMSModel> entityList = new ArrayList<>();
  
    	try {
    	if (requestData != null) {
    		EMSModel entity = new EMSModel();
    		entity.setId(requestData.getId());
			entity.setRid(requestData.getRid());
			entity.setName(requestData.getName());
			entity.setParentName(requestData.getParentName());
			entity.setStreamName(requestData.getStreamName());
			entity.setDOB(requestData.getDOB());
			entity.setPOY(requestData.getPOY());
			entity.setMobileNumber(requestData.getMobileNumber());
			entity.setMailID(requestData.getMailID());
			entity.setAddress(requestData.getAddress());
			entity.setStatus(requestData.getStatus());
			 
			c
   
			List<EMSModel> savedEntities = emsRepository.saveAll(entityList);
			if (savedEntities != null && !savedEntities.isEmpty()) {
	            message = "SUCCESS";
	            response.setMessage(message);
	            response.setCode("200 OK");
	        } else {
	            response.setMessage("Insert failed");
	            response.setCode("500 INTERNAL SERVER ERROR");
	        }
    	}else {
            response.setMessage("Input list is null or empty");
            response.setCode("400 BAD REQUEST");
        }
    	}catch (Exception e) {
    		e.printStackTrace();
    		response.setMessage("Exception occurred");
            response.setCode("500 INTERNAL SERVER ERROR");
    	}
  
    	return response;
    	
    }
    
    
   
//INSERT_ALL_EMPLOYEE_DETAILS(MULTIPLE/LIST)
    
    public EMSInsertMultipleResponseDTO insertEmployeeDetailsAll(EMSInsertMultipleRequestDTO insertData) {
    	EMSInsertMultipleResponseDTO response = new EMSInsertMultipleResponseDTO();
    	String message = "FAILURE";
    	
    	try {
    		List<EMSModel> dtoList = insertData.getEmployeeDetailsRequestAll();
 
    		if (dtoList != null && !dtoList.isEmpty()) {
    			
    			List<EMSModel> entityList = new ArrayList<>();
    			
    			for (EMSModel dto : dtoList){
    				
    			EMSModel entity = new EMSModel();
    			 entity.setId(dto.getId());
    			 entity.setRid(dto.getRid());
    			 entity.setName(dto.getName());
    			 entity.setParentName(dto.getParentName());
    			 entity.setStreamName(dto.getStreamName());
    			 entity.setDOB(dto.getDOB());
    			 entity.setPOY(dto.getPOY());
    			 entity.setMobileNumber(dto.getMobileNumber());
    			 entity.setMailID(dto.getMailID());
    			 entity.setAddress(dto.getAddress());
    			 entity.setStatus(dto.getStatus());
    			 
    			 entityList.add(entity);
    			}
    			
    			List<EMSModel> savedEntities = emsRepository.saveAll(entityList);
                

                if (savedEntities != null && !savedEntities.isEmpty()) {
                    message = "SUCCESS";
                    response.setMessage(message);
                    response.setCode("200 OK");
                } else {
                    response.setMessage("Insert failed");
                    response.setCode("500 INTERNAL SERVER ERROR");
                }
    			
    		}else {
    			response.setMessage("Input list is null or empty");
                response.setCode("400 BAD REQUEST");
    		}
    	}catch (Exception e) {
    		e.printStackTrace();
    		response.setMessage("Exception occurred");
            response.setCode("500 INTERNAL SERVER ERROR");
    	}
    	return response;
    }
    
//UPDATE
    public EMSUpdateResponseDTO updateEmployeeDetails(EMSUpdateRequestDTO insertData) {
    	EMSUpdateResponseDTO response =new EMSUpdateResponseDTO();
    	List<EMSModel> saveEntities =  new ArrayList<>();
    	try {
    		Optional<EMSModel> dbResponse = emsRepository.findById(insertData.getId());
    		if(dbResponse.isPresent()) {
    			EMSModel entity = new EMSModel();
    			
    			if(insertData.getId()!=null && insertData.getRid()!=null) {
    			
    				entity.setId(dbResponse.get().getId());
    				entity.setRid(insertData.getRid());
    				entity.setName(dbResponse.get().getName());
    				entity.setParentName(dbResponse.get().getParentName());
    				entity.setStreamName(dbResponse.get().getStreamName());
    				entity.setDOB(dbResponse.get().getDOB());
    				entity.setPOY(dbResponse.get().getPOY());
    				entity.setMobileNumber(dbResponse.get().getMobileNumber());
    				entity.setMailID(dbResponse.get().getMailID());
    				entity.setAddress(dbResponse.get().getAddress());
    				entity.setStatus(dbResponse.get().getStatus());
    				
    				saveEntities.add(entity);
    				
    				
    			}else if(insertData.getId()!=null && insertData.getName()!=null) {
    				entity.setId(dbResponse.get().getId());
    				entity.setRid(dbResponse.get().getRid());
    				entity.setName(insertData.getName());
    				entity.setParentName(dbResponse.get().getParentName());
    				entity.setStreamName(dbResponse.get().getStreamName());
    				entity.setDOB(dbResponse.get().getDOB());
    				entity.setPOY(dbResponse.get().getPOY());
    				entity.setMobileNumber(dbResponse.get().getMobileNumber());
    				entity.setMailID(dbResponse.get().getMailID());
    				entity.setAddress(dbResponse.get().getAddress());
    				entity.setStatus(dbResponse.get().getStatus());
    				
    				saveEntities.add(entity);
    			}else if(insertData.getId()!=null && insertData.getParentName()!=null) {
    				entity.setId(dbResponse.get().getId());
    				entity.setRid(dbResponse.get().getRid());
    				entity.setName(dbResponse.get().getName());
    				entity.setParentName(insertData);
    				entity.setStreamName(dbResponse.get().getStreamName());
    				entity.setDOB(dbResponse.get().getDOB());
    				entity.setPOY(dbResponse.get().getPOY());
    				entity.setMobileNumber(dbResponse.get().getMobileNumber());
    				entity.setMailID(dbResponse.get().getMailID());
    				entity.setAddress(dbResponse.get().getAddress());
    				entity.setStatus(dbResponse.get().getStatus());
    				
    				saveEntities.add(entity);
    			}else if(insertData.getId()!=null && insertData.getStreamName()!=null) {
    				
    			}else if(insertData.getId()!=null && insertData.getDOB()!=null) {
    				
    			}else if(insertData.getId()!=null && insertData.getPOY()!=null) {
    				
    			}else if(insertData.getId()!=null && insertData.getMobileNumber()!=null) {
    				
    			}else if(insertData.getId()!=null && insertData.getMailID()!=null) {
    				
    			}else if(insertData.getId()!=null && insertData.getAddress()!=null) {
    				
    			}else (insertData.getId()!=null && insertData.getStatus()!=null) {
    				
    			}
    			
    		}
    	}catch() {
    		
    	}
    }
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2038)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2243)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3278)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3055)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:189)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2025-06-10 23:49:29.423
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2038)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2243)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3278)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3055)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:189)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2025-06-10 23:49:29.426
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2038)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2243)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3278)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3055)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:189)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core 4 4 2025-06-10 23:49:30.085
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package com.example.EMSbackend.Service;

import java.util.ArrayList;
import java.util.List;
import java.util.Optional;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import com.example.EMSbackend.DTO.EMSGetAllDTO;
import com.example.EMSbackend.DTO.EMSInsertMultipleRequestDTO;
import com.example.EMSbackend.DTO.EMSInsertMultipleResponseDTO;
import com.example.EMSbackend.DTO.EMSInsertSingleRequestDTO;
import com.example.EMSbackend.DTO.EMSInsertSingleResponseDTO;
import com.example.EMSbackend.DTO.EMSUpdateRequestDTO;
import com.example.EMSbackend.DTO.EMSUpdateResponseDTO;
import com.example.EMSbackend.Model.EMSModel;
import com.example.EMSbackend.Repository.EMSRepository;

import lombok.extern.slf4j.Slf4j;

@Slf4j
@Service
public class EMSService {

	@Autowired
	private EMSRepository emsRepository;
	
	
//GET_ALL_EMPLOYEE_DETAILS
    public EMSGetAllDTO getEmployeeDetailsAll() {
    	EMSGetAllDTO response = new EMSGetAllDTO();
    
    	
    	//try { 	
    	List<EMSModel> modelDetails = (List<EMSModel>) emsRepository.findAll();
    	response.setEmployeeDetailsAll(modelDetails);
    	
    	/*if(modelDetails!=null) {
    		response.setEmployeeDetailsAll(modelDetails);
    	}
    	else {
    		System.out.println("Employee not found");
    		//log.info("Service response not found");
    	}
    	
    	}catch (Exception e) {
            System.out.println("Error while fetching employee list: " + e.getMessage());
            e.printStackTrace();
        }*/
    	    
    	return response;
    }
    
//INSERT_ALL_EMPLOYEE_DETAILS(SINGLE_DATA/NOT_LIST)
    public EMSInsertSingleResponseDTO insertEmployeeDetails(EMSInsertSingleRequestDTO requestData) {
    	EMSInsertSingleResponseDTO response = new EMSInsertSingleResponseDTO();
    	String message = "FAILURE";
    	List<EMSModel> entityList = new ArrayList<>();
  
    	try {
    	if (requestData != null) {
    		EMSModel entity = new EMSModel();
    		entity.setId(requestData.getId());
			entity.setRid(requestData.getRid());
			entity.setName(requestData.getName());
			entity.setParentName(requestData.getParentName());
			entity.setStreamName(requestData.getStreamName());
			entity.setDOB(requestData.getDOB());
			entity.setPOY(requestData.getPOY());
			entity.setMobileNumber(requestData.getMobileNumber());
			entity.setMailID(requestData.getMailID());
			entity.setAddress(requestData.getAddress());
			entity.setStatus(requestData.getStatus());
			 
			c
   
			List<EMSModel> savedEntities = emsRepository.saveAll(entityList);
			if (savedEntities != null && !savedEntities.isEmpty()) {
	            message = "SUCCESS";
	            response.setMessage(message);
	            response.setCode("200 OK");
	        } else {
	            response.setMessage("Insert failed");
	            response.setCode("500 INTERNAL SERVER ERROR");
	        }
    	}else {
            response.setMessage("Input list is null or empty");
            response.setCode("400 BAD REQUEST");
        }
    	}catch (Exception e) {
    		e.printStackTrace();
    		response.setMessage("Exception occurred");
            response.setCode("500 INTERNAL SERVER ERROR");
    	}
  
    	return response;
    	
    }
    
    
   
//INSERT_ALL_EMPLOYEE_DETAILS(MULTIPLE/LIST)
    
    public EMSInsertMultipleResponseDTO insertEmployeeDetailsAll(EMSInsertMultipleRequestDTO insertData) {
    	EMSInsertMultipleResponseDTO response = new EMSInsertMultipleResponseDTO();
    	String message = "FAILURE";
    	
    	try {
    		List<EMSModel> dtoList = insertData.getEmployeeDetailsRequestAll();
 
    		if (dtoList != null && !dtoList.isEmpty()) {
    			
    			List<EMSModel> entityList = new ArrayList<>();
    			
    			for (EMSModel dto : dtoList){
    				
    			EMSModel entity = new EMSModel();
    			 entity.setId(dto.getId());
    			 entity.setRid(dto.getRid());
    			 entity.setName(dto.getName());
    			 entity.setParentName(dto.getParentName());
    			 entity.setStreamName(dto.getStreamName());
    			 entity.setDOB(dto.getDOB());
    			 entity.setPOY(dto.getPOY());
    			 entity.setMobileNumber(dto.getMobileNumber());
    			 entity.setMailID(dto.getMailID());
    			 entity.setAddress(dto.getAddress());
    			 entity.setStatus(dto.getStatus());
    			 
    			 entityList.add(entity);
    			}
    			
    			List<EMSModel> savedEntities = emsRepository.saveAll(entityList);
                

                if (savedEntities != null && !savedEntities.isEmpty()) {
                    message = "SUCCESS";
                    response.setMessage(message);
                    response.setCode("200 OK");
                } else {
                    response.setMessage("Insert failed");
                    response.setCode("500 INTERNAL SERVER ERROR");
                }
    			
    		}else {
    			response.setMessage("Input list is null or empty");
                response.setCode("400 BAD REQUEST");
    		}
    	}catch (Exception e) {
    		e.printStackTrace();
    		response.setMessage("Exception occurred");
            response.setCode("500 INTERNAL SERVER ERROR");
    	}
    	return response;
    }
    
//UPDATE
    public EMSUpdateResponseDTO updateEmployeeDetails(EMSUpdateRequestDTO insertData) {
    	EMSUpdateResponseDTO response =new EMSUpdateResponseDTO();
    	List<EMSModel> saveEntities =  new ArrayList<>();
    	try {
    		Optional<EMSModel> dbResponse = emsRepository.findById(insertData.getId());
    		if(dbResponse.isPresent()) {
    			EMSModel entity = new EMSModel();
    			
    			if(insertData.getId()!=null && insertData.getRid()!=null) {
    			
    				entity.setId(dbResponse.get().getId());
    				entity.setRid(insertData.getRid());
    				entity.setName(dbResponse.get().getName());
    				entity.setParentName(dbResponse.get().getParentName());
    				entity.setStreamName(dbResponse.get().getStreamName());
    				entity.setDOB(dbResponse.get().getDOB());
    				entity.setPOY(dbResponse.get().getPOY());
    				entity.setMobileNumber(dbResponse.get().getMobileNumber());
    				entity.setMailID(dbResponse.get().getMailID());
    				entity.setAddress(dbResponse.get().getAddress());
    				entity.setStatus(dbResponse.get().getStatus());
    				
    				saveEntities.add(entity);
    				
    				
    			}else if(insertData.getId()!=null && insertData.getName()!=null) {
    				entity.setId(dbResponse.get().getId());
    				entity.setRid(dbResponse.get().getRid());
    				entity.setName(insertData.getName());
    				entity.setParentName(dbResponse.get().getParentName());
    				entity.setStreamName(dbResponse.get().getStreamName());
    				entity.setDOB(dbResponse.get().getDOB());
    				entity.setPOY(dbResponse.get().getPOY());
    				entity.setMobileNumber(dbResponse.get().getMobileNumber());
    				entity.setMailID(dbResponse.get().getMailID());
    				entity.setAddress(dbResponse.get().getAddress());
    				entity.setStatus(dbResponse.get().getStatus());
    				
    				saveEntities.add(entity);
    			}else if(insertData.getId()!=null && insertData.getParentName()!=null) {
    				entity.setId(dbResponse.get().getId());
    				entity.setRid(dbResponse.get().getRid());
    				entity.setName(dbResponse.get().getName());
    				entity.setParentName(insertData.);
    				entity.setStreamName(dbResponse.get().getStreamName());
    				entity.setDOB(dbResponse.get().getDOB());
    				entity.setPOY(dbResponse.get().getPOY());
    				entity.setMobileNumber(dbResponse.get().getMobileNumber());
    				entity.setMailID(dbResponse.get().getMailID());
    				entity.setAddress(dbResponse.get().getAddress());
    				entity.setStatus(dbResponse.get().getStatus());
    				
    				saveEntities.add(entity);
    			}else if(insertData.getId()!=null && insertData.getStreamName()!=null) {
    				
    			}else if(insertData.getId()!=null && insertData.getDOB()!=null) {
    				
    			}else if(insertData.getId()!=null && insertData.getPOY()!=null) {
    				
    			}else if(insertData.getId()!=null && insertData.getMobileNumber()!=null) {
    				
    			}else if(insertData.getId()!=null && insertData.getMailID()!=null) {
    				
    			}else if(insertData.getId()!=null && insertData.getAddress()!=null) {
    				
    			}else (insertData.getId()!=null && insertData.getStatus()!=null) {
    				
    			}
    			
    		}
    	}catch() {
    		
    	}
    }
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2038)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2243)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3278)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3055)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:540)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:132)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:94)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:91)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:158)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)

!ENTRY org.eclipse.jdt.ui 4 2 2025-06-10 23:49:30.091
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2038)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2243)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3278)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3055)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:540)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:132)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:94)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:91)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:158)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)

!ENTRY org.eclipse.jdt.ui 4 0 2025-06-10 23:49:30.095
!MESSAGE Error in JDT Core during reconcile
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2038)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2243)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3278)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3055)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:540)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:132)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:94)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:91)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:158)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)

!ENTRY org.eclipse.jdt.core 4 4 2025-06-10 23:49:30.240
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package com.example.EMSbackend.Service;

import java.util.ArrayList;
import java.util.List;
import java.util.Optional;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import com.example.EMSbackend.DTO.EMSGetAllDTO;
import com.example.EMSbackend.DTO.EMSInsertMultipleRequestDTO;
import com.example.EMSbackend.DTO.EMSInsertMultipleResponseDTO;
import com.example.EMSbackend.DTO.EMSInsertSingleRequestDTO;
import com.example.EMSbackend.DTO.EMSInsertSingleResponseDTO;
import com.example.EMSbackend.DTO.EMSUpdateRequestDTO;
import com.example.EMSbackend.DTO.EMSUpdateResponseDTO;
import com.example.EMSbackend.Model.EMSModel;
import com.example.EMSbackend.Repository.EMSRepository;

import lombok.extern.slf4j.Slf4j;

@Slf4j
@Service
public class EMSService {

	@Autowired
	private EMSRepository emsRepository;
	
	
//GET_ALL_EMPLOYEE_DETAILS
    public EMSGetAllDTO getEmployeeDetailsAll() {
    	EMSGetAllDTO response = new EMSGetAllDTO();
    
    	
    	//try { 	
    	List<EMSModel> modelDetails = (List<EMSModel>) emsRepository.findAll();
    	response.setEmployeeDetailsAll(modelDetails);
    	
    	/*if(modelDetails!=null) {
    		response.setEmployeeDetailsAll(modelDetails);
    	}
    	else {
    		System.out.println("Employee not found");
    		//log.info("Service response not found");
    	}
    	
    	}catch (Exception e) {
            System.out.println("Error while fetching employee list: " + e.getMessage());
            e.printStackTrace();
        }*/
    	    
    	return response;
    }
    
//INSERT_ALL_EMPLOYEE_DETAILS(SINGLE_DATA/NOT_LIST)
    public EMSInsertSingleResponseDTO insertEmployeeDetails(EMSInsertSingleRequestDTO requestData) {
    	EMSInsertSingleResponseDTO response = new EMSInsertSingleResponseDTO();
    	String message = "FAILURE";
    	List<EMSModel> entityList = new ArrayList<>();
  
    	try {
    	if (requestData != null) {
    		EMSModel entity = new EMSModel();
    		entity.setId(requestData.getId());
			entity.setRid(requestData.getRid());
			entity.setName(requestData.getName());
			entity.setParentName(requestData.getParentName());
			entity.setStreamName(requestData.getStreamName());
			entity.setDOB(requestData.getDOB());
			entity.setPOY(requestData.getPOY());
			entity.setMobileNumber(requestData.getMobileNumber());
			entity.setMailID(requestData.getMailID());
			entity.setAddress(requestData.getAddress());
			entity.setStatus(requestData.getStatus());
			 
			c
   
			List<EMSModel> savedEntities = emsRepository.saveAll(entityList);
			if (savedEntities != null && !savedEntities.isEmpty()) {
	            message = "SUCCESS";
	            response.setMessage(message);
	            response.setCode("200 OK");
	        } else {
	            response.setMessage("Insert failed");
	            response.setCode("500 INTERNAL SERVER ERROR");
	        }
    	}else {
            response.setMessage("Input list is null or empty");
            response.setCode("400 BAD REQUEST");
        }
    	}catch (Exception e) {
    		e.printStackTrace();
    		response.setMessage("Exception occurred");
            response.setCode("500 INTERNAL SERVER ERROR");
    	}
  
    	return response;
    	
    }
    
    
   
//INSERT_ALL_EMPLOYEE_DETAILS(MULTIPLE/LIST)
    
    public EMSInsertMultipleResponseDTO insertEmployeeDetailsAll(EMSInsertMultipleRequestDTO insertData) {
    	EMSInsertMultipleResponseDTO response = new EMSInsertMultipleResponseDTO();
    	String message = "FAILURE";
    	
    	try {
    		List<EMSModel> dtoList = insertData.getEmployeeDetailsRequestAll();
 
    		if (dtoList != null && !dtoList.isEmpty()) {
    			
    			List<EMSModel> entityList = new ArrayList<>();
    			
    			for (EMSModel dto : dtoList){
    				
    			EMSModel entity = new EMSModel();
    			 entity.setId(dto.getId());
    			 entity.setRid(dto.getRid());
    			 entity.setName(dto.getName());
    			 entity.setParentName(dto.getParentName());
    			 entity.setStreamName(dto.getStreamName());
    			 entity.setDOB(dto.getDOB());
    			 entity.setPOY(dto.getPOY());
    			 entity.setMobileNumber(dto.getMobileNumber());
    			 entity.setMailID(dto.getMailID());
    			 entity.setAddress(dto.getAddress());
    			 entity.setStatus(dto.getStatus());
    			 
    			 entityList.add(entity);
    			}
    			
    			List<EMSModel> savedEntities = emsRepository.saveAll(entityList);
                

                if (savedEntities != null && !savedEntities.isEmpty()) {
                    message = "SUCCESS";
                    response.setMessage(message);
                    response.setCode("200 OK");
                } else {
                    response.setMessage("Insert failed");
                    response.setCode("500 INTERNAL SERVER ERROR");
                }
    			
    		}else {
    			response.setMessage("Input list is null or empty");
                response.setCode("400 BAD REQUEST");
    		}
    	}catch (Exception e) {
    		e.printStackTrace();
    		response.setMessage("Exception occurred");
            response.setCode("500 INTERNAL SERVER ERROR");
    	}
    	return response;
    }
    
//UPDATE
    public EMSUpdateResponseDTO updateEmployeeDetails(EMSUpdateRequestDTO insertData) {
    	EMSUpdateResponseDTO response =new EMSUpdateResponseDTO();
    	List<EMSModel> saveEntities =  new ArrayList<>();
    	try {
    		Optional<EMSModel> dbResponse = emsRepository.findById(insertData.getId());
    		if(dbResponse.isPresent()) {
    			EMSModel entity = new EMSModel();
    			
    			if(insertData.getId()!=null && insertData.getRid()!=null) {
    			
    				entity.setId(dbResponse.get().getId());
    				entity.setRid(insertData.getRid());
    				entity.setName(dbResponse.get().getName());
    				entity.setParentName(dbResponse.get().getParentName());
    				entity.setStreamName(dbResponse.get().getStreamName());
    				entity.setDOB(dbResponse.get().getDOB());
    				entity.setPOY(dbResponse.get().getPOY());
    				entity.setMobileNumber(dbResponse.get().getMobileNumber());
    				entity.setMailID(dbResponse.get().getMailID());
    				entity.setAddress(dbResponse.get().getAddress());
    				entity.setStatus(dbResponse.get().getStatus());
    				
    				saveEntities.add(entity);
    				
    				
    			}else if(insertData.getId()!=null && insertData.getName()!=null) {
    				entity.setId(dbResponse.get().getId());
    				entity.setRid(dbResponse.get().getRid());
    				entity.setName(insertData.getName());
    				entity.setParentName(dbResponse.get().getParentName());
    				entity.setStreamName(dbResponse.get().getStreamName());
    				entity.setDOB(dbResponse.get().getDOB());
    				entity.setPOY(dbResponse.get().getPOY());
    				entity.setMobileNumber(dbResponse.get().getMobileNumber());
    				entity.setMailID(dbResponse.get().getMailID());
    				entity.setAddress(dbResponse.get().getAddress());
    				entity.setStatus(dbResponse.get().getStatus());
    				
    				saveEntities.add(entity);
    			}else if(insertData.getId()!=null && insertData.getParentName()!=null) {
    				entity.setId(dbResponse.get().getId());
    				entity.setRid(dbResponse.get().getRid());
    				entity.setName(dbResponse.get().getName());
    				entity.setParentName(insertData.);
    				entity.setStreamName(dbResponse.get().getStreamName());
    				entity.setDOB(dbResponse.get().getDOB());
    				entity.setPOY(dbResponse.get().getPOY());
    				entity.setMobileNumber(dbResponse.get().getMobileNumber());
    				entity.setMailID(dbResponse.get().getMailID());
    				entity.setAddress(dbResponse.get().getAddress());
    				entity.setStatus(dbResponse.get().getStatus());
    				
    				saveEntities.add(entity);
    			}else if(insertData.getId()!=null && insertData.getStreamName()!=null) {
    				
    			}else if(insertData.getId()!=null && insertData.getDOB()!=null) {
    				
    			}else if(insertData.getId()!=null && insertData.getPOY()!=null) {
    				
    			}else if(insertData.getId()!=null && insertData.getMobileNumber()!=null) {
    				
    			}else if(insertData.getId()!=null && insertData.getMailID()!=null) {
    				
    			}else if(insertData.getId()!=null && insertData.getAddress()!=null) {
    				
    			}else (insertData.getId()!=null && insertData.getStatus()!=null) {
    				
    			}
    			
    		}
    	}catch() {
    		
    	}
    }
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2038)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2243)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3278)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3055)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2025-06-10 23:49:30.248
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2038)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2243)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3278)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3055)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2025-06-10 23:49:30.251
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2038)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2243)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3278)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3055)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core 4 4 2025-06-10 23:49:33.785
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package com.example.EMSbackend.Service;

import java.util.ArrayList;
import java.util.List;
import java.util.Optional;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import com.example.EMSbackend.DTO.EMSGetAllDTO;
import com.example.EMSbackend.DTO.EMSInsertMultipleRequestDTO;
import com.example.EMSbackend.DTO.EMSInsertMultipleResponseDTO;
import com.example.EMSbackend.DTO.EMSInsertSingleRequestDTO;
import com.example.EMSbackend.DTO.EMSInsertSingleResponseDTO;
import com.example.EMSbackend.DTO.EMSUpdateRequestDTO;
import com.example.EMSbackend.DTO.EMSUpdateResponseDTO;
import com.example.EMSbackend.Model.EMSModel;
import com.example.EMSbackend.Repository.EMSRepository;

import lombok.extern.slf4j.Slf4j;

@Slf4j
@Service
public class EMSService {

	@Autowired
	private EMSRepository emsRepository;
	
	
//GET_ALL_EMPLOYEE_DETAILS
    public EMSGetAllDTO getEmployeeDetailsAll() {
    	EMSGetAllDTO response = new EMSGetAllDTO();
    
    	
    	//try { 	
    	List<EMSModel> modelDetails = (List<EMSModel>) emsRepository.findAll();
    	response.setEmployeeDetailsAll(modelDetails);
    	
    	/*if(modelDetails!=null) {
    		response.setEmployeeDetailsAll(modelDetails);
    	}
    	else {
    		System.out.println("Employee not found");
    		//log.info("Service response not found");
    	}
    	
    	}catch (Exception e) {
            System.out.println("Error while fetching employee list: " + e.getMessage());
            e.printStackTrace();
        }*/
    	    
    	return response;
    }
    
//INSERT_ALL_EMPLOYEE_DETAILS(SINGLE_DATA/NOT_LIST)
    public EMSInsertSingleResponseDTO insertEmployeeDetails(EMSInsertSingleRequestDTO requestData) {
    	EMSInsertSingleResponseDTO response = new EMSInsertSingleResponseDTO();
    	String message = "FAILURE";
    	List<EMSModel> entityList = new ArrayList<>();
  
    	try {
    	if (requestData != null) {
    		EMSModel entity = new EMSModel();
    		entity.setId(requestData.getId());
			entity.setRid(requestData.getRid());
			entity.setName(requestData.getName());
			entity.setParentName(requestData.getParentName());
			entity.setStreamName(requestData.getStreamName());
			entity.setDOB(requestData.getDOB());
			entity.setPOY(requestData.getPOY());
			entity.setMobileNumber(requestData.getMobileNumber());
			entity.setMailID(requestData.getMailID());
			entity.setAddress(requestData.getAddress());
			entity.setStatus(requestData.getStatus());
			 
			c
   
			List<EMSModel> savedEntities = emsRepository.saveAll(entityList);
			if (savedEntities != null && !savedEntities.isEmpty()) {
	            message = "SUCCESS";
	            response.setMessage(message);
	            response.setCode("200 OK");
	        } else {
	            response.setMessage("Insert failed");
	            response.setCode("500 INTERNAL SERVER ERROR");
	        }
    	}else {
            response.setMessage("Input list is null or empty");
            response.setCode("400 BAD REQUEST");
        }
    	}catch (Exception e) {
    		e.printStackTrace();
    		response.setMessage("Exception occurred");
            response.setCode("500 INTERNAL SERVER ERROR");
    	}
  
    	return response;
    	
    }
    
    
   
//INSERT_ALL_EMPLOYEE_DETAILS(MULTIPLE/LIST)
    
    public EMSInsertMultipleResponseDTO insertEmployeeDetailsAll(EMSInsertMultipleRequestDTO insertData) {
    	EMSInsertMultipleResponseDTO response = new EMSInsertMultipleResponseDTO();
    	String message = "FAILURE";
    	
    	try {
    		List<EMSModel> dtoList = insertData.getEmployeeDetailsRequestAll();
 
    		if (dtoList != null && !dtoList.isEmpty()) {
    			
    			List<EMSModel> entityList = new ArrayList<>();
    			
    			for (EMSModel dto : dtoList){
    				
    			EMSModel entity = new EMSModel();
    			 entity.setId(dto.getId());
    			 entity.setRid(dto.getRid());
    			 entity.setName(dto.getName());
    			 entity.setParentName(dto.getParentName());
    			 entity.setStreamName(dto.getStreamName());
    			 entity.setDOB(dto.getDOB());
    			 entity.setPOY(dto.getPOY());
    			 entity.setMobileNumber(dto.getMobileNumber());
    			 entity.setMailID(dto.getMailID());
    			 entity.setAddress(dto.getAddress());
    			 entity.setStatus(dto.getStatus());
    			 
    			 entityList.add(entity);
    			}
    			
    			List<EMSModel> savedEntities = emsRepository.saveAll(entityList);
                

                if (savedEntities != null && !savedEntities.isEmpty()) {
                    message = "SUCCESS";
                    response.setMessage(message);
                    response.setCode("200 OK");
                } else {
                    response.setMessage("Insert failed");
                    response.setCode("500 INTERNAL SERVER ERROR");
                }
    			
    		}else {
    			response.setMessage("Input list is null or empty");
                response.setCode("400 BAD REQUEST");
    		}
    	}catch (Exception e) {
    		e.printStackTrace();
    		response.setMessage("Exception occurred");
            response.setCode("500 INTERNAL SERVER ERROR");
    	}
    	return response;
    }
    
//UPDATE
    public EMSUpdateResponseDTO updateEmployeeDetails(EMSUpdateRequestDTO insertData) {
    	EMSUpdateResponseDTO response =new EMSUpdateResponseDTO();
    	List<EMSModel> saveEntities =  new ArrayList<>();
    	try {
    		Optional<EMSModel> dbResponse = emsRepository.findById(insertData.getId());
    		if(dbResponse.isPresent()) {
    			EMSModel entity = new EMSModel();
    			
    			if(insertData.getId()!=null && insertData.getRid()!=null) {
    			
    				entity.setId(dbResponse.get().getId());
    				entity.setRid(insertData.getRid());
    				entity.setName(dbResponse.get().getName());
    				entity.setParentName(dbResponse.get().getParentName());
    				entity.setStreamName(dbResponse.get().getStreamName());
    				entity.setDOB(dbResponse.get().getDOB());
    				entity.setPOY(dbResponse.get().getPOY());
    				entity.setMobileNumber(dbResponse.get().getMobileNumber());
    				entity.setMailID(dbResponse.get().getMailID());
    				entity.setAddress(dbResponse.get().getAddress());
    				entity.setStatus(dbResponse.get().getStatus());
    				
    				saveEntities.add(entity);
    				
    				
    			}else if(insertData.getId()!=null && insertData.getName()!=null) {
    				entity.setId(dbResponse.get().getId());
    				entity.setRid(dbResponse.get().getRid());
    				entity.setName(insertData.getName());
    				entity.setParentName(dbResponse.get().getParentName());
    				entity.setStreamName(dbResponse.get().getStreamName());
    				entity.setDOB(dbResponse.get().getDOB());
    				entity.setPOY(dbResponse.get().getPOY());
    				entity.setMobileNumber(dbResponse.get().getMobileNumber());
    				entity.setMailID(dbResponse.get().getMailID());
    				entity.setAddress(dbResponse.get().getAddress());
    				entity.setStatus(dbResponse.get().getStatus());
    				
    				saveEntities.add(entity);
    			}else if(insertData.getId()!=null && insertData.getParentName()!=null) {
    				entity.setId(dbResponse.get().getId());
    				entity.setRid(dbResponse.get().getRid());
    				entity.setName(dbResponse.get().getName());
    				entity.setParentName(insertData.get);
    				entity.setStreamName(dbResponse.get().getStreamName());
    				entity.setDOB(dbResponse.get().getDOB());
    				entity.setPOY(dbResponse.get().getPOY());
    				entity.setMobileNumber(dbResponse.get().getMobileNumber());
    				entity.setMailID(dbResponse.get().getMailID());
    				entity.setAddress(dbResponse.get().getAddress());
    				entity.setStatus(dbResponse.get().getStatus());
    				
    				saveEntities.add(entity);
    			}else if(insertData.getId()!=null && insertData.getStreamName()!=null) {
    				
    			}else if(insertData.getId()!=null && insertData.getDOB()!=null) {
    				
    			}else if(insertData.getId()!=null && insertData.getPOY()!=null) {
    				
    			}else if(insertData.getId()!=null && insertData.getMobileNumber()!=null) {
    				
    			}else if(insertData.getId()!=null && insertData.getMailID()!=null) {
    				
    			}else if(insertData.getId()!=null && insertData.getAddress()!=null) {
    				
    			}else (insertData.getId()!=null && insertData.getStatus()!=null) {
    				
    			}
    			
    		}
    	}catch() {
    		
    	}
    }
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2038)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2243)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3278)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3055)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:540)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:132)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:94)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:91)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:158)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)

!ENTRY org.eclipse.jdt.ui 4 2 2025-06-10 23:49:33.789
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2038)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2243)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3278)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3055)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:540)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:132)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:94)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:91)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:158)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)

!ENTRY org.eclipse.jdt.ui 4 0 2025-06-10 23:49:33.791
!MESSAGE Error in JDT Core during reconcile
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2038)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2243)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3278)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3055)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:540)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:132)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:94)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:91)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:158)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)

!ENTRY org.eclipse.jdt.core 4 4 2025-06-10 23:49:33.889
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package com.example.EMSbackend.Service;

import java.util.ArrayList;
import java.util.List;
import java.util.Optional;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import com.example.EMSbackend.DTO.EMSGetAllDTO;
import com.example.EMSbackend.DTO.EMSInsertMultipleRequestDTO;
import com.example.EMSbackend.DTO.EMSInsertMultipleResponseDTO;
import com.example.EMSbackend.DTO.EMSInsertSingleRequestDTO;
import com.example.EMSbackend.DTO.EMSInsertSingleResponseDTO;
import com.example.EMSbackend.DTO.EMSUpdateRequestDTO;
import com.example.EMSbackend.DTO.EMSUpdateResponseDTO;
import com.example.EMSbackend.Model.EMSModel;
import com.example.EMSbackend.Repository.EMSRepository;

import lombok.extern.slf4j.Slf4j;

@Slf4j
@Service
public class EMSService {

	@Autowired
	private EMSRepository emsRepository;
	
	
//GET_ALL_EMPLOYEE_DETAILS
    public EMSGetAllDTO getEmployeeDetailsAll() {
    	EMSGetAllDTO response = new EMSGetAllDTO();
    
    	
    	//try { 	
    	List<EMSModel> modelDetails = (List<EMSModel>) emsRepository.findAll();
    	response.setEmployeeDetailsAll(modelDetails);
    	
    	/*if(modelDetails!=null) {
    		response.setEmployeeDetailsAll(modelDetails);
    	}
    	else {
    		System.out.println("Employee not found");
    		//log.info("Service response not found");
    	}
    	
    	}catch (Exception e) {
            System.out.println("Error while fetching employee list: " + e.getMessage());
            e.printStackTrace();
        }*/
    	    
    	return response;
    }
    
//INSERT_ALL_EMPLOYEE_DETAILS(SINGLE_DATA/NOT_LIST)
    public EMSInsertSingleResponseDTO insertEmployeeDetails(EMSInsertSingleRequestDTO requestData) {
    	EMSInsertSingleResponseDTO response = new EMSInsertSingleResponseDTO();
    	String message = "FAILURE";
    	List<EMSModel> entityList = new ArrayList<>();
  
    	try {
    	if (requestData != null) {
    		EMSModel entity = new EMSModel();
    		entity.setId(requestData.getId());
			entity.setRid(requestData.getRid());
			entity.setName(requestData.getName());
			entity.setParentName(requestData.getParentName());
			entity.setStreamName(requestData.getStreamName());
			entity.setDOB(requestData.getDOB());
			entity.setPOY(requestData.getPOY());
			entity.setMobileNumber(requestData.getMobileNumber());
			entity.setMailID(requestData.getMailID());
			entity.setAddress(requestData.getAddress());
			entity.setStatus(requestData.getStatus());
			 
			c
   
			List<EMSModel> savedEntities = emsRepository.saveAll(entityList);
			if (savedEntities != null && !savedEntities.isEmpty()) {
	            message = "SUCCESS";
	            response.setMessage(message);
	            response.setCode("200 OK");
	        } else {
	            response.setMessage("Insert failed");
	            response.setCode("500 INTERNAL SERVER ERROR");
	        }
    	}else {
            response.setMessage("Input list is null or empty");
            response.setCode("400 BAD REQUEST");
        }
    	}catch (Exception e) {
    		e.printStackTrace();
    		response.setMessage("Exception occurred");
            response.setCode("500 INTERNAL SERVER ERROR");
    	}
  
    	return response;
    	
    }
    
    
   
//INSERT_ALL_EMPLOYEE_DETAILS(MULTIPLE/LIST)
    
    public EMSInsertMultipleResponseDTO insertEmployeeDetailsAll(EMSInsertMultipleRequestDTO insertData) {
    	EMSInsertMultipleResponseDTO response = new EMSInsertMultipleResponseDTO();
    	String message = "FAILURE";
    	
    	try {
    		List<EMSModel> dtoList = insertData.getEmployeeDetailsRequestAll();
 
    		if (dtoList != null && !dtoList.isEmpty()) {
    			
    			List<EMSModel> entityList = new ArrayList<>();
    			
    			for (EMSModel dto : dtoList){
    				
    			EMSModel entity = new EMSModel();
    			 entity.setId(dto.getId());
    			 entity.setRid(dto.getRid());
    			 entity.setName(dto.getName());
    			 entity.setParentName(dto.getParentName());
    			 entity.setStreamName(dto.getStreamName());
    			 entity.setDOB(dto.getDOB());
    			 entity.setPOY(dto.getPOY());
    			 entity.setMobileNumber(dto.getMobileNumber());
    			 entity.setMailID(dto.getMailID());
    			 entity.setAddress(dto.getAddress());
    			 entity.setStatus(dto.getStatus());
    			 
    			 entityList.add(entity);
    			}
    			
    			List<EMSModel> savedEntities = emsRepository.saveAll(entityList);
                

                if (savedEntities != null && !savedEntities.isEmpty()) {
                    message = "SUCCESS";
                    response.setMessage(message);
                    response.setCode("200 OK");
                } else {
                    response.setMessage("Insert failed");
                    response.setCode("500 INTERNAL SERVER ERROR");
                }
    			
    		}else {
    			response.setMessage("Input list is null or empty");
                response.setCode("400 BAD REQUEST");
    		}
    	}catch (Exception e) {
    		e.printStackTrace();
    		response.setMessage("Exception occurred");
            response.setCode("500 INTERNAL SERVER ERROR");
    	}
    	return response;
    }
    
//UPDATE
    public EMSUpdateResponseDTO updateEmployeeDetails(EMSUpdateRequestDTO insertData) {
    	EMSUpdateResponseDTO response =new EMSUpdateResponseDTO();
    	List<EMSModel> saveEntities =  new ArrayList<>();
    	try {
    		Optional<EMSModel> dbResponse = emsRepository.findById(insertData.getId());
    		if(dbResponse.isPresent()) {
    			EMSModel entity = new EMSModel();
    			
    			if(insertData.getId()!=null && insertData.getRid()!=null) {
    			
    				entity.setId(dbResponse.get().getId());
    				entity.setRid(insertData.getRid());
    				entity.setName(dbResponse.get().getName());
    				entity.setParentName(dbResponse.get().getParentName());
    				entity.setStreamName(dbResponse.get().getStreamName());
    				entity.setDOB(dbResponse.get().getDOB());
    				entity.setPOY(dbResponse.get().getPOY());
    				entity.setMobileNumber(dbResponse.get().getMobileNumber());
    				entity.setMailID(dbResponse.get().getMailID());
    				entity.setAddress(dbResponse.get().getAddress());
    				entity.setStatus(dbResponse.get().getStatus());
    				
    				saveEntities.add(entity);
    				
    				
    			}else if(insertData.getId()!=null && insertData.getName()!=null) {
    				entity.setId(dbResponse.get().getId());
    				entity.setRid(dbResponse.get().getRid());
    				entity.setName(insertData.getName());
    				entity.setParentName(dbResponse.get().getParentName());
    				entity.setStreamName(dbResponse.get().getStreamName());
    				entity.setDOB(dbResponse.get().getDOB());
    				entity.setPOY(dbResponse.get().getPOY());
    				entity.setMobileNumber(dbResponse.get().getMobileNumber());
    				entity.setMailID(dbResponse.get().getMailID());
    				entity.setAddress(dbResponse.get().getAddress());
    				entity.setStatus(dbResponse.get().getStatus());
    				
    				saveEntities.add(entity);
    			}else if(insertData.getId()!=null && insertData.getParentName()!=null) {
    				entity.setId(dbResponse.get().getId());
    				entity.setRid(dbResponse.get().getRid());
    				entity.setName(dbResponse.get().getName());
    				entity.setParentName(insertData.get);
    				entity.setStreamName(dbResponse.get().getStreamName());
    				entity.setDOB(dbResponse.get().getDOB());
    				entity.setPOY(dbResponse.get().getPOY());
    				entity.setMobileNumber(dbResponse.get().getMobileNumber());
    				entity.setMailID(dbResponse.get().getMailID());
    				entity.setAddress(dbResponse.get().getAddress());
    				entity.setStatus(dbResponse.get().getStatus());
    				
    				saveEntities.add(entity);
    			}else if(insertData.getId()!=null && insertData.getStreamName()!=null) {
    				
    			}else if(insertData.getId()!=null && insertData.getDOB()!=null) {
    				
    			}else if(insertData.getId()!=null && insertData.getPOY()!=null) {
    				
    			}else if(insertData.getId()!=null && insertData.getMobileNumber()!=null) {
    				
    			}else if(insertData.getId()!=null && insertData.getMailID()!=null) {
    				
    			}else if(insertData.getId()!=null && insertData.getAddress()!=null) {
    				
    			}else (insertData.getId()!=null && insertData.getStatus()!=null) {
    				
    			}
    			
    		}
    	}catch() {
    		
    	}
    }
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2038)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2243)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3278)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3055)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2025-06-10 23:49:33.895
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2038)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2243)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3278)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3055)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2025-06-10 23:49:33.897
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2038)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2243)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3278)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3055)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core 4 4 2025-06-10 23:49:38.166
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package com.example.EMSbackend.Service;

import java.util.ArrayList;
import java.util.List;
import java.util.Optional;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import com.example.EMSbackend.DTO.EMSGetAllDTO;
import com.example.EMSbackend.DTO.EMSInsertMultipleRequestDTO;
import com.example.EMSbackend.DTO.EMSInsertMultipleResponseDTO;
import com.example.EMSbackend.DTO.EMSInsertSingleRequestDTO;
import com.example.EMSbackend.DTO.EMSInsertSingleResponseDTO;
import com.example.EMSbackend.DTO.EMSUpdateRequestDTO;
import com.example.EMSbackend.DTO.EMSUpdateResponseDTO;
import com.example.EMSbackend.Model.EMSModel;
import com.example.EMSbackend.Repository.EMSRepository;

import lombok.extern.slf4j.Slf4j;

@Slf4j
@Service
public class EMSService {

	@Autowired
	private EMSRepository emsRepository;
	
	
//GET_ALL_EMPLOYEE_DETAILS
    public EMSGetAllDTO getEmployeeDetailsAll() {
    	EMSGetAllDTO response = new EMSGetAllDTO();
    
    	
    	//try { 	
    	List<EMSModel> modelDetails = (List<EMSModel>) emsRepository.findAll();
    	response.setEmployeeDetailsAll(modelDetails);
    	
    	/*if(modelDetails!=null) {
    		response.setEmployeeDetailsAll(modelDetails);
    	}
    	else {
    		System.out.println("Employee not found");
    		//log.info("Service response not found");
    	}
    	
    	}catch (Exception e) {
            System.out.println("Error while fetching employee list: " + e.getMessage());
            e.printStackTrace();
        }*/
    	    
    	return response;
    }
    
//INSERT_ALL_EMPLOYEE_DETAILS(SINGLE_DATA/NOT_LIST)
    public EMSInsertSingleResponseDTO insertEmployeeDetails(EMSInsertSingleRequestDTO requestData) {
    	EMSInsertSingleResponseDTO response = new EMSInsertSingleResponseDTO();
    	String message = "FAILURE";
    	List<EMSModel> entityList = new ArrayList<>();
  
    	try {
    	if (requestData != null) {
    		EMSModel entity = new EMSModel();
    		entity.setId(requestData.getId());
			entity.setRid(requestData.getRid());
			entity.setName(requestData.getName());
			entity.setParentName(requestData.getParentName());
			entity.setStreamName(requestData.getStreamName());
			entity.setDOB(requestData.getDOB());
			entity.setPOY(requestData.getPOY());
			entity.setMobileNumber(requestData.getMobileNumber());
			entity.setMailID(requestData.getMailID());
			entity.setAddress(requestData.getAddress());
			entity.setStatus(requestData.getStatus());
			 
			c
   
			List<EMSModel> savedEntities = emsRepository.saveAll(entityList);
			if (savedEntities != null && !savedEntities.isEmpty()) {
	            message = "SUCCESS";
	            response.setMessage(message);
	            response.setCode("200 OK");
	        } else {
	            response.setMessage("Insert failed");
	            response.setCode("500 INTERNAL SERVER ERROR");
	        }
    	}else {
            response.setMessage("Input list is null or empty");
            response.setCode("400 BAD REQUEST");
        }
    	}catch (Exception e) {
    		e.printStackTrace();
    		response.setMessage("Exception occurred");
            response.setCode("500 INTERNAL SERVER ERROR");
    	}
  
    	return response;
    	
    }
    
    
   
//INSERT_ALL_EMPLOYEE_DETAILS(MULTIPLE/LIST)
    
    public EMSInsertMultipleResponseDTO insertEmployeeDetailsAll(EMSInsertMultipleRequestDTO insertData) {
    	EMSInsertMultipleResponseDTO response = new EMSInsertMultipleResponseDTO();
    	String message = "FAILURE";
    	
    	try {
    		List<EMSModel> dtoList = insertData.getEmployeeDetailsRequestAll();
 
    		if (dtoList != null && !dtoList.isEmpty()) {
    			
    			List<EMSModel> entityList = new ArrayList<>();
    			
    			for (EMSModel dto : dtoList){
    				
    			EMSModel entity = new EMSModel();
    			 entity.setId(dto.getId());
    			 entity.setRid(dto.getRid());
    			 entity.setName(dto.getName());
    			 entity.setParentName(dto.getParentName());
    			 entity.setStreamName(dto.getStreamName());
    			 entity.setDOB(dto.getDOB());
    			 entity.setPOY(dto.getPOY());
    			 entity.setMobileNumber(dto.getMobileNumber());
    			 entity.setMailID(dto.getMailID());
    			 entity.setAddress(dto.getAddress());
    			 entity.setStatus(dto.getStatus());
    			 
    			 entityList.add(entity);
    			}
    			
    			List<EMSModel> savedEntities = emsRepository.saveAll(entityList);
                

                if (savedEntities != null && !savedEntities.isEmpty()) {
                    message = "SUCCESS";
                    response.setMessage(message);
                    response.setCode("200 OK");
                } else {
                    response.setMessage("Insert failed");
                    response.setCode("500 INTERNAL SERVER ERROR");
                }
    			
    		}else {
    			response.setMessage("Input list is null or empty");
                response.setCode("400 BAD REQUEST");
    		}
    	}catch (Exception e) {
    		e.printStackTrace();
    		response.setMessage("Exception occurred");
            response.setCode("500 INTERNAL SERVER ERROR");
    	}
    	return response;
    }
    
//UPDATE
    public EMSUpdateResponseDTO updateEmployeeDetails(EMSUpdateRequestDTO insertData) {
    	EMSUpdateResponseDTO response =new EMSUpdateResponseDTO();
    	List<EMSModel> saveEntities =  new ArrayList<>();
    	try {
    		Optional<EMSModel> dbResponse = emsRepository.findById(insertData.getId());
    		if(dbResponse.isPresent()) {
    			EMSModel entity = new EMSModel();
    			
    			if(insertData.getId()!=null && insertData.getRid()!=null) {
    			
    				entity.setId(dbResponse.get().getId());
    				entity.setRid(insertData.getRid());
    				entity.setName(dbResponse.get().getName());
    				entity.setParentName(dbResponse.get().getParentName());
    				entity.setStreamName(dbResponse.get().getStreamName());
    				entity.setDOB(dbResponse.get().getDOB());
    				entity.setPOY(dbResponse.get().getPOY());
    				entity.setMobileNumber(dbResponse.get().getMobileNumber());
    				entity.setMailID(dbResponse.get().getMailID());
    				entity.setAddress(dbResponse.get().getAddress());
    				entity.setStatus(dbResponse.get().getStatus());
    				
    				saveEntities.add(entity);
    				
    				
    			}else if(insertData.getId()!=null && insertData.getName()!=null) {
    				entity.setId(dbResponse.get().getId());
    				entity.setRid(dbResponse.get().getRid());
    				entity.setName(insertData.getName());
    				entity.setParentName(dbResponse.get().getParentName());
    				entity.setStreamName(dbResponse.get().getStreamName());
    				entity.setDOB(dbResponse.get().getDOB());
    				entity.setPOY(dbResponse.get().getPOY());
    				entity.setMobileNumber(dbResponse.get().getMobileNumber());
    				entity.setMailID(dbResponse.get().getMailID());
    				entity.setAddress(dbResponse.get().getAddress());
    				entity.setStatus(dbResponse.get().getStatus());
    				
    				saveEntities.add(entity);
    			}else if(insertData.getId()!=null && insertData.getParentName()!=null) {
    				entity.setId(dbResponse.get().getId());
    				entity.setRid(dbResponse.get().getRid());
    				entity.setName(dbResponse.get().getName());
    				entity.setParentName(insertData.getP);
    				entity.setStreamName(dbResponse.get().getStreamName());
    				entity.setDOB(dbResponse.get().getDOB());
    				entity.setPOY(dbResponse.get().getPOY());
    				entity.setMobileNumber(dbResponse.get().getMobileNumber());
    				entity.setMailID(dbResponse.get().getMailID());
    				entity.setAddress(dbResponse.get().getAddress());
    				entity.setStatus(dbResponse.get().getStatus());
    				
    				saveEntities.add(entity);
    			}else if(insertData.getId()!=null && insertData.getStreamName()!=null) {
    				
    			}else if(insertData.getId()!=null && insertData.getDOB()!=null) {
    				
    			}else if(insertData.getId()!=null && insertData.getPOY()!=null) {
    				
    			}else if(insertData.getId()!=null && insertData.getMobileNumber()!=null) {
    				
    			}else if(insertData.getId()!=null && insertData.getMailID()!=null) {
    				
    			}else if(insertData.getId()!=null && insertData.getAddress()!=null) {
    				
    			}else (insertData.getId()!=null && insertData.getStatus()!=null) {
    				
    			}
    			
    		}
    	}catch() {
    		
    	}
    }
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2038)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2243)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3278)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3055)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:540)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:132)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:94)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:91)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:158)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)

!ENTRY org.eclipse.jdt.ui 4 2 2025-06-10 23:49:38.169
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2038)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2243)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3278)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3055)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:540)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:132)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:94)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:91)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:158)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)

!ENTRY org.eclipse.jdt.ui 4 0 2025-06-10 23:49:38.170
!MESSAGE Error in JDT Core during reconcile
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2038)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2243)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3278)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3055)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:540)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:132)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:94)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:91)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:158)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)

!ENTRY org.eclipse.jdt.core 4 4 2025-06-10 23:49:38.449
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package com.example.EMSbackend.Service;

import java.util.ArrayList;
import java.util.List;
import java.util.Optional;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import com.example.EMSbackend.DTO.EMSGetAllDTO;
import com.example.EMSbackend.DTO.EMSInsertMultipleRequestDTO;
import com.example.EMSbackend.DTO.EMSInsertMultipleResponseDTO;
import com.example.EMSbackend.DTO.EMSInsertSingleRequestDTO;
import com.example.EMSbackend.DTO.EMSInsertSingleResponseDTO;
import com.example.EMSbackend.DTO.EMSUpdateRequestDTO;
import com.example.EMSbackend.DTO.EMSUpdateResponseDTO;
import com.example.EMSbackend.Model.EMSModel;
import com.example.EMSbackend.Repository.EMSRepository;

import lombok.extern.slf4j.Slf4j;

@Slf4j
@Service
public class EMSService {

	@Autowired
	private EMSRepository emsRepository;
	
	
//GET_ALL_EMPLOYEE_DETAILS
    public EMSGetAllDTO getEmployeeDetailsAll() {
    	EMSGetAllDTO response = new EMSGetAllDTO();
    
    	
    	//try { 	
    	List<EMSModel> modelDetails = (List<EMSModel>) emsRepository.findAll();
    	response.setEmployeeDetailsAll(modelDetails);
    	
    	/*if(modelDetails!=null) {
    		response.setEmployeeDetailsAll(modelDetails);
    	}
    	else {
    		System.out.println("Employee not found");
    		//log.info("Service response not found");
    	}
    	
    	}catch (Exception e) {
            System.out.println("Error while fetching employee list: " + e.getMessage());
            e.printStackTrace();
        }*/
    	    
    	return response;
    }
    
//INSERT_ALL_EMPLOYEE_DETAILS(SINGLE_DATA/NOT_LIST)
    public EMSInsertSingleResponseDTO insertEmployeeDetails(EMSInsertSingleRequestDTO requestData) {
    	EMSInsertSingleResponseDTO response = new EMSInsertSingleResponseDTO();
    	String message = "FAILURE";
    	List<EMSModel> entityList = new ArrayList<>();
  
    	try {
    	if (requestData != null) {
    		EMSModel entity = new EMSModel();
    		entity.setId(requestData.getId());
			entity.setRid(requestData.getRid());
			entity.setName(requestData.getName());
			entity.setParentName(requestData.getParentName());
			entity.setStreamName(requestData.getStreamName());
			entity.setDOB(requestData.getDOB());
			entity.setPOY(requestData.getPOY());
			entity.setMobileNumber(requestData.getMobileNumber());
			entity.setMailID(requestData.getMailID());
			entity.setAddress(requestData.getAddress());
			entity.setStatus(requestData.getStatus());
			 
			c
   
			List<EMSModel> savedEntities = emsRepository.saveAll(entityList);
			if (savedEntities != null && !savedEntities.isEmpty()) {
	            message = "SUCCESS";
	            response.setMessage(message);
	            response.setCode("200 OK");
	        } else {
	            response.setMessage("Insert failed");
	            response.setCode("500 INTERNAL SERVER ERROR");
	        }
    	}else {
            response.setMessage("Input list is null or empty");
            response.setCode("400 BAD REQUEST");
        }
    	}catch (Exception e) {
    		e.printStackTrace();
    		response.setMessage("Exception occurred");
            response.setCode("500 INTERNAL SERVER ERROR");
    	}
  
    	return response;
    	
    }
    
    
   
//INSERT_ALL_EMPLOYEE_DETAILS(MULTIPLE/LIST)
    
    public EMSInsertMultipleResponseDTO insertEmployeeDetailsAll(EMSInsertMultipleRequestDTO insertData) {
    	EMSInsertMultipleResponseDTO response = new EMSInsertMultipleResponseDTO();
    	String message = "FAILURE";
    	
    	try {
    		List<EMSModel> dtoList = insertData.getEmployeeDetailsRequestAll();
 
    		if (dtoList != null && !dtoList.isEmpty()) {
    			
    			List<EMSModel> entityList = new ArrayList<>();
    			
    			for (EMSModel dto : dtoList){
    				
    			EMSModel entity = new EMSModel();
    			 entity.setId(dto.getId());
    			 entity.setRid(dto.getRid());
    			 entity.setName(dto.getName());
    			 entity.setParentName(dto.getParentName());
    			 entity.setStreamName(dto.getStreamName());
    			 entity.setDOB(dto.getDOB());
    			 entity.setPOY(dto.getPOY());
    			 entity.setMobileNumber(dto.getMobileNumber());
    			 entity.setMailID(dto.getMailID());
    			 entity.setAddress(dto.getAddress());
    			 entity.setStatus(dto.getStatus());
    			 
    			 entityList.add(entity);
    			}
    			
    			List<EMSModel> savedEntities = emsRepository.saveAll(entityList);
                

                if (savedEntities != null && !savedEntities.isEmpty()) {
                    message = "SUCCESS";
                    response.setMessage(message);
                    response.setCode("200 OK");
                } else {
                    response.setMessage("Insert failed");
                    response.setCode("500 INTERNAL SERVER ERROR");
                }
    			
    		}else {
    			response.setMessage("Input list is null or empty");
                response.setCode("400 BAD REQUEST");
    		}
    	}catch (Exception e) {
    		e.printStackTrace();
    		response.setMessage("Exception occurred");
            response.setCode("500 INTERNAL SERVER ERROR");
    	}
    	return response;
    }
    
//UPDATE
    public EMSUpdateResponseDTO updateEmployeeDetails(EMSUpdateRequestDTO insertData) {
    	EMSUpdateResponseDTO response =new EMSUpdateResponseDTO();
    	List<EMSModel> saveEntities =  new ArrayList<>();
    	try {
    		Optional<EMSModel> dbResponse = emsRepository.findById(insertData.getId());
    		if(dbResponse.isPresent()) {
    			EMSModel entity = new EMSModel();
    			
    			if(insertData.getId()!=null && insertData.getRid()!=null) {
    			
    				entity.setId(dbResponse.get().getId());
    				entity.setRid(insertData.getRid());
    				entity.setName(dbResponse.get().getName());
    				entity.setParentName(dbResponse.get().getParentName());
    				entity.setStreamName(dbResponse.get().getStreamName());
    				entity.setDOB(dbResponse.get().getDOB());
    				entity.setPOY(dbResponse.get().getPOY());
    				entity.setMobileNumber(dbResponse.get().getMobileNumber());
    				entity.setMailID(dbResponse.get().getMailID());
    				entity.setAddress(dbResponse.get().getAddress());
    				entity.setStatus(dbResponse.get().getStatus());
    				
    				saveEntities.add(entity);
    				
    				
    			}else if(insertData.getId()!=null && insertData.getName()!=null) {
    				entity.setId(dbResponse.get().getId());
    				entity.setRid(dbResponse.get().getRid());
    				entity.setName(insertData.getName());
    				entity.setParentName(dbResponse.get().getParentName());
    				entity.setStreamName(dbResponse.get().getStreamName());
    				entity.setDOB(dbResponse.get().getDOB());
    				entity.setPOY(dbResponse.get().getPOY());
    				entity.setMobileNumber(dbResponse.get().getMobileNumber());
    				entity.setMailID(dbResponse.get().getMailID());
    				entity.setAddress(dbResponse.get().getAddress());
    				entity.setStatus(dbResponse.get().getStatus());
    				
    				saveEntities.add(entity);
    			}else if(insertData.getId()!=null && insertData.getParentName()!=null) {
    				entity.setId(dbResponse.get().getId());
    				entity.setRid(dbResponse.get().getRid());
    				entity.setName(dbResponse.get().getName());
    				entity.setParentName(insertData.getP);
    				entity.setStreamName(dbResponse.get().getStreamName());
    				entity.setDOB(dbResponse.get().getDOB());
    				entity.setPOY(dbResponse.get().getPOY());
    				entity.setMobileNumber(dbResponse.get().getMobileNumber());
    				entity.setMailID(dbResponse.get().getMailID());
    				entity.setAddress(dbResponse.get().getAddress());
    				entity.setStatus(dbResponse.get().getStatus());
    				
    				saveEntities.add(entity);
    			}else if(insertData.getId()!=null && insertData.getStreamName()!=null) {
    				
    			}else if(insertData.getId()!=null && insertData.getDOB()!=null) {
    				
    			}else if(insertData.getId()!=null && insertData.getPOY()!=null) {
    				
    			}else if(insertData.getId()!=null && insertData.getMobileNumber()!=null) {
    				
    			}else if(insertData.getId()!=null && insertData.getMailID()!=null) {
    				
    			}else if(insertData.getId()!=null && insertData.getAddress()!=null) {
    				
    			}else (insertData.getId()!=null && insertData.getStatus()!=null) {
    				
    			}
    			
    		}
    	}catch() {
    		
    	}
    }
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2038)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2243)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3278)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3055)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2025-06-10 23:49:38.453
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2038)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2243)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3278)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3055)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2025-06-10 23:49:38.455
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2038)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2243)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3278)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3055)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core 4 4 2025-06-10 23:49:39.120
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package com.example.EMSbackend.Service;

import java.util.ArrayList;
import java.util.List;
import java.util.Optional;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import com.example.EMSbackend.DTO.EMSGetAllDTO;
import com.example.EMSbackend.DTO.EMSInsertMultipleRequestDTO;
import com.example.EMSbackend.DTO.EMSInsertMultipleResponseDTO;
import com.example.EMSbackend.DTO.EMSInsertSingleRequestDTO;
import com.example.EMSbackend.DTO.EMSInsertSingleResponseDTO;
import com.example.EMSbackend.DTO.EMSUpdateRequestDTO;
import com.example.EMSbackend.DTO.EMSUpdateResponseDTO;
import com.example.EMSbackend.Model.EMSModel;
import com.example.EMSbackend.Repository.EMSRepository;

import lombok.extern.slf4j.Slf4j;

@Slf4j
@Service
public class EMSService {

	@Autowired
	private EMSRepository emsRepository;
	
	
//GET_ALL_EMPLOYEE_DETAILS
    public EMSGetAllDTO getEmployeeDetailsAll() {
    	EMSGetAllDTO response = new EMSGetAllDTO();
    
    	
    	//try { 	
    	List<EMSModel> modelDetails = (List<EMSModel>) emsRepository.findAll();
    	response.setEmployeeDetailsAll(modelDetails);
    	
    	/*if(modelDetails!=null) {
    		response.setEmployeeDetailsAll(modelDetails);
    	}
    	else {
    		System.out.println("Employee not found");
    		//log.info("Service response not found");
    	}
    	
    	}catch (Exception e) {
            System.out.println("Error while fetching employee list: " + e.getMessage());
            e.printStackTrace();
        }*/
    	    
    	return response;
    }
    
//INSERT_ALL_EMPLOYEE_DETAILS(SINGLE_DATA/NOT_LIST)
    public EMSInsertSingleResponseDTO insertEmployeeDetails(EMSInsertSingleRequestDTO requestData) {
    	EMSInsertSingleResponseDTO response = new EMSInsertSingleResponseDTO();
    	String message = "FAILURE";
    	List<EMSModel> entityList = new ArrayList<>();
  
    	try {
    	if (requestData != null) {
    		EMSModel entity = new EMSModel();
    		entity.setId(requestData.getId());
			entity.setRid(requestData.getRid());
			entity.setName(requestData.getName());
			entity.setParentName(requestData.getParentName());
			entity.setStreamName(requestData.getStreamName());
			entity.setDOB(requestData.getDOB());
			entity.setPOY(requestData.getPOY());
			entity.setMobileNumber(requestData.getMobileNumber());
			entity.setMailID(requestData.getMailID());
			entity.setAddress(requestData.getAddress());
			entity.setStatus(requestData.getStatus());
			 
			c
   
			List<EMSModel> savedEntities = emsRepository.saveAll(entityList);
			if (savedEntities != null && !savedEntities.isEmpty()) {
	            message = "SUCCESS";
	            response.setMessage(message);
	            response.setCode("200 OK");
	        } else {
	            response.setMessage("Insert failed");
	            response.setCode("500 INTERNAL SERVER ERROR");
	        }
    	}else {
            response.setMessage("Input list is null or empty");
            response.setCode("400 BAD REQUEST");
        }
    	}catch (Exception e) {
    		e.printStackTrace();
    		response.setMessage("Exception occurred");
            response.setCode("500 INTERNAL SERVER ERROR");
    	}
  
    	return response;
    	
    }
    
    
   
//INSERT_ALL_EMPLOYEE_DETAILS(MULTIPLE/LIST)
    
    public EMSInsertMultipleResponseDTO insertEmployeeDetailsAll(EMSInsertMultipleRequestDTO insertData) {
    	EMSInsertMultipleResponseDTO response = new EMSInsertMultipleResponseDTO();
    	String message = "FAILURE";
    	
    	try {
    		List<EMSModel> dtoList = insertData.getEmployeeDetailsRequestAll();
 
    		if (dtoList != null && !dtoList.isEmpty()) {
    			
    			List<EMSModel> entityList = new ArrayList<>();
    			
    			for (EMSModel dto : dtoList){
    				
    			EMSModel entity = new EMSModel();
    			 entity.setId(dto.getId());
    			 entity.setRid(dto.getRid());
    			 entity.setName(dto.getName());
    			 entity.setParentName(dto.getParentName());
    			 entity.setStreamName(dto.getStreamName());
    			 entity.setDOB(dto.getDOB());
    			 entity.setPOY(dto.getPOY());
    			 entity.setMobileNumber(dto.getMobileNumber());
    			 entity.setMailID(dto.getMailID());
    			 entity.setAddress(dto.getAddress());
    			 entity.setStatus(dto.getStatus());
    			 
    			 entityList.add(entity);
    			}
    			
    			List<EMSModel> savedEntities = emsRepository.saveAll(entityList);
                

                if (savedEntities != null && !savedEntities.isEmpty()) {
                    message = "SUCCESS";
                    response.setMessage(message);
                    response.setCode("200 OK");
                } else {
                    response.setMessage("Insert failed");
                    response.setCode("500 INTERNAL SERVER ERROR");
                }
    			
    		}else {
    			response.setMessage("Input list is null or empty");
                response.setCode("400 BAD REQUEST");
    		}
    	}catch (Exception e) {
    		e.printStackTrace();
    		response.setMessage("Exception occurred");
            response.setCode("500 INTERNAL SERVER ERROR");
    	}
    	return response;
    }
    
//UPDATE
    public EMSUpdateResponseDTO updateEmployeeDetails(EMSUpdateRequestDTO insertData) {
    	EMSUpdateResponseDTO response =new EMSUpdateResponseDTO();
    	List<EMSModel> saveEntities =  new ArrayList<>();
    	try {
    		Optional<EMSModel> dbResponse = emsRepository.findById(insertData.getId());
    		if(dbResponse.isPresent()) {
    			EMSModel entity = new EMSModel();
    			
    			if(insertData.getId()!=null && insertData.getRid()!=null) {
    			
    				entity.setId(dbResponse.get().getId());
    				entity.setRid(insertData.getRid());
    				entity.setName(dbResponse.get().getName());
    				entity.setParentName(dbResponse.get().getParentName());
    				entity.setStreamName(dbResponse.get().getStreamName());
    				entity.setDOB(dbResponse.get().getDOB());
    				entity.setPOY(dbResponse.get().getPOY());
    				entity.setMobileNumber(dbResponse.get().getMobileNumber());
    				entity.setMailID(dbResponse.get().getMailID());
    				entity.setAddress(dbResponse.get().getAddress());
    				entity.setStatus(dbResponse.get().getStatus());
    				
    				saveEntities.add(entity);
    				
    				
    			}else if(insertData.getId()!=null && insertData.getName()!=null) {
    				entity.setId(dbResponse.get().getId());
    				entity.setRid(dbResponse.get().getRid());
    				entity.setName(insertData.getName());
    				entity.setParentName(dbResponse.get().getParentName());
    				entity.setStreamName(dbResponse.get().getStreamName());
    				entity.setDOB(dbResponse.get().getDOB());
    				entity.setPOY(dbResponse.get().getPOY());
    				entity.setMobileNumber(dbResponse.get().getMobileNumber());
    				entity.setMailID(dbResponse.get().getMailID());
    				entity.setAddress(dbResponse.get().getAddress());
    				entity.setStatus(dbResponse.get().getStatus());
    				
    				saveEntities.add(entity);
    			}else if(insertData.getId()!=null && insertData.getParentName()!=null) {
    				entity.setId(dbResponse.get().getId());
    				entity.setRid(dbResponse.get().getRid());
    				entity.setName(dbResponse.get().getName());
    				entity.setParentName(insertData.getParentName());
    				entity.setStreamName(dbResponse.get().getStreamName());
    				entity.setDOB(dbResponse.get().getDOB());
    				entity.setPOY(dbResponse.get().getPOY());
    				entity.setMobileNumber(dbResponse.get().getMobileNumber());
    				entity.setMailID(dbResponse.get().getMailID());
    				entity.setAddress(dbResponse.get().getAddress());
    				entity.setStatus(dbResponse.get().getStatus());
    				
    				saveEntities.add(entity);
    			}else if(insertData.getId()!=null && insertData.getStreamName()!=null) {
    				
    			}else if(insertData.getId()!=null && insertData.getDOB()!=null) {
    				
    			}else if(insertData.getId()!=null && insertData.getPOY()!=null) {
    				
    			}else if(insertData.getId()!=null && insertData.getMobileNumber()!=null) {
    				
    			}else if(insertData.getId()!=null && insertData.getMailID()!=null) {
    				
    			}else if(insertData.getId()!=null && insertData.getAddress()!=null) {
    				
    			}else (insertData.getId()!=null && insertData.getStatus()!=null) {
    				
    			}
    			
    		}
    	}catch() {
    		
    	}
    }
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2038)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2243)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3278)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3055)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:540)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:132)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:94)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:91)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:158)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)

!ENTRY org.eclipse.jdt.ui 4 2 2025-06-10 23:49:39.126
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2038)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2243)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3278)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3055)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:540)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:132)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:94)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:91)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:158)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)

!ENTRY org.eclipse.jdt.ui 4 0 2025-06-10 23:49:39.128
!MESSAGE Error in JDT Core during reconcile
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2038)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2243)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3278)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3055)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:540)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:132)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:94)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:91)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:158)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)

!ENTRY org.eclipse.jdt.core 4 4 2025-06-10 23:49:39.198
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package com.example.EMSbackend.Service;

import java.util.ArrayList;
import java.util.List;
import java.util.Optional;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import com.example.EMSbackend.DTO.EMSGetAllDTO;
import com.example.EMSbackend.DTO.EMSInsertMultipleRequestDTO;
import com.example.EMSbackend.DTO.EMSInsertMultipleResponseDTO;
import com.example.EMSbackend.DTO.EMSInsertSingleRequestDTO;
import com.example.EMSbackend.DTO.EMSInsertSingleResponseDTO;
import com.example.EMSbackend.DTO.EMSUpdateRequestDTO;
import com.example.EMSbackend.DTO.EMSUpdateResponseDTO;
import com.example.EMSbackend.Model.EMSModel;
import com.example.EMSbackend.Repository.EMSRepository;

import lombok.extern.slf4j.Slf4j;

@Slf4j
@Service
public class EMSService {

	@Autowired
	private EMSRepository emsRepository;
	
	
//GET_ALL_EMPLOYEE_DETAILS
    public EMSGetAllDTO getEmployeeDetailsAll() {
    	EMSGetAllDTO response = new EMSGetAllDTO();
    
    	
    	//try { 	
    	List<EMSModel> modelDetails = (List<EMSModel>) emsRepository.findAll();
    	response.setEmployeeDetailsAll(modelDetails);
    	
    	/*if(modelDetails!=null) {
    		response.setEmployeeDetailsAll(modelDetails);
    	}
    	else {
    		System.out.println("Employee not found");
    		//log.info("Service response not found");
    	}
    	
    	}catch (Exception e) {
            System.out.println("Error while fetching employee list: " + e.getMessage());
            e.printStackTrace();
        }*/
    	    
    	return response;
    }
    
//INSERT_ALL_EMPLOYEE_DETAILS(SINGLE_DATA/NOT_LIST)
    public EMSInsertSingleResponseDTO insertEmployeeDetails(EMSInsertSingleRequestDTO requestData) {
    	EMSInsertSingleResponseDTO response = new EMSInsertSingleResponseDTO();
    	String message = "FAILURE";
    	List<EMSModel> entityList = new ArrayList<>();
  
    	try {
    	if (requestData != null) {
    		EMSModel entity = new EMSModel();
    		entity.setId(requestData.getId());
			entity.setRid(requestData.getRid());
			entity.setName(requestData.getName());
			entity.setParentName(requestData.getParentName());
			entity.setStreamName(requestData.getStreamName());
			entity.setDOB(requestData.getDOB());
			entity.setPOY(requestData.getPOY());
			entity.setMobileNumber(requestData.getMobileNumber());
			entity.setMailID(requestData.getMailID());
			entity.setAddress(requestData.getAddress());
			entity.setStatus(requestData.getStatus());
			 
			c
   
			List<EMSModel> savedEntities = emsRepository.saveAll(entityList);
			if (savedEntities != null && !savedEntities.isEmpty()) {
	            message = "SUCCESS";
	            response.setMessage(message);
	            response.setCode("200 OK");
	        } else {
	            response.setMessage("Insert failed");
	            response.setCode("500 INTERNAL SERVER ERROR");
	        }
    	}else {
            response.setMessage("Input list is null or empty");
            response.setCode("400 BAD REQUEST");
        }
    	}catch (Exception e) {
    		e.printStackTrace();
    		response.setMessage("Exception occurred");
            response.setCode("500 INTERNAL SERVER ERROR");
    	}
  
    	return response;
    	
    }
    
    
   
//INSERT_ALL_EMPLOYEE_DETAILS(MULTIPLE/LIST)
    
    public EMSInsertMultipleResponseDTO insertEmployeeDetailsAll(EMSInsertMultipleRequestDTO insertData) {
    	EMSInsertMultipleResponseDTO response = new EMSInsertMultipleResponseDTO();
    	String message = "FAILURE";
    	
    	try {
    		List<EMSModel> dtoList = insertData.getEmployeeDetailsRequestAll();
 
    		if (dtoList != null && !dtoList.isEmpty()) {
    			
    			List<EMSModel> entityList = new ArrayList<>();
    			
    			for (EMSModel dto : dtoList){
    				
    			EMSModel entity = new EMSModel();
    			 entity.setId(dto.getId());
    			 entity.setRid(dto.getRid());
    			 entity.setName(dto.getName());
    			 entity.setParentName(dto.getParentName());
    			 entity.setStreamName(dto.getStreamName());
    			 entity.setDOB(dto.getDOB());
    			 entity.setPOY(dto.getPOY());
    			 entity.setMobileNumber(dto.getMobileNumber());
    			 entity.setMailID(dto.getMailID());
    			 entity.setAddress(dto.getAddress());
    			 entity.setStatus(dto.getStatus());
    			 
    			 entityList.add(entity);
    			}
    			
    			List<EMSModel> savedEntities = emsRepository.saveAll(entityList);
                

                if (savedEntities != null && !savedEntities.isEmpty()) {
                    message = "SUCCESS";
                    response.setMessage(message);
                    response.setCode("200 OK");
                } else {
                    response.setMessage("Insert failed");
                    response.setCode("500 INTERNAL SERVER ERROR");
                }
    			
    		}else {
    			response.setMessage("Input list is null or empty");
                response.setCode("400 BAD REQUEST");
    		}
    	}catch (Exception e) {
    		e.printStackTrace();
    		response.setMessage("Exception occurred");
            response.setCode("500 INTERNAL SERVER ERROR");
    	}
    	return response;
    }
    
//UPDATE
    public EMSUpdateResponseDTO updateEmployeeDetails(EMSUpdateRequestDTO insertData) {
    	EMSUpdateResponseDTO response =new EMSUpdateResponseDTO();
    	List<EMSModel> saveEntities =  new ArrayList<>();
    	try {
    		Optional<EMSModel> dbResponse = emsRepository.findById(insertData.getId());
    		if(dbResponse.isPresent()) {
    			EMSModel entity = new EMSModel();
    			
    			if(insertData.getId()!=null && insertData.getRid()!=null) {
    			
    				entity.setId(dbResponse.get().getId());
    				entity.setRid(insertData.getRid());
    				entity.setName(dbResponse.get().getName());
    				entity.setParentName(dbResponse.get().getParentName());
    				entity.setStreamName(dbResponse.get().getStreamName());
    				entity.setDOB(dbResponse.get().getDOB());
    				entity.setPOY(dbResponse.get().getPOY());
    				entity.setMobileNumber(dbResponse.get().getMobileNumber());
    				entity.setMailID(dbResponse.get().getMailID());
    				entity.setAddress(dbResponse.get().getAddress());
    				entity.setStatus(dbResponse.get().getStatus());
    				
    				saveEntities.add(entity);
    				
    				
    			}else if(insertData.getId()!=null && insertData.getName()!=null) {
    				entity.setId(dbResponse.get().getId());
    				entity.setRid(dbResponse.get().getRid());
    				entity.setName(insertData.getName());
    				entity.setParentName(dbResponse.get().getParentName());
    				entity.setStreamName(dbResponse.get().getStreamName());
    				entity.setDOB(dbResponse.get().getDOB());
    				entity.setPOY(dbResponse.get().getPOY());
    				entity.setMobileNumber(dbResponse.get().getMobileNumber());
    				entity.setMailID(dbResponse.get().getMailID());
    				entity.setAddress(dbResponse.get().getAddress());
    				entity.setStatus(dbResponse.get().getStatus());
    				
    				saveEntities.add(entity);
    			}else if(insertData.getId()!=null && insertData.getParentName()!=null) {
    				entity.setId(dbResponse.get().getId());
    				entity.setRid(dbResponse.get().getRid());
    				entity.setName(dbResponse.get().getName());
    				entity.setParentName(insertData.getParentName());
    				entity.setStreamName(dbResponse.get().getStreamName());
    				entity.setDOB(dbResponse.get().getDOB());
    				entity.setPOY(dbResponse.get().getPOY());
    				entity.setMobileNumber(dbResponse.get().getMobileNumber());
    				entity.setMailID(dbResponse.get().getMailID());
    				entity.setAddress(dbResponse.get().getAddress());
    				entity.setStatus(dbResponse.get().getStatus());
    				
    				saveEntities.add(entity);
    			}else if(insertData.getId()!=null && insertData.getStreamName()!=null) {
    				
    			}else if(insertData.getId()!=null && insertData.getDOB()!=null) {
    				
    			}else if(insertData.getId()!=null && insertData.getPOY()!=null) {
    				
    			}else if(insertData.getId()!=null && insertData.getMobileNumber()!=null) {
    				
    			}else if(insertData.getId()!=null && insertData.getMailID()!=null) {
    				
    			}else if(insertData.getId()!=null && insertData.getAddress()!=null) {
    				
    			}else (insertData.getId()!=null && insertData.getStatus()!=null) {
    				
    			}
    			
    		}
    	}catch() {
    		
    	}
    }
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2038)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2243)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3278)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3055)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2025-06-10 23:49:39.202
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2038)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2243)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3278)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3055)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2025-06-10 23:49:39.204
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2038)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2243)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3278)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3055)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core 4 4 2025-06-10 23:49:44.068
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package com.example.EMSbackend.Service;

import java.util.ArrayList;
import java.util.List;
import java.util.Optional;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import com.example.EMSbackend.DTO.EMSGetAllDTO;
import com.example.EMSbackend.DTO.EMSInsertMultipleRequestDTO;
import com.example.EMSbackend.DTO.EMSInsertMultipleResponseDTO;
import com.example.EMSbackend.DTO.EMSInsertSingleRequestDTO;
import com.example.EMSbackend.DTO.EMSInsertSingleResponseDTO;
import com.example.EMSbackend.DTO.EMSUpdateRequestDTO;
import com.example.EMSbackend.DTO.EMSUpdateResponseDTO;
import com.example.EMSbackend.Model.EMSModel;
import com.example.EMSbackend.Repository.EMSRepository;

import lombok.extern.slf4j.Slf4j;

@Slf4j
@Service
public class EMSService {

	@Autowired
	private EMSRepository emsRepository;
	
	
//GET_ALL_EMPLOYEE_DETAILS
    public EMSGetAllDTO getEmployeeDetailsAll() {
    	EMSGetAllDTO response = new EMSGetAllDTO();
    
    	
    	//try { 	
    	List<EMSModel> modelDetails = (List<EMSModel>) emsRepository.findAll();
    	response.setEmployeeDetailsAll(modelDetails);
    	
    	/*if(modelDetails!=null) {
    		response.setEmployeeDetailsAll(modelDetails);
    	}
    	else {
    		System.out.println("Employee not found");
    		//log.info("Service response not found");
    	}
    	
    	}catch (Exception e) {
            System.out.println("Error while fetching employee list: " + e.getMessage());
            e.printStackTrace();
        }*/
    	    
    	return response;
    }
    
//INSERT_ALL_EMPLOYEE_DETAILS(SINGLE_DATA/NOT_LIST)
    public EMSInsertSingleResponseDTO insertEmployeeDetails(EMSInsertSingleRequestDTO requestData) {
    	EMSInsertSingleResponseDTO response = new EMSInsertSingleResponseDTO();
    	String message = "FAILURE";
    	List<EMSModel> entityList = new ArrayList<>();
  
    	try {
    	if (requestData != null) {
    		EMSModel entity = new EMSModel();
    		entity.setId(requestData.getId());
			entity.setRid(requestData.getRid());
			entity.setName(requestData.getName());
			entity.setParentName(requestData.getParentName());
			entity.setStreamName(requestData.getStreamName());
			entity.setDOB(requestData.getDOB());
			entity.setPOY(requestData.getPOY());
			entity.setMobileNumber(requestData.getMobileNumber());
			entity.setMailID(requestData.getMailID());
			entity.setAddress(requestData.getAddress());
			entity.setStatus(requestData.getStatus());
			 
			c
   
			List<EMSModel> savedEntities = emsRepository.saveAll(entityList);
			if (savedEntities != null && !savedEntities.isEmpty()) {
	            message = "SUCCESS";
	            response.setMessage(message);
	            response.setCode("200 OK");
	        } else {
	            response.setMessage("Insert failed");
	            response.setCode("500 INTERNAL SERVER ERROR");
	        }
    	}else {
            response.setMessage("Input list is null or empty");
            response.setCode("400 BAD REQUEST");
        }
    	}catch (Exception e) {
    		e.printStackTrace();
    		response.setMessage("Exception occurred");
            response.setCode("500 INTERNAL SERVER ERROR");
    	}
  
    	return response;
    	
    }
    
    
   
//INSERT_ALL_EMPLOYEE_DETAILS(MULTIPLE/LIST)
    
    public EMSInsertMultipleResponseDTO insertEmployeeDetailsAll(EMSInsertMultipleRequestDTO insertData) {
    	EMSInsertMultipleResponseDTO response = new EMSInsertMultipleResponseDTO();
    	String message = "FAILURE";
    	
    	try {
    		List<EMSModel> dtoList = insertData.getEmployeeDetailsRequestAll();
 
    		if (dtoList != null && !dtoList.isEmpty()) {
    			
    			List<EMSModel> entityList = new ArrayList<>();
    			
    			for (EMSModel dto : dtoList){
    				
    			EMSModel entity = new EMSModel();
    			 entity.setId(dto.getId());
    			 entity.setRid(dto.getRid());
    			 entity.setName(dto.getName());
    			 entity.setParentName(dto.getParentName());
    			 entity.setStreamName(dto.getStreamName());
    			 entity.setDOB(dto.getDOB());
    			 entity.setPOY(dto.getPOY());
    			 entity.setMobileNumber(dto.getMobileNumber());
    			 entity.setMailID(dto.getMailID());
    			 entity.setAddress(dto.getAddress());
    			 entity.setStatus(dto.getStatus());
    			 
    			 entityList.add(entity);
    			}
    			
    			List<EMSModel> savedEntities = emsRepository.saveAll(entityList);
                

                if (savedEntities != null && !savedEntities.isEmpty()) {
                    message = "SUCCESS";
                    response.setMessage(message);
                    response.setCode("200 OK");
                } else {
                    response.setMessage("Insert failed");
                    response.setCode("500 INTERNAL SERVER ERROR");
                }
    			
    		}else {
    			response.setMessage("Input list is null or empty");
                response.setCode("400 BAD REQUEST");
    		}
    	}catch (Exception e) {
    		e.printStackTrace();
    		response.setMessage("Exception occurred");
            response.setCode("500 INTERNAL SERVER ERROR");
    	}
    	return response;
    }
    
//UPDATE
    public EMSUpdateResponseDTO updateEmployeeDetails(EMSUpdateRequestDTO insertData) {
    	EMSUpdateResponseDTO response =new EMSUpdateResponseDTO();
    	List<EMSModel> saveEntities =  new ArrayList<>();
    	try {
    		Optional<EMSModel> dbResponse = emsRepository.findById(insertData.getId());
    		if(dbResponse.isPresent()) {
    			EMSModel entity = new EMSModel();
    			
    			if(insertData.getId()!=null && insertData.getRid()!=null) {
    			
    				entity.setId(dbResponse.get().getId());
    				entity.setRid(insertData.getRid());
    				entity.setName(dbResponse.get().getName());
    				entity.setParentName(dbResponse.get().getParentName());
    				entity.setStreamName(dbResponse.get().getStreamName());
    				entity.setDOB(dbResponse.get().getDOB());
    				entity.setPOY(dbResponse.get().getPOY());
    				entity.setMobileNumber(dbResponse.get().getMobileNumber());
    				entity.setMailID(dbResponse.get().getMailID());
    				entity.setAddress(dbResponse.get().getAddress());
    				entity.setStatus(dbResponse.get().getStatus());
    				
    				saveEntities.add(entity);
    				
    				
    			}else if(insertData.getId()!=null && insertData.getName()!=null) {
    				entity.setId(dbResponse.get().getId());
    				entity.setRid(dbResponse.get().getRid());
    				entity.setName(insertData.getName());
    				entity.setParentName(dbResponse.get().getParentName());
    				entity.setStreamName(dbResponse.get().getStreamName());
    				entity.setDOB(dbResponse.get().getDOB());
    				entity.setPOY(dbResponse.get().getPOY());
    				entity.setMobileNumber(dbResponse.get().getMobileNumber());
    				entity.setMailID(dbResponse.get().getMailID());
    				entity.setAddress(dbResponse.get().getAddress());
    				entity.setStatus(dbResponse.get().getStatus());
    				
    				saveEntities.add(entity);
    			}else if(insertData.getId()!=null && insertData.getParentName()!=null) {
    				entity.setId(dbResponse.get().getId());
    				entity.setRid(dbResponse.get().getRid());
    				entity.setName(dbResponse.get().getName());
    				entity.setParentName(insertData.getParentName());
    				entity.setStreamName(dbResponse.get().getStreamName());
    				entity.setDOB(dbResponse.get().getDOB());
    				entity.setPOY(dbResponse.get().getPOY());
    				entity.setMobileNumber(dbResponse.get().getMobileNumber());
    				entity.setMailID(dbResponse.get().getMailID());
    				entity.setAddress(dbResponse.get().getAddress());
    				entity.setStatus(dbResponse.get().getStatus());
    				
    				saveEntities.add(entity);
    			}else if(insertData.getId()!=null && insertData.getStreamName()!=null) {
    				
    			}else if(insertData.getId()!=null && insertData.getDOB()!=null) {
    				
    			}else if(insertData.getId()!=null && insertData.getPOY()!=null) {
    				
    			}else if(insertData.getId()!=null && insertData.getMobileNumber()!=null) {
    				
    			}else if(insertData.getId()!=null && insertData.getMailID()!=null) {
    				
    			}else if(insertData.getId()!=null && insertData.getAddress()!=null) {
    				
    			}else (insertData.getId()!=null && insertData.getStatus()!=null) {
    				
    			}
    			
    		}
    	}catch() {
    		
    	}
    }
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2038)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2243)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3278)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3055)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2025-06-10 23:49:44.074
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2038)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2243)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3278)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3055)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2025-06-10 23:49:44.076
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2038)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2243)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3278)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3055)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core 4 4 2025-06-10 23:49:44.348
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package com.example.EMSbackend.Service;

import java.util.ArrayList;
import java.util.List;
import java.util.Optional;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import com.example.EMSbackend.DTO.EMSGetAllDTO;
import com.example.EMSbackend.DTO.EMSInsertMultipleRequestDTO;
import com.example.EMSbackend.DTO.EMSInsertMultipleResponseDTO;
import com.example.EMSbackend.DTO.EMSInsertSingleRequestDTO;
import com.example.EMSbackend.DTO.EMSInsertSingleResponseDTO;
import com.example.EMSbackend.DTO.EMSUpdateRequestDTO;
import com.example.EMSbackend.DTO.EMSUpdateResponseDTO;
import com.example.EMSbackend.Model.EMSModel;
import com.example.EMSbackend.Repository.EMSRepository;

import lombok.extern.slf4j.Slf4j;

@Slf4j
@Service
public class EMSService {

	@Autowired
	private EMSRepository emsRepository;
	
	
//GET_ALL_EMPLOYEE_DETAILS
    public EMSGetAllDTO getEmployeeDetailsAll() {
    	EMSGetAllDTO response = new EMSGetAllDTO();
    
    	
    	//try { 	
    	List<EMSModel> modelDetails = (List<EMSModel>) emsRepository.findAll();
    	response.setEmployeeDetailsAll(modelDetails);
    	
    	/*if(modelDetails!=null) {
    		response.setEmployeeDetailsAll(modelDetails);
    	}
    	else {
    		System.out.println("Employee not found");
    		//log.info("Service response not found");
    	}
    	
    	}catch (Exception e) {
            System.out.println("Error while fetching employee list: " + e.getMessage());
            e.printStackTrace();
        }*/
    	    
    	return response;
    }
    
//INSERT_ALL_EMPLOYEE_DETAILS(SINGLE_DATA/NOT_LIST)
    public EMSInsertSingleResponseDTO insertEmployeeDetails(EMSInsertSingleRequestDTO requestData) {
    	EMSInsertSingleResponseDTO response = new EMSInsertSingleResponseDTO();
    	String message = "FAILURE";
    	List<EMSModel> entityList = new ArrayList<>();
  
    	try {
    	if (requestData != null) {
    		EMSModel entity = new EMSModel();
    		entity.setId(requestData.getId());
			entity.setRid(requestData.getRid());
			entity.setName(requestData.getName());
			entity.setParentName(requestData.getParentName());
			entity.setStreamName(requestData.getStreamName());
			entity.setDOB(requestData.getDOB());
			entity.setPOY(requestData.getPOY());
			entity.setMobileNumber(requestData.getMobileNumber());
			entity.setMailID(requestData.getMailID());
			entity.setAddress(requestData.getAddress());
			entity.setStatus(requestData.getStatus());
			 
			c
   
			List<EMSModel> savedEntities = emsRepository.saveAll(entityList);
			if (savedEntities != null && !savedEntities.isEmpty()) {
	            message = "SUCCESS";
	            response.setMessage(message);
	            response.setCode("200 OK");
	        } else {
	            response.setMessage("Insert failed");
	            response.setCode("500 INTERNAL SERVER ERROR");
	        }
    	}else {
            response.setMessage("Input list is null or empty");
            response.setCode("400 BAD REQUEST");
        }
    	}catch (Exception e) {
    		e.printStackTrace();
    		response.setMessage("Exception occurred");
            response.setCode("500 INTERNAL SERVER ERROR");
    	}
  
    	return response;
    	
    }
    
    
   
//INSERT_ALL_EMPLOYEE_DETAILS(MULTIPLE/LIST)
    
    public EMSInsertMultipleResponseDTO insertEmployeeDetailsAll(EMSInsertMultipleRequestDTO insertData) {
    	EMSInsertMultipleResponseDTO response = new EMSInsertMultipleResponseDTO();
    	String message = "FAILURE";
    	
    	try {
    		List<EMSModel> dtoList = insertData.getEmployeeDetailsRequestAll();
 
    		if (dtoList != null && !dtoList.isEmpty()) {
    			
    			List<EMSModel> entityList = new ArrayList<>();
    			
    			for (EMSModel dto : dtoList){
    				
    			EMSModel entity = new EMSModel();
    			 entity.setId(dto.getId());
    			 entity.setRid(dto.getRid());
    			 entity.setName(dto.getName());
    			 entity.setParentName(dto.getParentName());
    			 entity.setStreamName(dto.getStreamName());
    			 entity.setDOB(dto.getDOB());
    			 entity.setPOY(dto.getPOY());
    			 entity.setMobileNumber(dto.getMobileNumber());
    			 entity.setMailID(dto.getMailID());
    			 entity.setAddress(dto.getAddress());
    			 entity.setStatus(dto.getStatus());
    			 
    			 entityList.add(entity);
    			}
    			
    			List<EMSModel> savedEntities = emsRepository.saveAll(entityList);
                

                if (savedEntities != null && !savedEntities.isEmpty()) {
                    message = "SUCCESS";
                    response.setMessage(message);
                    response.setCode("200 OK");
                } else {
                    response.setMessage("Insert failed");
                    response.setCode("500 INTERNAL SERVER ERROR");
                }
    			
    		}else {
    			response.setMessage("Input list is null or empty");
                response.setCode("400 BAD REQUEST");
    		}
    	}catch (Exception e) {
    		e.printStackTrace();
    		response.setMessage("Exception occurred");
            response.setCode("500 INTERNAL SERVER ERROR");
    	}
    	return response;
    }
    
//UPDATE
    public EMSUpdateResponseDTO updateEmployeeDetails(EMSUpdateRequestDTO insertData) {
    	EMSUpdateResponseDTO response =new EMSUpdateResponseDTO();
    	List<EMSModel> saveEntities =  new ArrayList<>();
    	try {
    		Optional<EMSModel> dbResponse = emsRepository.findById(insertData.getId());
    		if(dbResponse.isPresent()) {
    			EMSModel entity = new EMSModel();
    			
    			if(insertData.getId()!=null && insertData.getRid()!=null) {
    			
    				entity.setId(dbResponse.get().getId());
    				entity.setRid(insertData.getRid());
    				entity.setName(dbResponse.get().getName());
    				entity.setParentName(dbResponse.get().getParentName());
    				entity.setStreamName(dbResponse.get().getStreamName());
    				entity.setDOB(dbResponse.get().getDOB());
    				entity.setPOY(dbResponse.get().getPOY());
    				entity.setMobileNumber(dbResponse.get().getMobileNumber());
    				entity.setMailID(dbResponse.get().getMailID());
    				entity.setAddress(dbResponse.get().getAddress());
    				entity.setStatus(dbResponse.get().getStatus());
    				
    				saveEntities.add(entity);
    				
    				
    			}else if(insertData.getId()!=null && insertData.getName()!=null) {
    				entity.setId(dbResponse.get().getId());
    				entity.setRid(dbResponse.get().getRid());
    				entity.setName(insertData.getName());
    				entity.setParentName(dbResponse.get().getParentName());
    				entity.setStreamName(dbResponse.get().getStreamName());
    				entity.setDOB(dbResponse.get().getDOB());
    				entity.setPOY(dbResponse.get().getPOY());
    				entity.setMobileNumber(dbResponse.get().getMobileNumber());
    				entity.setMailID(dbResponse.get().getMailID());
    				entity.setAddress(dbResponse.get().getAddress());
    				entity.setStatus(dbResponse.get().getStatus());
    				
    				saveEntities.add(entity);
    			}else if(insertData.getId()!=null && insertData.getParentName()!=null) {
    				entity.setId(dbResponse.get().getId());
    				entity.setRid(dbResponse.get().getRid());
    				entity.setName(dbResponse.get().getName());
    				entity.setParentName(insertData.getParentName());
    				entity.setStreamName(dbResponse.get().getStreamName());
    				entity.setDOB(dbResponse.get().getDOB());
    				entity.setPOY(dbResponse.get().getPOY());
    				entity.setMobileNumber(dbResponse.get().getMobileNumber());
    				entity.setMailID(dbResponse.get().getMailID());
    				entity.setAddress(dbResponse.get().getAddress());
    				entity.setStatus(dbResponse.get().getStatus());
    				
    				saveEntities.add(entity);
    			}else if(insertData.getId()!=null && insertData.getStreamName()!=null) {
    				
    			}else if(insertData.getId()!=null && insertData.getDOB()!=null) {
    				
    			}else if(insertData.getId()!=null && insertData.getPOY()!=null) {
    				
    			}else if(insertData.getId()!=null && insertData.getMobileNumber()!=null) {
    				
    			}else if(insertData.getId()!=null && insertData.getMailID()!=null) {
    				
    			}else if(insertData.getId()!=null && insertData.getAddress()!=null) {
    				
    			}else (insertData.getId()!=null && insertData.getStatus()!=null) {
    				
    			}
    			
    		}
    	}catch() {
    		
    	}
    }
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2038)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2243)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3278)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3055)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.internalGetHoverInfo(NLSStringHover.java:141)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.getHoverInfo2(NLSStringHover.java:120)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:163)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:130)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:89)
	at org.eclipse.jface.text.TextViewerHoverManager$1.run(TextViewerHoverManager.java:155)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2025-06-10 23:49:44.352
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2038)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2243)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3278)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3055)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.internalGetHoverInfo(NLSStringHover.java:141)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.getHoverInfo2(NLSStringHover.java:120)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:163)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:130)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:89)
	at org.eclipse.jface.text.TextViewerHoverManager$1.run(TextViewerHoverManager.java:155)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2025-06-10 23:49:44.355
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2038)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2243)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3278)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3055)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.internalGetHoverInfo(NLSStringHover.java:141)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.getHoverInfo2(NLSStringHover.java:120)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:163)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:130)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:89)
	at org.eclipse.jface.text.TextViewerHoverManager$1.run(TextViewerHoverManager.java:155)

!ENTRY org.eclipse.jdt.core 4 4 2025-06-10 23:49:44.895
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package com.example.EMSbackend.Service;

import java.util.ArrayList;
import java.util.List;
import java.util.Optional;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import com.example.EMSbackend.DTO.EMSGetAllDTO;
import com.example.EMSbackend.DTO.EMSInsertMultipleRequestDTO;
import com.example.EMSbackend.DTO.EMSInsertMultipleResponseDTO;
import com.example.EMSbackend.DTO.EMSInsertSingleRequestDTO;
import com.example.EMSbackend.DTO.EMSInsertSingleResponseDTO;
import com.example.EMSbackend.DTO.EMSUpdateRequestDTO;
import com.example.EMSbackend.DTO.EMSUpdateResponseDTO;
import com.example.EMSbackend.Model.EMSModel;
import com.example.EMSbackend.Repository.EMSRepository;

import lombok.extern.slf4j.Slf4j;

@Slf4j
@Service
public class EMSService {

	@Autowired
	private EMSRepository emsRepository;
	
	
//GET_ALL_EMPLOYEE_DETAILS
    public EMSGetAllDTO getEmployeeDetailsAll() {
    	EMSGetAllDTO response = new EMSGetAllDTO();
    
    	
    	//try { 	
    	List<EMSModel> modelDetails = (List<EMSModel>) emsRepository.findAll();
    	response.setEmployeeDetailsAll(modelDetails);
    	
    	/*if(modelDetails!=null) {
    		response.setEmployeeDetailsAll(modelDetails);
    	}
    	else {
    		System.out.println("Employee not found");
    		//log.info("Service response not found");
    	}
    	
    	}catch (Exception e) {
            System.out.println("Error while fetching employee list: " + e.getMessage());
            e.printStackTrace();
        }*/
    	    
    	return response;
    }
    
//INSERT_ALL_EMPLOYEE_DETAILS(SINGLE_DATA/NOT_LIST)
    public EMSInsertSingleResponseDTO insertEmployeeDetails(EMSInsertSingleRequestDTO requestData) {
    	EMSInsertSingleResponseDTO response = new EMSInsertSingleResponseDTO();
    	String message = "FAILURE";
    	List<EMSModel> entityList = new ArrayList<>();
  
    	try {
    	if (requestData != null) {
    		EMSModel entity = new EMSModel();
    		entity.setId(requestData.getId());
			entity.setRid(requestData.getRid());
			entity.setName(requestData.getName());
			entity.setParentName(requestData.getParentName());
			entity.setStreamName(requestData.getStreamName());
			entity.setDOB(requestData.getDOB());
			entity.setPOY(requestData.getPOY());
			entity.setMobileNumber(requestData.getMobileNumber());
			entity.setMailID(requestData.getMailID());
			entity.setAddress(requestData.getAddress());
			entity.setStatus(requestData.getStatus());
			 
			c
   
			List<EMSModel> savedEntities = emsRepository.saveAll(entityList);
			if (savedEntities != null && !savedEntities.isEmpty()) {
	            message = "SUCCESS";
	            response.setMessage(message);
	            response.setCode("200 OK");
	        } else {
	            response.setMessage("Insert failed");
	            response.setCode("500 INTERNAL SERVER ERROR");
	        }
    	}else {
            response.setMessage("Input list is null or empty");
            response.setCode("400 BAD REQUEST");
        }
    	}catch (Exception e) {
    		e.printStackTrace();
    		response.setMessage("Exception occurred");
            response.setCode("500 INTERNAL SERVER ERROR");
    	}
  
    	return response;
    	
    }
    
    
   
//INSERT_ALL_EMPLOYEE_DETAILS(MULTIPLE/LIST)
    
    public EMSInsertMultipleResponseDTO insertEmployeeDetailsAll(EMSInsertMultipleRequestDTO insertData) {
    	EMSInsertMultipleResponseDTO response = new EMSInsertMultipleResponseDTO();
    	String message = "FAILURE";
    	
    	try {
    		List<EMSModel> dtoList = insertData.getEmployeeDetailsRequestAll();
 
    		if (dtoList != null && !dtoList.isEmpty()) {
    			
    			List<EMSModel> entityList = new ArrayList<>();
    			
    			for (EMSModel dto : dtoList){
    				
    			EMSModel entity = new EMSModel();
    			 entity.setId(dto.getId());
    			 entity.setRid(dto.getRid());
    			 entity.setName(dto.getName());
    			 entity.setParentName(dto.getParentName());
    			 entity.setStreamName(dto.getStreamName());
    			 entity.setDOB(dto.getDOB());
    			 entity.setPOY(dto.getPOY());
    			 entity.setMobileNumber(dto.getMobileNumber());
    			 entity.setMailID(dto.getMailID());
    			 entity.setAddress(dto.getAddress());
    			 entity.setStatus(dto.getStatus());
    			 
    			 entityList.add(entity);
    			}
    			
    			List<EMSModel> savedEntities = emsRepository.saveAll(entityList);
                

                if (savedEntities != null && !savedEntities.isEmpty()) {
                    message = "SUCCESS";
                    response.setMessage(message);
                    response.setCode("200 OK");
                } else {
                    response.setMessage("Insert failed");
                    response.setCode("500 INTERNAL SERVER ERROR");
                }
    			
    		}else {
    			response.setMessage("Input list is null or empty");
                response.setCode("400 BAD REQUEST");
    		}
    	}catch (Exception e) {
    		e.printStackTrace();
    		response.setMessage("Exception occurred");
            response.setCode("500 INTERNAL SERVER ERROR");
    	}
    	return response;
    }
    
//UPDATE
    public EMSUpdateResponseDTO updateEmployeeDetails(EMSUpdateRequestDTO insertData) {
    	EMSUpdateResponseDTO response =new EMSUpdateResponseDTO();
    	List<EMSModel> saveEntities =  new ArrayList<>();
    	try {
    		Optional<EMSModel> dbResponse = emsRepository.findById(insertData.getId());
    		if(dbResponse.isPresent()) {
    			EMSModel entity = new EMSModel();
    			
    			if(insertData.getId()!=null && insertData.getRid()!=null) {
    			
    				entity.setId(dbResponse.get().getId());
    				entity.setRid(insertData.getRid());
    				entity.setName(dbResponse.get().getName());
    				entity.setParentName(dbResponse.get().getParentName());
    				entity.setStreamName(dbResponse.get().getStreamName());
    				entity.setDOB(dbResponse.get().getDOB());
    				entity.setPOY(dbResponse.get().getPOY());
    				entity.setMobileNumber(dbResponse.get().getMobileNumber());
    				entity.setMailID(dbResponse.get().getMailID());
    				entity.setAddress(dbResponse.get().getAddress());
    				entity.setStatus(dbResponse.get().getStatus());
    				
    				saveEntities.add(entity);
    				
    				
    			}else if(insertData.getId()!=null && insertData.getName()!=null) {
    				entity.setId(dbResponse.get().getId());
    				entity.setRid(dbResponse.get().getRid());
    				entity.setName(insertData.getName());
    				entity.setParentName(dbResponse.get().getParentName());
    				entity.setStreamName(dbResponse.get().getStreamName());
    				entity.setDOB(dbResponse.get().getDOB());
    				entity.setPOY(dbResponse.get().getPOY());
    				entity.setMobileNumber(dbResponse.get().getMobileNumber());
    				entity.setMailID(dbResponse.get().getMailID());
    				entity.setAddress(dbResponse.get().getAddress());
    				entity.setStatus(dbResponse.get().getStatus());
    				
    				saveEntities.add(entity);
    			}else if(insertData.getId()!=null && insertData.getParentName()!=null) {
    				c
    			}else if(insertData.getId()!=null && insertData.getStreamName()!=null) {
    				
    			}else if(insertData.getId()!=null && insertData.getDOB()!=null) {
    				
    			}else if(insertData.getId()!=null && insertData.getPOY()!=null) {
    				
    			}else if(insertData.getId()!=null && insertData.getMobileNumber()!=null) {
    				
    			}else if(insertData.getId()!=null && insertData.getMailID()!=null) {
    				
    			}else if(insertData.getId()!=null && insertData.getAddress()!=null) {
    				
    			}else (insertData.getId()!=null && insertData.getStatus()!=null) {
    				
    			}
    			
    		}
    	}catch() {
    		
    	}
    }
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2038)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2243)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:540)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:132)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:94)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:91)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:158)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)

!ENTRY org.eclipse.jdt.ui 4 2 2025-06-10 23:49:44.901
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2038)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2243)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:540)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:132)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:94)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:91)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:158)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)

!ENTRY org.eclipse.jdt.ui 4 0 2025-06-10 23:49:44.905
!MESSAGE Error in JDT Core during reconcile
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2038)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2243)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:540)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:132)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:94)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:91)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:158)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)

!ENTRY org.eclipse.jdt.core 4 4 2025-06-10 23:49:44.981
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package com.example.EMSbackend.Service;

import java.util.ArrayList;
import java.util.List;
import java.util.Optional;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import com.example.EMSbackend.DTO.EMSGetAllDTO;
import com.example.EMSbackend.DTO.EMSInsertMultipleRequestDTO;
import com.example.EMSbackend.DTO.EMSInsertMultipleResponseDTO;
import com.example.EMSbackend.DTO.EMSInsertSingleRequestDTO;
import com.example.EMSbackend.DTO.EMSInsertSingleResponseDTO;
import com.example.EMSbackend.DTO.EMSUpdateRequestDTO;
import com.example.EMSbackend.DTO.EMSUpdateResponseDTO;
import com.example.EMSbackend.Model.EMSModel;
import com.example.EMSbackend.Repository.EMSRepository;

import lombok.extern.slf4j.Slf4j;

@Slf4j
@Service
public class EMSService {

	@Autowired
	private EMSRepository emsRepository;
	
	
//GET_ALL_EMPLOYEE_DETAILS
    public EMSGetAllDTO getEmployeeDetailsAll() {
    	EMSGetAllDTO response = new EMSGetAllDTO();
    
    	
    	//try { 	
    	List<EMSModel> modelDetails = (List<EMSModel>) emsRepository.findAll();
    	response.setEmployeeDetailsAll(modelDetails);
    	
    	/*if(modelDetails!=null) {
    		response.setEmployeeDetailsAll(modelDetails);
    	}
    	else {
    		System.out.println("Employee not found");
    		//log.info("Service response not found");
    	}
    	
    	}catch (Exception e) {
            System.out.println("Error while fetching employee list: " + e.getMessage());
            e.printStackTrace();
        }*/
    	    
    	return response;
    }
    
//INSERT_ALL_EMPLOYEE_DETAILS(SINGLE_DATA/NOT_LIST)
    public EMSInsertSingleResponseDTO insertEmployeeDetails(EMSInsertSingleRequestDTO requestData) {
    	EMSInsertSingleResponseDTO response = new EMSInsertSingleResponseDTO();
    	String message = "FAILURE";
    	List<EMSModel> entityList = new ArrayList<>();
  
    	try {
    	if (requestData != null) {
    		EMSModel entity = new EMSModel();
    		entity.setId(requestData.getId());
			entity.setRid(requestData.getRid());
			entity.setName(requestData.getName());
			entity.setParentName(requestData.getParentName());
			entity.setStreamName(requestData.getStreamName());
			entity.setDOB(requestData.getDOB());
			entity.setPOY(requestData.getPOY());
			entity.setMobileNumber(requestData.getMobileNumber());
			entity.setMailID(requestData.getMailID());
			entity.setAddress(requestData.getAddress());
			entity.setStatus(requestData.getStatus());
			 
			c
   
			List<EMSModel> savedEntities = emsRepository.saveAll(entityList);
			if (savedEntities != null && !savedEntities.isEmpty()) {
	            message = "SUCCESS";
	            response.setMessage(message);
	            response.setCode("200 OK");
	        } else {
	            response.setMessage("Insert failed");
	            response.setCode("500 INTERNAL SERVER ERROR");
	        }
    	}else {
            response.setMessage("Input list is null or empty");
            response.setCode("400 BAD REQUEST");
        }
    	}catch (Exception e) {
    		e.printStackTrace();
    		response.setMessage("Exception occurred");
            response.setCode("500 INTERNAL SERVER ERROR");
    	}
  
    	return response;
    	
    }
    
    
   
//INSERT_ALL_EMPLOYEE_DETAILS(MULTIPLE/LIST)
    
    public EMSInsertMultipleResponseDTO insertEmployeeDetailsAll(EMSInsertMultipleRequestDTO insertData) {
    	EMSInsertMultipleResponseDTO response = new EMSInsertMultipleResponseDTO();
    	String message = "FAILURE";
    	
    	try {
    		List<EMSModel> dtoList = insertData.getEmployeeDetailsRequestAll();
 
    		if (dtoList != null && !dtoList.isEmpty()) {
    			
    			List<EMSModel> entityList = new ArrayList<>();
    			
    			for (EMSModel dto : dtoList){
    				
    			EMSModel entity = new EMSModel();
    			 entity.setId(dto.getId());
    			 entity.setRid(dto.getRid());
    			 entity.setName(dto.getName());
    			 entity.setParentName(dto.getParentName());
    			 entity.setStreamName(dto.getStreamName());
    			 entity.setDOB(dto.getDOB());
    			 entity.setPOY(dto.getPOY());
    			 entity.setMobileNumber(dto.getMobileNumber());
    			 entity.setMailID(dto.getMailID());
    			 entity.setAddress(dto.getAddress());
    			 entity.setStatus(dto.getStatus());
    			 
    			 entityList.add(entity);
    			}
    			
    			List<EMSModel> savedEntities = emsRepository.saveAll(entityList);
                

                if (savedEntities != null && !savedEntities.isEmpty()) {
                    message = "SUCCESS";
                    response.setMessage(message);
                    response.setCode("200 OK");
                } else {
                    response.setMessage("Insert failed");
                    response.setCode("500 INTERNAL SERVER ERROR");
                }
    			
    		}else {
    			response.setMessage("Input list is null or empty");
                response.setCode("400 BAD REQUEST");
    		}
    	}catch (Exception e) {
    		e.printStackTrace();
    		response.setMessage("Exception occurred");
            response.setCode("500 INTERNAL SERVER ERROR");
    	}
    	return response;
    }
    
//UPDATE
    public EMSUpdateResponseDTO updateEmployeeDetails(EMSUpdateRequestDTO insertData) {
    	EMSUpdateResponseDTO response =new EMSUpdateResponseDTO();
    	List<EMSModel> saveEntities =  new ArrayList<>();
    	try {
    		Optional<EMSModel> dbResponse = emsRepository.findById(insertData.getId());
    		if(dbResponse.isPresent()) {
    			EMSModel entity = new EMSModel();
    			
    			if(insertData.getId()!=null && insertData.getRid()!=null) {
    			
    				entity.setId(dbResponse.get().getId());
    				entity.setRid(insertData.getRid());
    				entity.setName(dbResponse.get().getName());
    				entity.setParentName(dbResponse.get().getParentName());
    				entity.setStreamName(dbResponse.get().getStreamName());
    				entity.setDOB(dbResponse.get().getDOB());
    				entity.setPOY(dbResponse.get().getPOY());
    				entity.setMobileNumber(dbResponse.get().getMobileNumber());
    				entity.setMailID(dbResponse.get().getMailID());
    				entity.setAddress(dbResponse.get().getAddress());
    				entity.setStatus(dbResponse.get().getStatus());
    				
    				saveEntities.add(entity);
    				
    				
    			}else if(insertData.getId()!=null && insertData.getName()!=null) {
    				entity.setId(dbResponse.get().getId());
    				entity.setRid(dbResponse.get().getRid());
    				entity.setName(insertData.getName());
    				entity.setParentName(dbResponse.get().getParentName());
    				entity.setStreamName(dbResponse.get().getStreamName());
    				entity.setDOB(dbResponse.get().getDOB());
    				entity.setPOY(dbResponse.get().getPOY());
    				entity.setMobileNumber(dbResponse.get().getMobileNumber());
    				entity.setMailID(dbResponse.get().getMailID());
    				entity.setAddress(dbResponse.get().getAddress());
    				entity.setStatus(dbResponse.get().getStatus());
    				
    				saveEntities.add(entity);
    			}else if(insertData.getId()!=null && insertData.getParentName()!=null) {
    				c
    			}else if(insertData.getId()!=null && insertData.getStreamName()!=null) {
    				
    			}else if(insertData.getId()!=null && insertData.getDOB()!=null) {
    				
    			}else if(insertData.getId()!=null && insertData.getPOY()!=null) {
    				
    			}else if(insertData.getId()!=null && insertData.getMobileNumber()!=null) {
    				
    			}else if(insertData.getId()!=null && insertData.getMailID()!=null) {
    				
    			}else if(insertData.getId()!=null && insertData.getAddress()!=null) {
    				
    			}else (insertData.getId()!=null && insertData.getStatus()!=null) {
    				
    			}
    			
    		}
    	}catch() {
    		
    	}
    }
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2038)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2243)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2025-06-10 23:49:44.985
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2038)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2243)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2025-06-10 23:49:44.988
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2038)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2243)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core 4 4 2025-06-10 23:49:46.201
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package com.example.EMSbackend.Service;

import java.util.ArrayList;
import java.util.List;
import java.util.Optional;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import com.example.EMSbackend.DTO.EMSGetAllDTO;
import com.example.EMSbackend.DTO.EMSInsertMultipleRequestDTO;
import com.example.EMSbackend.DTO.EMSInsertMultipleResponseDTO;
import com.example.EMSbackend.DTO.EMSInsertSingleRequestDTO;
import com.example.EMSbackend.DTO.EMSInsertSingleResponseDTO;
import com.example.EMSbackend.DTO.EMSUpdateRequestDTO;
import com.example.EMSbackend.DTO.EMSUpdateResponseDTO;
import com.example.EMSbackend.Model.EMSModel;
import com.example.EMSbackend.Repository.EMSRepository;

import lombok.extern.slf4j.Slf4j;

@Slf4j
@Service
public class EMSService {

	@Autowired
	private EMSRepository emsRepository;
	
	
//GET_ALL_EMPLOYEE_DETAILS
    public EMSGetAllDTO getEmployeeDetailsAll() {
    	EMSGetAllDTO response = new EMSGetAllDTO();
    
    	
    	//try { 	
    	List<EMSModel> modelDetails = (List<EMSModel>) emsRepository.findAll();
    	response.setEmployeeDetailsAll(modelDetails);
    	
    	/*if(modelDetails!=null) {
    		response.setEmployeeDetailsAll(modelDetails);
    	}
    	else {
    		System.out.println("Employee not found");
    		//log.info("Service response not found");
    	}
    	
    	}catch (Exception e) {
            System.out.println("Error while fetching employee list: " + e.getMessage());
            e.printStackTrace();
        }*/
    	    
    	return response;
    }
    
//INSERT_ALL_EMPLOYEE_DETAILS(SINGLE_DATA/NOT_LIST)
    public EMSInsertSingleResponseDTO insertEmployeeDetails(EMSInsertSingleRequestDTO requestData) {
    	EMSInsertSingleResponseDTO response = new EMSInsertSingleResponseDTO();
    	String message = "FAILURE";
    	List<EMSModel> entityList = new ArrayList<>();
  
    	try {
    	if (requestData != null) {
    		EMSModel entity = new EMSModel();
    		entity.setId(requestData.getId());
			entity.setRid(requestData.getRid());
			entity.setName(requestData.getName());
			entity.setParentName(requestData.getParentName());
			entity.setStreamName(requestData.getStreamName());
			entity.setDOB(requestData.getDOB());
			entity.setPOY(requestData.getPOY());
			entity.setMobileNumber(requestData.getMobileNumber());
			entity.setMailID(requestData.getMailID());
			entity.setAddress(requestData.getAddress());
			entity.setStatus(requestData.getStatus());
			 
			c
   
			List<EMSModel> savedEntities = emsRepository.saveAll(entityList);
			if (savedEntities != null && !savedEntities.isEmpty()) {
	            message = "SUCCESS";
	            response.setMessage(message);
	            response.setCode("200 OK");
	        } else {
	            response.setMessage("Insert failed");
	            response.setCode("500 INTERNAL SERVER ERROR");
	        }
    	}else {
            response.setMessage("Input list is null or empty");
            response.setCode("400 BAD REQUEST");
        }
    	}catch (Exception e) {
    		e.printStackTrace();
    		response.setMessage("Exception occurred");
            response.setCode("500 INTERNAL SERVER ERROR");
    	}
  
    	return response;
    	
    }
    
    
   
//INSERT_ALL_EMPLOYEE_DETAILS(MULTIPLE/LIST)
    
    public EMSInsertMultipleResponseDTO insertEmployeeDetailsAll(EMSInsertMultipleRequestDTO insertData) {
    	EMSInsertMultipleResponseDTO response = new EMSInsertMultipleResponseDTO();
    	String message = "FAILURE";
    	
    	try {
    		List<EMSModel> dtoList = insertData.getEmployeeDetailsRequestAll();
 
    		if (dtoList != null && !dtoList.isEmpty()) {
    			
    			List<EMSModel> entityList = new ArrayList<>();
    			
    			for (EMSModel dto : dtoList){
    				
    			EMSModel entity = new EMSModel();
    			 entity.setId(dto.getId());
    			 entity.setRid(dto.getRid());
    			 entity.setName(dto.getName());
    			 entity.setParentName(dto.getParentName());
    			 entity.setStreamName(dto.getStreamName());
    			 entity.setDOB(dto.getDOB());
    			 entity.setPOY(dto.getPOY());
    			 entity.setMobileNumber(dto.getMobileNumber());
    			 entity.setMailID(dto.getMailID());
    			 entity.setAddress(dto.getAddress());
    			 entity.setStatus(dto.getStatus());
    			 
    			 entityList.add(entity);
    			}
    			
    			List<EMSModel> savedEntities = emsRepository.saveAll(entityList);
                

                if (savedEntities != null && !savedEntities.isEmpty()) {
                    message = "SUCCESS";
                    response.setMessage(message);
                    response.setCode("200 OK");
                } else {
                    response.setMessage("Insert failed");
                    response.setCode("500 INTERNAL SERVER ERROR");
                }
    			
    		}else {
    			response.setMessage("Input list is null or empty");
                response.setCode("400 BAD REQUEST");
    		}
    	}catch (Exception e) {
    		e.printStackTrace();
    		response.setMessage("Exception occurred");
            response.setCode("500 INTERNAL SERVER ERROR");
    	}
    	return response;
    }
    
//UPDATE
    public EMSUpdateResponseDTO updateEmployeeDetails(EMSUpdateRequestDTO insertData) {
    	EMSUpdateResponseDTO response =new EMSUpdateResponseDTO();
    	List<EMSModel> saveEntities =  new ArrayList<>();
    	try {
    		Optional<EMSModel> dbResponse = emsRepository.findById(insertData.getId());
    		if(dbResponse.isPresent()) {
    			EMSModel entity = new EMSModel();
    			
    			if(insertData.getId()!=null && insertData.getRid()!=null) {
    			
    				entity.setId(dbResponse.get().getId());
    				entity.setRid(insertData.getRid());
    				entity.setName(dbResponse.get().getName());
    				entity.setParentName(dbResponse.get().getParentName());
    				entity.setStreamName(dbResponse.get().getStreamName());
    				entity.setDOB(dbResponse.get().getDOB());
    				entity.setPOY(dbResponse.get().getPOY());
    				entity.setMobileNumber(dbResponse.get().getMobileNumber());
    				entity.setMailID(dbResponse.get().getMailID());
    				entity.setAddress(dbResponse.get().getAddress());
    				entity.setStatus(dbResponse.get().getStatus());
    				
    				saveEntities.add(entity);
    				
    				
    			}else if(insertData.getId()!=null && insertData.getName()!=null) {
    				entity.setId(dbResponse.get().getId());
    				entity.setRid(dbResponse.get().getRid());
    				entity.setName(insertData.getName());
    				entity.setParentName(dbResponse.get().getParentName());
    				entity.setStreamName(dbResponse.get().getStreamName());
    				entity.setDOB(dbResponse.get().getDOB());
    				entity.setPOY(dbResponse.get().getPOY());
    				entity.setMobileNumber(dbResponse.get().getMobileNumber());
    				entity.setMailID(dbResponse.get().getMailID());
    				entity.setAddress(dbResponse.get().getAddress());
    				entity.setStatus(dbResponse.get().getStatus());
    				
    				saveEntities.add(entity);
    			}else if(insertData.getId()!=null && insertData.getParentName()!=null) {
    				entity.setId(dbResponse.get().getId());
    				entity.setRid(dbResponse.get().getRid());
    				entity.setName(dbResponse.get().getName());
    				entity.setParentName(insertData.getParentName());
    				entity.setStreamName(dbResponse.get().getStreamName());
    				entity.setDOB(dbResponse.get().getDOB());
    				entity.setPOY(dbResponse.get().getPOY());
    				entity.setMobileNumber(dbResponse.get().getMobileNumber());
    				entity.setMailID(dbResponse.get().getMailID());
    				entity.setAddress(dbResponse.get().getAddress());
    				entity.setStatus(dbResponse.get().getStatus());
    				
    				saveEntities.add(entity);
    			}else if(insertData.getId()!=null && insertData.getStreamName()!=null) {
    				
    			}else if(insertData.getId()!=null && insertData.getDOB()!=null) {
    				
    			}else if(insertData.getId()!=null && insertData.getPOY()!=null) {
    				
    			}else if(insertData.getId()!=null && insertData.getMobileNumber()!=null) {
    				
    			}else if(insertData.getId()!=null && insertData.getMailID()!=null) {
    				
    			}else if(insertData.getId()!=null && insertData.getAddress()!=null) {
    				
    			}else (insertData.getId()!=null && insertData.getStatus()!=null) {
    				
    			}
    			
    		}
    	}catch() {
    		
    	}
    }
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2038)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2243)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3278)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3055)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:540)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:132)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:94)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:91)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:158)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)

!ENTRY org.eclipse.jdt.ui 4 2 2025-06-10 23:49:46.208
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2038)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2243)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3278)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3055)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:540)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:132)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:94)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:91)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:158)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)

!ENTRY org.eclipse.jdt.ui 4 0 2025-06-10 23:49:46.212
!MESSAGE Error in JDT Core during reconcile
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2038)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2243)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3278)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3055)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:540)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:132)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:94)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:91)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:158)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)

!ENTRY org.eclipse.jdt.core 4 4 2025-06-10 23:49:46.244
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package com.example.EMSbackend.Service;

import java.util.ArrayList;
import java.util.List;
import java.util.Optional;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import com.example.EMSbackend.DTO.EMSGetAllDTO;
import com.example.EMSbackend.DTO.EMSInsertMultipleRequestDTO;
import com.example.EMSbackend.DTO.EMSInsertMultipleResponseDTO;
import com.example.EMSbackend.DTO.EMSInsertSingleRequestDTO;
import com.example.EMSbackend.DTO.EMSInsertSingleResponseDTO;
import com.example.EMSbackend.DTO.EMSUpdateRequestDTO;
import com.example.EMSbackend.DTO.EMSUpdateResponseDTO;
import com.example.EMSbackend.Model.EMSModel;
import com.example.EMSbackend.Repository.EMSRepository;

import lombok.extern.slf4j.Slf4j;

@Slf4j
@Service
public class EMSService {

	@Autowired
	private EMSRepository emsRepository;
	
	
//GET_ALL_EMPLOYEE_DETAILS
    public EMSGetAllDTO getEmployeeDetailsAll() {
    	EMSGetAllDTO response = new EMSGetAllDTO();
    
    	
    	//try { 	
    	List<EMSModel> modelDetails = (List<EMSModel>) emsRepository.findAll();
    	response.setEmployeeDetailsAll(modelDetails);
    	
    	/*if(modelDetails!=null) {
    		response.setEmployeeDetailsAll(modelDetails);
    	}
    	else {
    		System.out.println("Employee not found");
    		//log.info("Service response not found");
    	}
    	
    	}catch (Exception e) {
            System.out.println("Error while fetching employee list: " + e.getMessage());
            e.printStackTrace();
        }*/
    	    
    	return response;
    }
    
//INSERT_ALL_EMPLOYEE_DETAILS(SINGLE_DATA/NOT_LIST)
    public EMSInsertSingleResponseDTO insertEmployeeDetails(EMSInsertSingleRequestDTO requestData) {
    	EMSInsertSingleResponseDTO response = new EMSInsertSingleResponseDTO();
    	String message = "FAILURE";
    	List<EMSModel> entityList = new ArrayList<>();
  
    	try {
    	if (requestData != null) {
    		EMSModel entity = new EMSModel();
    		entity.setId(requestData.getId());
			entity.setRid(requestData.getRid());
			entity.setName(requestData.getName());
			entity.setParentName(requestData.getParentName());
			entity.setStreamName(requestData.getStreamName());
			entity.setDOB(requestData.getDOB());
			entity.setPOY(requestData.getPOY());
			entity.setMobileNumber(requestData.getMobileNumber());
			entity.setMailID(requestData.getMailID());
			entity.setAddress(requestData.getAddress());
			entity.setStatus(requestData.getStatus());
			 
			c
   
			List<EMSModel> savedEntities = emsRepository.saveAll(entityList);
			if (savedEntities != null && !savedEntities.isEmpty()) {
	            message = "SUCCESS";
	            response.setMessage(message);
	            response.setCode("200 OK");
	        } else {
	            response.setMessage("Insert failed");
	            response.setCode("500 INTERNAL SERVER ERROR");
	        }
    	}else {
            response.setMessage("Input list is null or empty");
            response.setCode("400 BAD REQUEST");
        }
    	}catch (Exception e) {
    		e.printStackTrace();
    		response.setMessage("Exception occurred");
            response.setCode("500 INTERNAL SERVER ERROR");
    	}
  
    	return response;
    	
    }
    
    
   
//INSERT_ALL_EMPLOYEE_DETAILS(MULTIPLE/LIST)
    
    public EMSInsertMultipleResponseDTO insertEmployeeDetailsAll(EMSInsertMultipleRequestDTO insertData) {
    	EMSInsertMultipleResponseDTO response = new EMSInsertMultipleResponseDTO();
    	String message = "FAILURE";
    	
    	try {
    		List<EMSModel> dtoList = insertData.getEmployeeDetailsRequestAll();
 
    		if (dtoList != null && !dtoList.isEmpty()) {
    			
    			List<EMSModel> entityList = new ArrayList<>();
    			
    			for (EMSModel dto : dtoList){
    				
    			EMSModel entity = new EMSModel();
    			 entity.setId(dto.getId());
    			 entity.setRid(dto.getRid());
    			 entity.setName(dto.getName());
    			 entity.setParentName(dto.getParentName());
    			 entity.setStreamName(dto.getStreamName());
    			 entity.setDOB(dto.getDOB());
    			 entity.setPOY(dto.getPOY());
    			 entity.setMobileNumber(dto.getMobileNumber());
    			 entity.setMailID(dto.getMailID());
    			 entity.setAddress(dto.getAddress());
    			 entity.setStatus(dto.getStatus());
    			 
    			 entityList.add(entity);
    			}
    			
    			List<EMSModel> savedEntities = emsRepository.saveAll(entityList);
                

                if (savedEntities != null && !savedEntities.isEmpty()) {
                    message = "SUCCESS";
                    response.setMessage(message);
                    response.setCode("200 OK");
                } else {
                    response.setMessage("Insert failed");
                    response.setCode("500 INTERNAL SERVER ERROR");
                }
    			
    		}else {
    			response.setMessage("Input list is null or empty");
                response.setCode("400 BAD REQUEST");
    		}
    	}catch (Exception e) {
    		e.printStackTrace();
    		response.setMessage("Exception occurred");
            response.setCode("500 INTERNAL SERVER ERROR");
    	}
    	return response;
    }
    
//UPDATE
    public EMSUpdateResponseDTO updateEmployeeDetails(EMSUpdateRequestDTO insertData) {
    	EMSUpdateResponseDTO response =new EMSUpdateResponseDTO();
    	List<EMSModel> saveEntities =  new ArrayList<>();
    	try {
    		Optional<EMSModel> dbResponse = emsRepository.findById(insertData.getId());
    		if(dbResponse.isPresent()) {
    			EMSModel entity = new EMSModel();
    			
    			if(insertData.getId()!=null && insertData.getRid()!=null) {
    			
    				entity.setId(dbResponse.get().getId());
    				entity.setRid(insertData.getRid());
    				entity.setName(dbResponse.get().getName());
    				entity.setParentName(dbResponse.get().getParentName());
    				entity.setStreamName(dbResponse.get().getStreamName());
    				entity.setDOB(dbResponse.get().getDOB());
    				entity.setPOY(dbResponse.get().getPOY());
    				entity.setMobileNumber(dbResponse.get().getMobileNumber());
    				entity.setMailID(dbResponse.get().getMailID());
    				entity.setAddress(dbResponse.get().getAddress());
    				entity.setStatus(dbResponse.get().getStatus());
    				
    				saveEntities.add(entity);
    				
    				
    			}else if(insertData.getId()!=null && insertData.getName()!=null) {
    				entity.setId(dbResponse.get().getId());
    				entity.setRid(dbResponse.get().getRid());
    				entity.setName(insertData.getName());
    				entity.setParentName(dbResponse.get().getParentName());
    				entity.setStreamName(dbResponse.get().getStreamName());
    				entity.setDOB(dbResponse.get().getDOB());
    				entity.setPOY(dbResponse.get().getPOY());
    				entity.setMobileNumber(dbResponse.get().getMobileNumber());
    				entity.setMailID(dbResponse.get().getMailID());
    				entity.setAddress(dbResponse.get().getAddress());
    				entity.setStatus(dbResponse.get().getStatus());
    				
    				saveEntities.add(entity);
    			}else if(insertData.getId()!=null && insertData.getParentName()!=null) {
    				entity.setId(dbResponse.get().getId());
    				entity.setRid(dbResponse.get().getRid());
    				entity.setName(dbResponse.get().getName());
    				entity.setParentName(insertData.getParentName());
    				entity.setStreamName(dbResponse.get().getStreamName());
    				entity.setDOB(dbResponse.get().getDOB());
    				entity.setPOY(dbResponse.get().getPOY());
    				entity.setMobileNumber(dbResponse.get().getMobileNumber());
    				entity.setMailID(dbResponse.get().getMailID());
    				entity.setAddress(dbResponse.get().getAddress());
    				entity.setStatus(dbResponse.get().getStatus());
    				
    				saveEntities.add(entity);
    			}else if(insertData.getId()!=null && insertData.getStreamName()!=null) {
    				
    			}else if(insertData.getId()!=null && insertData.getDOB()!=null) {
    				
    			}else if(insertData.getId()!=null && insertData.getPOY()!=null) {
    				
    			}else if(insertData.getId()!=null && insertData.getMobileNumber()!=null) {
    				
    			}else if(insertData.getId()!=null && insertData.getMailID()!=null) {
    				
    			}else if(insertData.getId()!=null && insertData.getAddress()!=null) {
    				
    			}else (insertData.getId()!=null && insertData.getStatus()!=null) {
    				
    			}
    			
    		}
    	}catch() {
    		
    	}
    }
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2038)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2243)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3278)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3055)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:189)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2025-06-10 23:49:46.249
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2038)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2243)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3278)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3055)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:189)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2025-06-10 23:49:46.251
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2038)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2243)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3278)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3055)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:189)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core 4 4 2025-06-10 23:49:48.577
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package com.example.EMSbackend.Service;

import java.util.ArrayList;
import java.util.List;
import java.util.Optional;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import com.example.EMSbackend.DTO.EMSGetAllDTO;
import com.example.EMSbackend.DTO.EMSInsertMultipleRequestDTO;
import com.example.EMSbackend.DTO.EMSInsertMultipleResponseDTO;
import com.example.EMSbackend.DTO.EMSInsertSingleRequestDTO;
import com.example.EMSbackend.DTO.EMSInsertSingleResponseDTO;
import com.example.EMSbackend.DTO.EMSUpdateRequestDTO;
import com.example.EMSbackend.DTO.EMSUpdateResponseDTO;
import com.example.EMSbackend.Model.EMSModel;
import com.example.EMSbackend.Repository.EMSRepository;

import lombok.extern.slf4j.Slf4j;

@Slf4j
@Service
public class EMSService {

	@Autowired
	private EMSRepository emsRepository;
	
	
//GET_ALL_EMPLOYEE_DETAILS
    public EMSGetAllDTO getEmployeeDetailsAll() {
    	EMSGetAllDTO response = new EMSGetAllDTO();
    
    	
    	//try { 	
    	List<EMSModel> modelDetails = (List<EMSModel>) emsRepository.findAll();
    	response.setEmployeeDetailsAll(modelDetails);
    	
    	/*if(modelDetails!=null) {
    		response.setEmployeeDetailsAll(modelDetails);
    	}
    	else {
    		System.out.println("Employee not found");
    		//log.info("Service response not found");
    	}
    	
    	}catch (Exception e) {
            System.out.println("Error while fetching employee list: " + e.getMessage());
            e.printStackTrace();
        }*/
    	    
    	return response;
    }
    
//INSERT_ALL_EMPLOYEE_DETAILS(SINGLE_DATA/NOT_LIST)
    public EMSInsertSingleResponseDTO insertEmployeeDetails(EMSInsertSingleRequestDTO requestData) {
    	EMSInsertSingleResponseDTO response = new EMSInsertSingleResponseDTO();
    	String message = "FAILURE";
    	List<EMSModel> entityList = new ArrayList<>();
  
    	try {
    	if (requestData != null) {
    		EMSModel entity = new EMSModel();
    		entity.setId(requestData.getId());
			entity.setRid(requestData.getRid());
			entity.setName(requestData.getName());
			entity.setParentName(requestData.getParentName());
			entity.setStreamName(requestData.getStreamName());
			entity.setDOB(requestData.getDOB());
			entity.setPOY(requestData.getPOY());
			entity.setMobileNumber(requestData.getMobileNumber());
			entity.setMailID(requestData.getMailID());
			entity.setAddress(requestData.getAddress());
			entity.setStatus(requestData.getStatus());
			 
			c
   
			List<EMSModel> savedEntities = emsRepository.saveAll(entityList);
			if (savedEntities != null && !savedEntities.isEmpty()) {
	            message = "SUCCESS";
	            response.setMessage(message);
	            response.setCode("200 OK");
	        } else {
	            response.setMessage("Insert failed");
	            response.setCode("500 INTERNAL SERVER ERROR");
	        }
    	}else {
            response.setMessage("Input list is null or empty");
            response.setCode("400 BAD REQUEST");
        }
    	}catch (Exception e) {
    		e.printStackTrace();
    		response.setMessage("Exception occurred");
            response.setCode("500 INTERNAL SERVER ERROR");
    	}
  
    	return response;
    	
    }
    
    
   
//INSERT_ALL_EMPLOYEE_DETAILS(MULTIPLE/LIST)
    
    public EMSInsertMultipleResponseDTO insertEmployeeDetailsAll(EMSInsertMultipleRequestDTO insertData) {
    	EMSInsertMultipleResponseDTO response = new EMSInsertMultipleResponseDTO();
    	String message = "FAILURE";
    	
    	try {
    		List<EMSModel> dtoList = insertData.getEmployeeDetailsRequestAll();
 
    		if (dtoList != null && !dtoList.isEmpty()) {
    			
    			List<EMSModel> entityList = new ArrayList<>();
    			
    			for (EMSModel dto : dtoList){
    				
    			EMSModel entity = new EMSModel();
    			 entity.setId(dto.getId());
    			 entity.setRid(dto.getRid());
    			 entity.setName(dto.getName());
    			 entity.setParentName(dto.getParentName());
    			 entity.setStreamName(dto.getStreamName());
    			 entity.setDOB(dto.getDOB());
    			 entity.setPOY(dto.getPOY());
    			 entity.setMobileNumber(dto.getMobileNumber());
    			 entity.setMailID(dto.getMailID());
    			 entity.setAddress(dto.getAddress());
    			 entity.setStatus(dto.getStatus());
    			 
    			 entityList.add(entity);
    			}
    			
    			List<EMSModel> savedEntities = emsRepository.saveAll(entityList);
                

                if (savedEntities != null && !savedEntities.isEmpty()) {
                    message = "SUCCESS";
                    response.setMessage(message);
                    response.setCode("200 OK");
                } else {
                    response.setMessage("Insert failed");
                    response.setCode("500 INTERNAL SERVER ERROR");
                }
    			
    		}else {
    			response.setMessage("Input list is null or empty");
                response.setCode("400 BAD REQUEST");
    		}
    	}catch (Exception e) {
    		e.printStackTrace();
    		response.setMessage("Exception occurred");
            response.setCode("500 INTERNAL SERVER ERROR");
    	}
    	return response;
    }
    
//UPDATE
    public EMSUpdateResponseDTO updateEmployeeDetails(EMSUpdateRequestDTO insertData) {
    	EMSUpdateResponseDTO response =new EMSUpdateResponseDTO();
    	List<EMSModel> saveEntities =  new ArrayList<>();
    	try {
    		Optional<EMSModel> dbResponse = emsRepository.findById(insertData.getId());
    		if(dbResponse.isPresent()) {
    			EMSModel entity = new EMSModel();
    			
    			if(insertData.getId()!=null && insertData.getRid()!=null) {
    			
    				entity.setId(dbResponse.get().getId());
    				entity.setRid(insertData.getRid());
    				entity.setName(dbResponse.get().getName());
    				entity.setParentName(dbResponse.get().getParentName());
    				entity.setStreamName(dbResponse.get().getStreamName());
    				entity.setDOB(dbResponse.get().getDOB());
    				entity.setPOY(dbResponse.get().getPOY());
    				entity.setMobileNumber(dbResponse.get().getMobileNumber());
    				entity.setMailID(dbResponse.get().getMailID());
    				entity.setAddress(dbResponse.get().getAddress());
    				entity.setStatus(dbResponse.get().getStatus());
    				
    				saveEntities.add(entity);
    				
    				
    			}else if(insertData.getId()!=null && insertData.getName()!=null) {
    				entity.setId(dbResponse.get().getId());
    				entity.setRid(dbResponse.get().getRid());
    				entity.setName(insertData.getName());
    				entity.setParentName(dbResponse.get().getParentName());
    				entity.setStreamName(dbResponse.get().getStreamName());
    				entity.setDOB(dbResponse.get().getDOB());
    				entity.setPOY(dbResponse.get().getPOY());
    				entity.setMobileNumber(dbResponse.get().getMobileNumber());
    				entity.setMailID(dbResponse.get().getMailID());
    				entity.setAddress(dbResponse.get().getAddress());
    				entity.setStatus(dbResponse.get().getStatus());
    				
    				saveEntities.add(entity);
    			}else if(insertData.getId()!=null && insertData.getParentName()!=null) {
    				entity.setId(dbResponse.get().getId());
    				entity.setRid(dbResponse.get().getRid());
    				entity.setName(dbResponse.get().getName());
    				entity.setParentName(insertData.getParentName());
    				entity.setStreamName(dbResponse.get().getStreamName());
    				entity.setDOB(dbResponse.get().getDOB());
    				entity.setPOY(dbResponse.get().getPOY());
    				entity.setMobileNumber(dbResponse.get().getMobileNumber());
    				entity.setMailID(dbResponse.get().getMailID());
    				entity.setAddress(dbResponse.get().getAddress());
    				entity.setStatus(dbResponse.get().getStatus());
    				
    				saveEntities.add(entity);
    			}else if(insertData.getId()!=null && insertData.getStreamName()!=null) {
    				
    			}else if(insertData.getId()!=null && insertData.getDOB()!=null) {
    				
    			}else if(insertData.getId()!=null && insertData.getPOY()!=null) {
    				
    			}else if(insertData.getId()!=null && insertData.getMobileNumber()!=null) {
    				
    			}else if(insertData.getId()!=null && insertData.getMailID()!=null) {
    				
    			}else if(insertData.getId()!=null && insertData.getAddress()!=null) {
    				
    			}else (insertData.getId()!=null && insertData.getStatus()!=null) {
    				
    			}
    			
    		}
    	}catch() {
    		
    	}
    }
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2038)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2243)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3278)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3055)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2025-06-10 23:49:48.581
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2038)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2243)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3278)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3055)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2025-06-10 23:49:48.584
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2038)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2243)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3278)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3055)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core 4 4 2025-06-10 23:49:51.020
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package com.example.EMSbackend.Service;

import java.util.ArrayList;
import java.util.List;
import java.util.Optional;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import com.example.EMSbackend.DTO.EMSGetAllDTO;
import com.example.EMSbackend.DTO.EMSInsertMultipleRequestDTO;
import com.example.EMSbackend.DTO.EMSInsertMultipleResponseDTO;
import com.example.EMSbackend.DTO.EMSInsertSingleRequestDTO;
import com.example.EMSbackend.DTO.EMSInsertSingleResponseDTO;
import com.example.EMSbackend.DTO.EMSUpdateRequestDTO;
import com.example.EMSbackend.DTO.EMSUpdateResponseDTO;
import com.example.EMSbackend.Model.EMSModel;
import com.example.EMSbackend.Repository.EMSRepository;

import lombok.extern.slf4j.Slf4j;

@Slf4j
@Service
public class EMSService {

	@Autowired
	private EMSRepository emsRepository;
	
	
//GET_ALL_EMPLOYEE_DETAILS
    public EMSGetAllDTO getEmployeeDetailsAll() {
    	EMSGetAllDTO response = new EMSGetAllDTO();
    
    	
    	//try { 	
    	List<EMSModel> modelDetails = (List<EMSModel>) emsRepository.findAll();
    	response.setEmployeeDetailsAll(modelDetails);
    	
    	/*if(modelDetails!=null) {
    		response.setEmployeeDetailsAll(modelDetails);
    	}
    	else {
    		System.out.println("Employee not found");
    		//log.info("Service response not found");
    	}
    	
    	}catch (Exception e) {
            System.out.println("Error while fetching employee list: " + e.getMessage());
            e.printStackTrace();
        }*/
    	    
    	return response;
    }
    
//INSERT_ALL_EMPLOYEE_DETAILS(SINGLE_DATA/NOT_LIST)
    public EMSInsertSingleResponseDTO insertEmployeeDetails(EMSInsertSingleRequestDTO requestData) {
    	EMSInsertSingleResponseDTO response = new EMSInsertSingleResponseDTO();
    	String message = "FAILURE";
    	List<EMSModel> entityList = new ArrayList<>();
  
    	try {
    	if (requestData != null) {
    		EMSModel entity = new EMSModel();
    		entity.setId(requestData.getId());
			entity.setRid(requestData.getRid());
			entity.setName(requestData.getName());
			entity.setParentName(requestData.getParentName());
			entity.setStreamName(requestData.getStreamName());
			entity.setDOB(requestData.getDOB());
			entity.setPOY(requestData.getPOY());
			entity.setMobileNumber(requestData.getMobileNumber());
			entity.setMailID(requestData.getMailID());
			entity.setAddress(requestData.getAddress());
			entity.setStatus(requestData.getStatus());
			 
			c
   
			List<EMSModel> savedEntities = emsRepository.saveAll(entityList);
			if (savedEntities != null && !savedEntities.isEmpty()) {
	            message = "SUCCESS";
	            response.setMessage(message);
	            response.setCode("200 OK");
	        } else {
	            response.setMessage("Insert failed");
	            response.setCode("500 INTERNAL SERVER ERROR");
	        }
    	}else {
            response.setMessage("Input list is null or empty");
            response.setCode("400 BAD REQUEST");
        }
    	}catch (Exception e) {
    		e.printStackTrace();
    		response.setMessage("Exception occurred");
            response.setCode("500 INTERNAL SERVER ERROR");
    	}
  
    	return response;
    	
    }
    
    
   
//INSERT_ALL_EMPLOYEE_DETAILS(MULTIPLE/LIST)
    
    public EMSInsertMultipleResponseDTO insertEmployeeDetailsAll(EMSInsertMultipleRequestDTO insertData) {
    	EMSInsertMultipleResponseDTO response = new EMSInsertMultipleResponseDTO();
    	String message = "FAILURE";
    	
    	try {
    		List<EMSModel> dtoList = insertData.getEmployeeDetailsRequestAll();
 
    		if (dtoList != null && !dtoList.isEmpty()) {
    			
    			List<EMSModel> entityList = new ArrayList<>();
    			
    			for (EMSModel dto : dtoList){
    				
    			EMSModel entity = new EMSModel();
    			 entity.setId(dto.getId());
    			 entity.setRid(dto.getRid());
    			 entity.setName(dto.getName());
    			 entity.setParentName(dto.getParentName());
    			 entity.setStreamName(dto.getStreamName());
    			 entity.setDOB(dto.getDOB());
    			 entity.setPOY(dto.getPOY());
    			 entity.setMobileNumber(dto.getMobileNumber());
    			 entity.setMailID(dto.getMailID());
    			 entity.setAddress(dto.getAddress());
    			 entity.setStatus(dto.getStatus());
    			 
    			 entityList.add(entity);
    			}
    			
    			List<EMSModel> savedEntities = emsRepository.saveAll(entityList);
                

                if (savedEntities != null && !savedEntities.isEmpty()) {
                    message = "SUCCESS";
                    response.setMessage(message);
                    response.setCode("200 OK");
                } else {
                    response.setMessage("Insert failed");
                    response.setCode("500 INTERNAL SERVER ERROR");
                }
    			
    		}else {
    			response.setMessage("Input list is null or empty");
                response.setCode("400 BAD REQUEST");
    		}
    	}catch (Exception e) {
    		e.printStackTrace();
    		response.setMessage("Exception occurred");
            response.setCode("500 INTERNAL SERVER ERROR");
    	}
    	return response;
    }
    
//UPDATE
    public EMSUpdateResponseDTO updateEmployeeDetails(EMSUpdateRequestDTO insertData) {
    	EMSUpdateResponseDTO response =new EMSUpdateResponseDTO();
    	List<EMSModel> saveEntities =  new ArrayList<>();
    	try {
    		Optional<EMSModel> dbResponse = emsRepository.findById(insertData.getId());
    		if(dbResponse.isPresent()) {
    			EMSModel entity = new EMSModel();
    			
    			if(insertData.getId()!=null && insertData.getRid()!=null) {
    			
    				entity.setId(dbResponse.get().getId());
    				entity.setRid(insertData.getRid());
    				entity.setName(dbResponse.get().getName());
    				entity.setParentName(dbResponse.get().getParentName());
    				entity.setStreamName(dbResponse.get().getStreamName());
    				entity.setDOB(dbResponse.get().getDOB());
    				entity.setPOY(dbResponse.get().getPOY());
    				entity.setMobileNumber(dbResponse.get().getMobileNumber());
    				entity.setMailID(dbResponse.get().getMailID());
    				entity.setAddress(dbResponse.get().getAddress());
    				entity.setStatus(dbResponse.get().getStatus());
    				
    				saveEntities.add(entity);
    				
    				
    			}else if(insertData.getId()!=null && insertData.getName()!=null) {
    				entity.setId(dbResponse.get().getId());
    				entity.setRid(dbResponse.get().getRid());
    				entity.setName(insertData.getName());
    				entity.setParentName(dbResponse.get().getParentName());
    				entity.setStreamName(dbResponse.get().getStreamName());
    				entity.setDOB(dbResponse.get().getDOB());
    				entity.setPOY(dbResponse.get().getPOY());
    				entity.setMobileNumber(dbResponse.get().getMobileNumber());
    				entity.setMailID(dbResponse.get().getMailID());
    				entity.setAddress(dbResponse.get().getAddress());
    				entity.setStatus(dbResponse.get().getStatus());
    				
    				saveEntities.add(entity);
    			}else if(insertData.getId()!=null && insertData.getParentName()!=null) {
    				entity.setId(dbResponse.get().getId());
    				entity.setRid(dbResponse.get().getRid());
    				entity.setName(dbResponse.get().getName());
    				entity.setParentName(insertData.getParentName());
    				entity.setStreamName(dbResponse.get().getStreamName());
    				entity.setDOB(dbResponse.get().getDOB());
    				entity.setPOY(dbResponse.get().getPOY());
    				entity.setMobileNumber(dbResponse.get().getMobileNumber());
    				entity.setMailID(dbResponse.get().getMailID());
    				entity.setAddress(dbResponse.get().getAddress());
    				entity.setStatus(dbResponse.get().getStatus());
    				
    				saveEntities.add(entity);
    			}else if(insertData.getId()!=null && insertData.getStreamName()!=null) {
    				
    			}else if(insertData.getId()!=null && insertData.getDOB()!=null) {
    				
    			}else if(insertData.getId()!=null && insertData.getPOY()!=null) {
    				
    			}else if(insertData.getId()!=null && insertData.getMobileNumber()!=null) {
    				
    			}else if(insertData.getId()!=null && insertData.getMailID()!=null) {
    				
    			}else if(insertData.getId()!=null && insertData.getAddress()!=null) {
    				
    			}else (insertData.getId()!=null && insertData.getStatus()!=null) {
    				
    			}
    			
    		}
    	}catch() {
    		
    	}
    }
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2038)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2243)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3278)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3055)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2025-06-10 23:49:51.025
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2038)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2243)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3278)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3055)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2025-06-10 23:49:51.028
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2038)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2243)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3278)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3055)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core 4 4 2025-06-10 23:49:52.163
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package com.example.EMSbackend.Service;

import java.util.ArrayList;
import java.util.List;
import java.util.Optional;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import com.example.EMSbackend.DTO.EMSGetAllDTO;
import com.example.EMSbackend.DTO.EMSInsertMultipleRequestDTO;
import com.example.EMSbackend.DTO.EMSInsertMultipleResponseDTO;
import com.example.EMSbackend.DTO.EMSInsertSingleRequestDTO;
import com.example.EMSbackend.DTO.EMSInsertSingleResponseDTO;
import com.example.EMSbackend.DTO.EMSUpdateRequestDTO;
import com.example.EMSbackend.DTO.EMSUpdateResponseDTO;
import com.example.EMSbackend.Model.EMSModel;
import com.example.EMSbackend.Repository.EMSRepository;

import lombok.extern.slf4j.Slf4j;

@Slf4j
@Service
public class EMSService {

	@Autowired
	private EMSRepository emsRepository;
	
	
//GET_ALL_EMPLOYEE_DETAILS
    public EMSGetAllDTO getEmployeeDetailsAll() {
    	EMSGetAllDTO response = new EMSGetAllDTO();
    
    	
    	//try { 	
    	List<EMSModel> modelDetails = (List<EMSModel>) emsRepository.findAll();
    	response.setEmployeeDetailsAll(modelDetails);
    	
    	/*if(modelDetails!=null) {
    		response.setEmployeeDetailsAll(modelDetails);
    	}
    	else {
    		System.out.println("Employee not found");
    		//log.info("Service response not found");
    	}
    	
    	}catch (Exception e) {
            System.out.println("Error while fetching employee list: " + e.getMessage());
            e.printStackTrace();
        }*/
    	    
    	return response;
    }
    
//INSERT_ALL_EMPLOYEE_DETAILS(SINGLE_DATA/NOT_LIST)
    public EMSInsertSingleResponseDTO insertEmployeeDetails(EMSInsertSingleRequestDTO requestData) {
    	EMSInsertSingleResponseDTO response = new EMSInsertSingleResponseDTO();
    	String message = "FAILURE";
    	List<EMSModel> entityList = new ArrayList<>();
  
    	try {
    	if (requestData != null) {
    		EMSModel entity = new EMSModel();
    		entity.setId(requestData.getId());
			entity.setRid(requestData.getRid());
			entity.setName(requestData.getName());
			entity.setParentName(requestData.getParentName());
			entity.setStreamName(requestData.getStreamName());
			entity.setDOB(requestData.getDOB());
			entity.setPOY(requestData.getPOY());
			entity.setMobileNumber(requestData.getMobileNumber());
			entity.setMailID(requestData.getMailID());
			entity.setAddress(requestData.getAddress());
			entity.setStatus(requestData.getStatus());
			 
			c
   
			List<EMSModel> savedEntities = emsRepository.saveAll(entityList);
			if (savedEntities != null && !savedEntities.isEmpty()) {
	            message = "SUCCESS";
	            response.setMessage(message);
	            response.setCode("200 OK");
	        } else {
	            response.setMessage("Insert failed");
	            response.setCode("500 INTERNAL SERVER ERROR");
	        }
    	}else {
            response.setMessage("Input list is null or empty");
            response.setCode("400 BAD REQUEST");
        }
    	}catch (Exception e) {
    		e.printStackTrace();
    		response.setMessage("Exception occurred");
            response.setCode("500 INTERNAL SERVER ERROR");
    	}
  
    	return response;
    	
    }
    
    
   
//INSERT_ALL_EMPLOYEE_DETAILS(MULTIPLE/LIST)
    
    public EMSInsertMultipleResponseDTO insertEmployeeDetailsAll(EMSInsertMultipleRequestDTO insertData) {
    	EMSInsertMultipleResponseDTO response = new EMSInsertMultipleResponseDTO();
    	String message = "FAILURE";
    	
    	try {
    		List<EMSModel> dtoList = insertData.getEmployeeDetailsRequestAll();
 
    		if (dtoList != null && !dtoList.isEmpty()) {
    			
    			List<EMSModel> entityList = new ArrayList<>();
    			
    			for (EMSModel dto : dtoList){
    				
    			EMSModel entity = new EMSModel();
    			 entity.setId(dto.getId());
    			 entity.setRid(dto.getRid());
    			 entity.setName(dto.getName());
    			 entity.setParentName(dto.getParentName());
    			 entity.setStreamName(dto.getStreamName());
    			 entity.setDOB(dto.getDOB());
    			 entity.setPOY(dto.getPOY());
    			 entity.setMobileNumber(dto.getMobileNumber());
    			 entity.setMailID(dto.getMailID());
    			 entity.setAddress(dto.getAddress());
    			 entity.setStatus(dto.getStatus());
    			 
    			 entityList.add(entity);
    			}
    			
    			List<EMSModel> savedEntities = emsRepository.saveAll(entityList);
                

                if (savedEntities != null && !savedEntities.isEmpty()) {
                    message = "SUCCESS";
                    response.setMessage(message);
                    response.setCode("200 OK");
                } else {
                    response.setMessage("Insert failed");
                    response.setCode("500 INTERNAL SERVER ERROR");
                }
    			
    		}else {
    			response.setMessage("Input list is null or empty");
                response.setCode("400 BAD REQUEST");
    		}
    	}catch (Exception e) {
    		e.printStackTrace();
    		response.setMessage("Exception occurred");
            response.setCode("500 INTERNAL SERVER ERROR");
    	}
    	return response;
    }
    
//UPDATE
    public EMSUpdateResponseDTO updateEmployeeDetails(EMSUpdateRequestDTO insertData) {
    	EMSUpdateResponseDTO response =new EMSUpdateResponseDTO();
    	List<EMSModel> saveEntities =  new ArrayList<>();
    	try {
    		Optional<EMSModel> dbResponse = emsRepository.findById(insertData.getId());
    		if(dbResponse.isPresent()) {
    			EMSModel entity = new EMSModel();
    			
    			if(insertData.getId()!=null && insertData.getRid()!=null) {
    			
    				entity.setId(dbResponse.get().getId());
    				entity.setRid(insertData.getRid());
    				entity.setName(dbResponse.get().getName());
    				entity.setParentName(dbResponse.get().getParentName());
    				entity.setStreamName(dbResponse.get().getStreamName());
    				entity.setDOB(dbResponse.get().getDOB());
    				entity.setPOY(dbResponse.get().getPOY());
    				entity.setMobileNumber(dbResponse.get().getMobileNumber());
    				entity.setMailID(dbResponse.get().getMailID());
    				entity.setAddress(dbResponse.get().getAddress());
    				entity.setStatus(dbResponse.get().getStatus());
    				
    				saveEntities.add(entity);
    				
    				
    			}else if(insertData.getId()!=null && insertData.getName()!=null) {
    				entity.setId(dbResponse.get().getId());
    				entity.setRid(dbResponse.get().getRid());
    				entity.setName(insertData.getName());
    				entity.setParentName(dbResponse.get().getParentName());
    				entity.setStreamName(dbResponse.get().getStreamName());
    				entity.setDOB(dbResponse.get().getDOB());
    				entity.setPOY(dbResponse.get().getPOY());
    				entity.setMobileNumber(dbResponse.get().getMobileNumber());
    				entity.setMailID(dbResponse.get().getMailID());
    				entity.setAddress(dbResponse.get().getAddress());
    				entity.setStatus(dbResponse.get().getStatus());
    				
    				saveEntities.add(entity);
    			}else if(insertData.getId()!=null && insertData.getParentName()!=null) {
    				entity.setId(dbResponse.get().getId());
    				entity.setRid(dbResponse.get().getRid());
    				entity.setName(dbResponse.get().getName());
    				entity.setParentName(insertData.getParentName());
    				entity.setStreamName(dbResponse.get().getStreamName());
    				entity.setDOB(dbResponse.get().getDOB());
    				entity.setPOY(dbResponse.get().getPOY());
    				entity.setMobileNumber(dbResponse.get().getMobileNumber());
    				entity.setMailID(dbResponse.get().getMailID());
    				entity.setAddress(dbResponse.get().getAddress());
    				entity.setStatus(dbResponse.get().getStatus());
    				
    				saveEntities.add(entity);
    			}else if(insertData.getId()!=null && insertData.getStreamName()!=null) {
    				
    			}else if(insertData.getId()!=null && insertData.getDOB()!=null) {
    				
    			}else if(insertData.getId()!=null && insertData.getPOY()!=null) {
    				
    			}else if(insertData.getId()!=null && insertData.getMobileNumber()!=null) {
    				
    			}else if(insertData.getId()!=null && insertData.getMailID()!=null) {
    				
    			}else if(insertData.getId()!=null && insertData.getAddress()!=null) {
    				
    			}else (insertData.getId()!=null && insertData.getStatus()!=null) {
    				
    			}
    			
    		}
    	}catch() {
    		
    	}
    }
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2038)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2243)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3278)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3055)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.javaeditor.ClipboardOperationAction.getClipboardData(ClipboardOperationAction.java:479)
	at org.eclipse.jdt.internal.ui.javaeditor.ClipboardOperationAction.doCutCopyWithImportsOperation(ClipboardOperationAction.java:406)
	at org.eclipse.jdt.internal.ui.javaeditor.ClipboardOperationAction.internalDoOperation(ClipboardOperationAction.java:365)
	at org.eclipse.swt.custom.BusyIndicator.showWhile(BusyIndicator.java:74)
	at org.eclipse.jdt.internal.ui.javaeditor.ClipboardOperationAction.run(ClipboardOperationAction.java:286)
	at org.eclipse.jface.action.Action.runWithEvent(Action.java:474)
	at org.eclipse.jface.commands.ActionHandler.execute(ActionHandler.java:121)
	at org.eclipse.ui.internal.handlers.E4HandlerProxy.execute(E4HandlerProxy.java:97)
	at jdk.internal.reflect.GeneratedMethodAccessor97.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.eclipse.e4.core.internal.di.MethodRequestor.execute(MethodRequestor.java:58)
	at org.eclipse.e4.core.internal.di.InjectorImpl.invokeUsingClass(InjectorImpl.java:317)
	at org.eclipse.e4.core.internal.di.InjectorImpl.invoke(InjectorImpl.java:251)
	at org.eclipse.e4.core.contexts.ContextInjectionFactory.invoke(ContextInjectionFactory.java:173)
	at org.eclipse.e4.core.commands.internal.HandlerServiceHandler.execute(HandlerServiceHandler.java:156)
	at org.eclipse.core.commands.Command.executeWithChecks(Command.java:488)
	at org.eclipse.core.commands.ParameterizedCommand.executeWithChecks(ParameterizedCommand.java:485)
	at org.eclipse.e4.core.commands.internal.HandlerServiceImpl.executeHandler(HandlerServiceImpl.java:213)
	at org.eclipse.e4.ui.bindings.keys.KeyBindingDispatcher.executeCommand(KeyBindingDispatcher.java:308)
	at org.eclipse.e4.ui.bindings.keys.KeyBindingDispatcher.press(KeyBindingDispatcher.java:580)
	at org.eclipse.e4.ui.bindings.keys.KeyBindingDispatcher.processKeyEvent(KeyBindingDispatcher.java:647)
	at org.eclipse.e4.ui.bindings.keys.KeyBindingDispatcher.filterKeySequenceBindings(KeyBindingDispatcher.java:439)
	at org.eclipse.e4.ui.bindings.keys.KeyBindingDispatcher$KeyDownFilter.handleEvent(KeyBindingDispatcher.java:96)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:89)
	at org.eclipse.swt.widgets.Display.filterEvent(Display.java:1262)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1065)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1090)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1075)
	at org.eclipse.swt.widgets.Widget.sendKeyEvent(Widget.java:1117)
	at org.eclipse.swt.widgets.Widget.sendKeyEvent(Widget.java:1113)
	at org.eclipse.swt.widgets.Widget.wmChar(Widget.java:1542)
	at org.eclipse.swt.widgets.Control.WM_CHAR(Control.java:4868)
	at org.eclipse.swt.widgets.Canvas.WM_CHAR(Canvas.java:345)
	at org.eclipse.swt.widgets.Control.windowProc(Control.java:4746)
	at org.eclipse.swt.widgets.Canvas.windowProc(Canvas.java:340)
	at org.eclipse.swt.widgets.Display.windowProc(Display.java:5026)
	at org.eclipse.swt.internal.win32.OS.DispatchMessage(Native Method)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3643)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1155)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1046)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:155)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:644)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:551)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:156)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:152)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:203)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:136)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:402)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:255)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:659)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:596)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1467)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2025-06-10 23:49:52.166
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2038)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2243)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3278)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3055)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.javaeditor.ClipboardOperationAction.getClipboardData(ClipboardOperationAction.java:479)
	at org.eclipse.jdt.internal.ui.javaeditor.ClipboardOperationAction.doCutCopyWithImportsOperation(ClipboardOperationAction.java:406)
	at org.eclipse.jdt.internal.ui.javaeditor.ClipboardOperationAction.internalDoOperation(ClipboardOperationAction.java:365)
	at org.eclipse.swt.custom.BusyIndicator.showWhile(BusyIndicator.java:74)
	at org.eclipse.jdt.internal.ui.javaeditor.ClipboardOperationAction.run(ClipboardOperationAction.java:286)
	at org.eclipse.jface.action.Action.runWithEvent(Action.java:474)
	at org.eclipse.jface.commands.ActionHandler.execute(ActionHandler.java:121)
	at org.eclipse.ui.internal.handlers.E4HandlerProxy.execute(E4HandlerProxy.java:97)
	at jdk.internal.reflect.GeneratedMethodAccessor97.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.eclipse.e4.core.internal.di.MethodRequestor.execute(MethodRequestor.java:58)
	at org.eclipse.e4.core.internal.di.InjectorImpl.invokeUsingClass(InjectorImpl.java:317)
	at org.eclipse.e4.core.internal.di.InjectorImpl.invoke(InjectorImpl.java:251)
	at org.eclipse.e4.core.contexts.ContextInjectionFactory.invoke(ContextInjectionFactory.java:173)
	at org.eclipse.e4.core.commands.internal.HandlerServiceHandler.execute(HandlerServiceHandler.java:156)
	at org.eclipse.core.commands.Command.executeWithChecks(Command.java:488)
	at org.eclipse.core.commands.ParameterizedCommand.executeWithChecks(ParameterizedCommand.java:485)
	at org.eclipse.e4.core.commands.internal.HandlerServiceImpl.executeHandler(HandlerServiceImpl.java:213)
	at org.eclipse.e4.ui.bindings.keys.KeyBindingDispatcher.executeCommand(KeyBindingDispatcher.java:308)
	at org.eclipse.e4.ui.bindings.keys.KeyBindingDispatcher.press(KeyBindingDispatcher.java:580)
	at org.eclipse.e4.ui.bindings.keys.KeyBindingDispatcher.processKeyEvent(KeyBindingDispatcher.java:647)
	at org.eclipse.e4.ui.bindings.keys.KeyBindingDispatcher.filterKeySequenceBindings(KeyBindingDispatcher.java:439)
	at org.eclipse.e4.ui.bindings.keys.KeyBindingDispatcher$KeyDownFilter.handleEvent(KeyBindingDispatcher.java:96)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:89)
	at org.eclipse.swt.widgets.Display.filterEvent(Display.java:1262)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1065)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1090)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1075)
	at org.eclipse.swt.widgets.Widget.sendKeyEvent(Widget.java:1117)
	at org.eclipse.swt.widgets.Widget.sendKeyEvent(Widget.java:1113)
	at org.eclipse.swt.widgets.Widget.wmChar(Widget.java:1542)
	at org.eclipse.swt.widgets.Control.WM_CHAR(Control.java:4868)
	at org.eclipse.swt.widgets.Canvas.WM_CHAR(Canvas.java:345)
	at org.eclipse.swt.widgets.Control.windowProc(Control.java:4746)
	at org.eclipse.swt.widgets.Canvas.windowProc(Canvas.java:340)
	at org.eclipse.swt.widgets.Display.windowProc(Display.java:5026)
	at org.eclipse.swt.internal.win32.OS.DispatchMessage(Native Method)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3643)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1155)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1046)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:155)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:644)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:551)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:156)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:152)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:203)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:136)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:402)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:255)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:659)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:596)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1467)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2025-06-10 23:49:52.168
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2038)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2243)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3278)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3055)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.javaeditor.ClipboardOperationAction.getClipboardData(ClipboardOperationAction.java:479)
	at org.eclipse.jdt.internal.ui.javaeditor.ClipboardOperationAction.doCutCopyWithImportsOperation(ClipboardOperationAction.java:406)
	at org.eclipse.jdt.internal.ui.javaeditor.ClipboardOperationAction.internalDoOperation(ClipboardOperationAction.java:365)
	at org.eclipse.swt.custom.BusyIndicator.showWhile(BusyIndicator.java:74)
	at org.eclipse.jdt.internal.ui.javaeditor.ClipboardOperationAction.run(ClipboardOperationAction.java:286)
	at org.eclipse.jface.action.Action.runWithEvent(Action.java:474)
	at org.eclipse.jface.commands.ActionHandler.execute(ActionHandler.java:121)
	at org.eclipse.ui.internal.handlers.E4HandlerProxy.execute(E4HandlerProxy.java:97)
	at jdk.internal.reflect.GeneratedMethodAccessor97.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.eclipse.e4.core.internal.di.MethodRequestor.execute(MethodRequestor.java:58)
	at org.eclipse.e4.core.internal.di.InjectorImpl.invokeUsingClass(InjectorImpl.java:317)
	at org.eclipse.e4.core.internal.di.InjectorImpl.invoke(InjectorImpl.java:251)
	at org.eclipse.e4.core.contexts.ContextInjectionFactory.invoke(ContextInjectionFactory.java:173)
	at org.eclipse.e4.core.commands.internal.HandlerServiceHandler.execute(HandlerServiceHandler.java:156)
	at org.eclipse.core.commands.Command.executeWithChecks(Command.java:488)
	at org.eclipse.core.commands.ParameterizedCommand.executeWithChecks(ParameterizedCommand.java:485)
	at org.eclipse.e4.core.commands.internal.HandlerServiceImpl.executeHandler(HandlerServiceImpl.java:213)
	at org.eclipse.e4.ui.bindings.keys.KeyBindingDispatcher.executeCommand(KeyBindingDispatcher.java:308)
	at org.eclipse.e4.ui.bindings.keys.KeyBindingDispatcher.press(KeyBindingDispatcher.java:580)
	at org.eclipse.e4.ui.bindings.keys.KeyBindingDispatcher.processKeyEvent(KeyBindingDispatcher.java:647)
	at org.eclipse.e4.ui.bindings.keys.KeyBindingDispatcher.filterKeySequenceBindings(KeyBindingDispatcher.java:439)
	at org.eclipse.e4.ui.bindings.keys.KeyBindingDispatcher$KeyDownFilter.handleEvent(KeyBindingDispatcher.java:96)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:89)
	at org.eclipse.swt.widgets.Display.filterEvent(Display.java:1262)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1065)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1090)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1075)
	at org.eclipse.swt.widgets.Widget.sendKeyEvent(Widget.java:1117)
	at org.eclipse.swt.widgets.Widget.sendKeyEvent(Widget.java:1113)
	at org.eclipse.swt.widgets.Widget.wmChar(Widget.java:1542)
	at org.eclipse.swt.widgets.Control.WM_CHAR(Control.java:4868)
	at org.eclipse.swt.widgets.Canvas.WM_CHAR(Canvas.java:345)
	at org.eclipse.swt.widgets.Control.windowProc(Control.java:4746)
	at org.eclipse.swt.widgets.Canvas.windowProc(Canvas.java:340)
	at org.eclipse.swt.widgets.Display.windowProc(Display.java:5026)
	at org.eclipse.swt.internal.win32.OS.DispatchMessage(Native Method)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3643)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1155)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1046)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:155)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:644)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:551)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:156)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:152)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:203)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:136)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:402)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:255)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:659)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:596)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1467)

!ENTRY org.eclipse.jdt.core 4 4 2025-06-10 23:49:53.703
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package com.example.EMSbackend.Service;

import java.util.ArrayList;
import java.util.List;
import java.util.Optional;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import com.example.EMSbackend.DTO.EMSGetAllDTO;
import com.example.EMSbackend.DTO.EMSInsertMultipleRequestDTO;
import com.example.EMSbackend.DTO.EMSInsertMultipleResponseDTO;
import com.example.EMSbackend.DTO.EMSInsertSingleRequestDTO;
import com.example.EMSbackend.DTO.EMSInsertSingleResponseDTO;
import com.example.EMSbackend.DTO.EMSUpdateRequestDTO;
import com.example.EMSbackend.DTO.EMSUpdateResponseDTO;
import com.example.EMSbackend.Model.EMSModel;
import com.example.EMSbackend.Repository.EMSRepository;

import lombok.extern.slf4j.Slf4j;

@Slf4j
@Service
public class EMSService {

	@Autowired
	private EMSRepository emsRepository;
	
	
//GET_ALL_EMPLOYEE_DETAILS
    public EMSGetAllDTO getEmployeeDetailsAll() {
    	EMSGetAllDTO response = new EMSGetAllDTO();
    
    	
    	//try { 	
    	List<EMSModel> modelDetails = (List<EMSModel>) emsRepository.findAll();
    	response.setEmployeeDetailsAll(modelDetails);
    	
    	/*if(modelDetails!=null) {
    		response.setEmployeeDetailsAll(modelDetails);
    	}
    	else {
    		System.out.println("Employee not found");
    		//log.info("Service response not found");
    	}
    	
    	}catch (Exception e) {
            System.out.println("Error while fetching employee list: " + e.getMessage());
            e.printStackTrace();
        }*/
    	    
    	return response;
    }
    
//INSERT_ALL_EMPLOYEE_DETAILS(SINGLE_DATA/NOT_LIST)
    public EMSInsertSingleResponseDTO insertEmployeeDetails(EMSInsertSingleRequestDTO requestData) {
    	EMSInsertSingleResponseDTO response = new EMSInsertSingleResponseDTO();
    	String message = "FAILURE";
    	List<EMSModel> entityList = new ArrayList<>();
  
    	try {
    	if (requestData != null) {
    		EMSModel entity = new EMSModel();
    		entity.setId(requestData.getId());
			entity.setRid(requestData.getRid());
			entity.setName(requestData.getName());
			entity.setParentName(requestData.getParentName());
			entity.setStreamName(requestData.getStreamName());
			entity.setDOB(requestData.getDOB());
			entity.setPOY(requestData.getPOY());
			entity.setMobileNumber(requestData.getMobileNumber());
			entity.setMailID(requestData.getMailID());
			entity.setAddress(requestData.getAddress());
			entity.setStatus(requestData.getStatus());
			 
			c
   
			List<EMSModel> savedEntities = emsRepository.saveAll(entityList);
			if (savedEntities != null && !savedEntities.isEmpty()) {
	            message = "SUCCESS";
	            response.setMessage(message);
	            response.setCode("200 OK");
	        } else {
	            response.setMessage("Insert failed");
	            response.setCode("500 INTERNAL SERVER ERROR");
	        }
    	}else {
            response.setMessage("Input list is null or empty");
            response.setCode("400 BAD REQUEST");
        }
    	}catch (Exception e) {
    		e.printStackTrace();
    		response.setMessage("Exception occurred");
            response.setCode("500 INTERNAL SERVER ERROR");
    	}
  
    	return response;
    	
    }
    
    
   
//INSERT_ALL_EMPLOYEE_DETAILS(MULTIPLE/LIST)
    
    public EMSInsertMultipleResponseDTO insertEmployeeDetailsAll(EMSInsertMultipleRequestDTO insertData) {
    	EMSInsertMultipleResponseDTO response = new EMSInsertMultipleResponseDTO();
    	String message = "FAILURE";
    	
    	try {
    		List<EMSModel> dtoList = insertData.getEmployeeDetailsRequestAll();
 
    		if (dtoList != null && !dtoList.isEmpty()) {
    			
    			List<EMSModel> entityList = new ArrayList<>();
    			
    			for (EMSModel dto : dtoList){
    				
    			EMSModel entity = new EMSModel();
    			 entity.setId(dto.getId());
    			 entity.setRid(dto.getRid());
    			 entity.setName(dto.getName());
    			 entity.setParentName(dto.getParentName());
    			 entity.setStreamName(dto.getStreamName());
    			 entity.setDOB(dto.getDOB());
    			 entity.setPOY(dto.getPOY());
    			 entity.setMobileNumber(dto.getMobileNumber());
    			 entity.setMailID(dto.getMailID());
    			 entity.setAddress(dto.getAddress());
    			 entity.setStatus(dto.getStatus());
    			 
    			 entityList.add(entity);
    			}
    			
    			List<EMSModel> savedEntities = emsRepository.saveAll(entityList);
                

                if (savedEntities != null && !savedEntities.isEmpty()) {
                    message = "SUCCESS";
                    response.setMessage(message);
                    response.setCode("200 OK");
                } else {
                    response.setMessage("Insert failed");
                    response.setCode("500 INTERNAL SERVER ERROR");
                }
    			
    		}else {
    			response.setMessage("Input list is null or empty");
                response.setCode("400 BAD REQUEST");
    		}
    	}catch (Exception e) {
    		e.printStackTrace();
    		response.setMessage("Exception occurred");
            response.setCode("500 INTERNAL SERVER ERROR");
    	}
    	return response;
    }
    
//UPDATE
    public EMSUpdateResponseDTO updateEmployeeDetails(EMSUpdateRequestDTO insertData) {
    	EMSUpdateResponseDTO response =new EMSUpdateResponseDTO();
    	List<EMSModel> saveEntities =  new ArrayList<>();
    	try {
    		Optional<EMSModel> dbResponse = emsRepository.findById(insertData.getId());
    		if(dbResponse.isPresent()) {
    			EMSModel entity = new EMSModel();
    			
    			if(insertData.getId()!=null && insertData.getRid()!=null) {
    			
    				entity.setId(dbResponse.get().getId());
    				entity.setRid(insertData.getRid());
    				entity.setName(dbResponse.get().getName());
    				entity.setParentName(dbResponse.get().getParentName());
    				entity.setStreamName(dbResponse.get().getStreamName());
    				entity.setDOB(dbResponse.get().getDOB());
    				entity.setPOY(dbResponse.get().getPOY());
    				entity.setMobileNumber(dbResponse.get().getMobileNumber());
    				entity.setMailID(dbResponse.get().getMailID());
    				entity.setAddress(dbResponse.get().getAddress());
    				entity.setStatus(dbResponse.get().getStatus());
    				
    				saveEntities.add(entity);
    				
    				
    			}else if(insertData.getId()!=null && insertData.getName()!=null) {
    				entity.setId(dbResponse.get().getId());
    				entity.setRid(dbResponse.get().getRid());
    				entity.setName(insertData.getName());
    				entity.setParentName(dbResponse.get().getParentName());
    				entity.setStreamName(dbResponse.get().getStreamName());
    				entity.setDOB(dbResponse.get().getDOB());
    				entity.setPOY(dbResponse.get().getPOY());
    				entity.setMobileNumber(dbResponse.get().getMobileNumber());
    				entity.setMailID(dbResponse.get().getMailID());
    				entity.setAddress(dbResponse.get().getAddress());
    				entity.setStatus(dbResponse.get().getStatus());
    				
    				saveEntities.add(entity);
    			}else if(insertData.getId()!=null && insertData.getParentName()!=null) {
    				entity.setId(dbResponse.get().getId());
    				entity.setRid(dbResponse.get().getRid());
    				entity.setName(dbResponse.get().getName());
    				entity.setParentName(insertData.getParentName());
    				entity.setStreamName(dbResponse.get().getStreamName());
    				entity.setDOB(dbResponse.get().getDOB());
    				entity.setPOY(dbResponse.get().getPOY());
    				entity.setMobileNumber(dbResponse.get().getMobileNumber());
    				entity.setMailID(dbResponse.get().getMailID());
    				entity.setAddress(dbResponse.get().getAddress());
    				entity.setStatus(dbResponse.get().getStatus());
    				
    				saveEntities.add(entity);
    			}else if(insertData.getId()!=null && insertData.getStreamName()!=null) {
    				
    			}else if(insertData.getId()!=null && insertData.getDOB()!=null) {
    				
    			}else if(insertData.getId()!=null && insertData.getPOY()!=null) {
    				
    			}else if(insertData.getId()!=null && insertData.getMobileNumber()!=null) {
    				
    			}else if(insertData.getId()!=null && insertData.getMailID()!=null) {
    				
    			}else if(insertData.getId()!=null && insertData.getAddress()!=null) {
    				
    			}else (insertData.getId()!=null && insertData.getStatus()!=null) {
    				
    			}
    			
    		}
    	}catch() {
    		
    	}
    }
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2038)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2243)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3278)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3055)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2025-06-10 23:49:53.708
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2038)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2243)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3278)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3055)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2025-06-10 23:49:53.709
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2038)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2243)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3278)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3055)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core 4 4 2025-06-10 23:49:54.456
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package com.example.EMSbackend.Service;

import java.util.ArrayList;
import java.util.List;
import java.util.Optional;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import com.example.EMSbackend.DTO.EMSGetAllDTO;
import com.example.EMSbackend.DTO.EMSInsertMultipleRequestDTO;
import com.example.EMSbackend.DTO.EMSInsertMultipleResponseDTO;
import com.example.EMSbackend.DTO.EMSInsertSingleRequestDTO;
import com.example.EMSbackend.DTO.EMSInsertSingleResponseDTO;
import com.example.EMSbackend.DTO.EMSUpdateRequestDTO;
import com.example.EMSbackend.DTO.EMSUpdateResponseDTO;
import com.example.EMSbackend.Model.EMSModel;
import com.example.EMSbackend.Repository.EMSRepository;

import lombok.extern.slf4j.Slf4j;

@Slf4j
@Service
public class EMSService {

	@Autowired
	private EMSRepository emsRepository;
	
	
//GET_ALL_EMPLOYEE_DETAILS
    public EMSGetAllDTO getEmployeeDetailsAll() {
    	EMSGetAllDTO response = new EMSGetAllDTO();
    
    	
    	//try { 	
    	List<EMSModel> modelDetails = (List<EMSModel>) emsRepository.findAll();
    	response.setEmployeeDetailsAll(modelDetails);
    	
    	/*if(modelDetails!=null) {
    		response.setEmployeeDetailsAll(modelDetails);
    	}
    	else {
    		System.out.println("Employee not found");
    		//log.info("Service response not found");
    	}
    	
    	}catch (Exception e) {
            System.out.println("Error while fetching employee list: " + e.getMessage());
            e.printStackTrace();
        }*/
    	    
    	return response;
    }
    
//INSERT_ALL_EMPLOYEE_DETAILS(SINGLE_DATA/NOT_LIST)
    public EMSInsertSingleResponseDTO insertEmployeeDetails(EMSInsertSingleRequestDTO requestData) {
    	EMSInsertSingleResponseDTO response = new EMSInsertSingleResponseDTO();
    	String message = "FAILURE";
    	List<EMSModel> entityList = new ArrayList<>();
  
    	try {
    	if (requestData != null) {
    		EMSModel entity = new EMSModel();
    		entity.setId(requestData.getId());
			entity.setRid(requestData.getRid());
			entity.setName(requestData.getName());
			entity.setParentName(requestData.getParentName());
			entity.setStreamName(requestData.getStreamName());
			entity.setDOB(requestData.getDOB());
			entity.setPOY(requestData.getPOY());
			entity.setMobileNumber(requestData.getMobileNumber());
			entity.setMailID(requestData.getMailID());
			entity.setAddress(requestData.getAddress());
			entity.setStatus(requestData.getStatus());
			 
			c
   
			List<EMSModel> savedEntities = emsRepository.saveAll(entityList);
			if (savedEntities != null && !savedEntities.isEmpty()) {
	            message = "SUCCESS";
	            response.setMessage(message);
	            response.setCode("200 OK");
	        } else {
	            response.setMessage("Insert failed");
	            response.setCode("500 INTERNAL SERVER ERROR");
	        }
    	}else {
            response.setMessage("Input list is null or empty");
            response.setCode("400 BAD REQUEST");
        }
    	}catch (Exception e) {
    		e.printStackTrace();
    		response.setMessage("Exception occurred");
            response.setCode("500 INTERNAL SERVER ERROR");
    	}
  
    	return response;
    	
    }
    
    
   
//INSERT_ALL_EMPLOYEE_DETAILS(MULTIPLE/LIST)
    
    public EMSInsertMultipleResponseDTO insertEmployeeDetailsAll(EMSInsertMultipleRequestDTO insertData) {
    	EMSInsertMultipleResponseDTO response = new EMSInsertMultipleResponseDTO();
    	String message = "FAILURE";
    	
    	try {
    		List<EMSModel> dtoList = insertData.getEmployeeDetailsRequestAll();
 
    		if (dtoList != null && !dtoList.isEmpty()) {
    			
    			List<EMSModel> entityList = new ArrayList<>();
    			
    			for (EMSModel dto : dtoList){
    				
    			EMSModel entity = new EMSModel();
    			 entity.setId(dto.getId());
    			 entity.setRid(dto.getRid());
    			 entity.setName(dto.getName());
    			 entity.setParentName(dto.getParentName());
    			 entity.setStreamName(dto.getStreamName());
    			 entity.setDOB(dto.getDOB());
    			 entity.setPOY(dto.getPOY());
    			 entity.setMobileNumber(dto.getMobileNumber());
    			 entity.setMailID(dto.getMailID());
    			 entity.setAddress(dto.getAddress());
    			 entity.setStatus(dto.getStatus());
    			 
    			 entityList.add(entity);
    			}
    			
    			List<EMSModel> savedEntities = emsRepository.saveAll(entityList);
                

                if (savedEntities != null && !savedEntities.isEmpty()) {
                    message = "SUCCESS";
                    response.setMessage(message);
                    response.setCode("200 OK");
                } else {
                    response.setMessage("Insert failed");
                    response.setCode("500 INTERNAL SERVER ERROR");
                }
    			
    		}else {
    			response.setMessage("Input list is null or empty");
                response.setCode("400 BAD REQUEST");
    		}
    	}catch (Exception e) {
    		e.printStackTrace();
    		response.setMessage("Exception occurred");
            response.setCode("500 INTERNAL SERVER ERROR");
    	}
    	return response;
    }
    
//UPDATE
    public EMSUpdateResponseDTO updateEmployeeDetails(EMSUpdateRequestDTO insertData) {
    	EMSUpdateResponseDTO response =new EMSUpdateResponseDTO();
    	List<EMSModel> saveEntities =  new ArrayList<>();
    	try {
    		Optional<EMSModel> dbResponse = emsRepository.findById(insertData.getId());
    		if(dbResponse.isPresent()) {
    			EMSModel entity = new EMSModel();
    			
    			if(insertData.getId()!=null && insertData.getRid()!=null) {
    			
    				entity.setId(dbResponse.get().getId());
    				entity.setRid(insertData.getRid());
    				entity.setName(dbResponse.get().getName());
    				entity.setParentName(dbResponse.get().getParentName());
    				entity.setStreamName(dbResponse.get().getStreamName());
    				entity.setDOB(dbResponse.get().getDOB());
    				entity.setPOY(dbResponse.get().getPOY());
    				entity.setMobileNumber(dbResponse.get().getMobileNumber());
    				entity.setMailID(dbResponse.get().getMailID());
    				entity.setAddress(dbResponse.get().getAddress());
    				entity.setStatus(dbResponse.get().getStatus());
    				
    				saveEntities.add(entity);
    				
    				
    			}else if(insertData.getId()!=null && insertData.getName()!=null) {
    				entity.setId(dbResponse.get().getId());
    				entity.setRid(dbResponse.get().getRid());
    				entity.setName(insertData.getName());
    				entity.setParentName(dbResponse.get().getParentName());
    				entity.setStreamName(dbResponse.get().getStreamName());
    				entity.setDOB(dbResponse.get().getDOB());
    				entity.setPOY(dbResponse.get().getPOY());
    				entity.setMobileNumber(dbResponse.get().getMobileNumber());
    				entity.setMailID(dbResponse.get().getMailID());
    				entity.setAddress(dbResponse.get().getAddress());
    				entity.setStatus(dbResponse.get().getStatus());
    				
    				saveEntities.add(entity);
    			}else if(insertData.getId()!=null && insertData.getParentName()!=null) {
    				entity.setId(dbResponse.get().getId());
    				entity.setRid(dbResponse.get().getRid());
    				entity.setName(dbResponse.get().getName());
    				entity.setParentName(insertData.getParentName());
    				entity.setStreamName(dbResponse.get().getStreamName());
    				entity.setDOB(dbResponse.get().getDOB());
    				entity.setPOY(dbResponse.get().getPOY());
    				entity.setMobileNumber(dbResponse.get().getMobileNumber());
    				entity.setMailID(dbResponse.get().getMailID());
    				entity.setAddress(dbResponse.get().getAddress());
    				entity.setStatus(dbResponse.get().getStatus());
    				
    				saveEntities.add(entity);
    			}else if(insertData.getId()!=null && insertData.getStreamName()!=null) {
    				entity.setId(dbResponse.get().getId());
    				entity.setRid(dbResponse.get().getRid());
    				entity.setName(dbResponse.get().getName());
    				entity.setParentName(insertData.getParentName());
    				entity.setStreamName(dbResponse.get().getStreamName());
    				entity.setDOB(dbResponse.get().getDOB());
    				entity.setPOY(dbResponse.get().getPOY());
    				entity.setMobileNumber(dbResponse.get().getMobileNumber());
    				entity.setMailID(dbResponse.get().getMailID());
    				entity.setAddress(dbResponse.get().getAddress());
    				entity.setStatus(dbResponse.get().getStatus());
    				
    				saveEntities.add(entity);
    			}else if(insertData.getId()!=null && insertData.getDOB()!=null) {
    				
    			}else if(insertData.getId()!=null && insertData.getPOY()!=null) {
    				
    			}else if(insertData.getId()!=null && insertData.getMobileNumber()!=null) {
    				
    			}else if(insertData.getId()!=null && insertData.getMailID()!=null) {
    				
    			}else if(insertData.getId()!=null && insertData.getAddress()!=null) {
    				
    			}else (insertData.getId()!=null && insertData.getStatus()!=null) {
    				
    			}
    			
    		}
    	}catch() {
    		
    	}
    }
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2038)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2243)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3278)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3055)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:540)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:132)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:94)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:91)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:158)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)

!ENTRY org.eclipse.jdt.ui 4 2 2025-06-10 23:49:54.460
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2038)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2243)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3278)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3055)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:540)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:132)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:94)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:91)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:158)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)

!ENTRY org.eclipse.jdt.ui 4 0 2025-06-10 23:49:54.462
!MESSAGE Error in JDT Core during reconcile
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2038)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2243)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3278)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3055)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:540)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:132)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:94)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:91)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:158)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)

!ENTRY org.eclipse.jdt.core 4 4 2025-06-10 23:49:54.562
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package com.example.EMSbackend.Service;

import java.util.ArrayList;
import java.util.List;
import java.util.Optional;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import com.example.EMSbackend.DTO.EMSGetAllDTO;
import com.example.EMSbackend.DTO.EMSInsertMultipleRequestDTO;
import com.example.EMSbackend.DTO.EMSInsertMultipleResponseDTO;
import com.example.EMSbackend.DTO.EMSInsertSingleRequestDTO;
import com.example.EMSbackend.DTO.EMSInsertSingleResponseDTO;
import com.example.EMSbackend.DTO.EMSUpdateRequestDTO;
import com.example.EMSbackend.DTO.EMSUpdateResponseDTO;
import com.example.EMSbackend.Model.EMSModel;
import com.example.EMSbackend.Repository.EMSRepository;

import lombok.extern.slf4j.Slf4j;

@Slf4j
@Service
public class EMSService {

	@Autowired
	private EMSRepository emsRepository;
	
	
//GET_ALL_EMPLOYEE_DETAILS
    public EMSGetAllDTO getEmployeeDetailsAll() {
    	EMSGetAllDTO response = new EMSGetAllDTO();
    
    	
    	//try { 	
    	List<EMSModel> modelDetails = (List<EMSModel>) emsRepository.findAll();
    	response.setEmployeeDetailsAll(modelDetails);
    	
    	/*if(modelDetails!=null) {
    		response.setEmployeeDetailsAll(modelDetails);
    	}
    	else {
    		System.out.println("Employee not found");
    		//log.info("Service response not found");
    	}
    	
    	}catch (Exception e) {
            System.out.println("Error while fetching employee list: " + e.getMessage());
            e.printStackTrace();
        }*/
    	    
    	return response;
    }
    
//INSERT_ALL_EMPLOYEE_DETAILS(SINGLE_DATA/NOT_LIST)
    public EMSInsertSingleResponseDTO insertEmployeeDetails(EMSInsertSingleRequestDTO requestData) {
    	EMSInsertSingleResponseDTO response = new EMSInsertSingleResponseDTO();
    	String message = "FAILURE";
    	List<EMSModel> entityList = new ArrayList<>();
  
    	try {
    	if (requestData != null) {
    		EMSModel entity = new EMSModel();
    		entity.setId(requestData.getId());
			entity.setRid(requestData.getRid());
			entity.setName(requestData.getName());
			entity.setParentName(requestData.getParentName());
			entity.setStreamName(requestData.getStreamName());
			entity.setDOB(requestData.getDOB());
			entity.setPOY(requestData.getPOY());
			entity.setMobileNumber(requestData.getMobileNumber());
			entity.setMailID(requestData.getMailID());
			entity.setAddress(requestData.getAddress());
			entity.setStatus(requestData.getStatus());
			 
			c
   
			List<EMSModel> savedEntities = emsRepository.saveAll(entityList);
			if (savedEntities != null && !savedEntities.isEmpty()) {
	            message = "SUCCESS";
	            response.setMessage(message);
	            response.setCode("200 OK");
	        } else {
	            response.setMessage("Insert failed");
	            response.setCode("500 INTERNAL SERVER ERROR");
	        }
    	}else {
            response.setMessage("Input list is null or empty");
            response.setCode("400 BAD REQUEST");
        }
    	}catch (Exception e) {
    		e.printStackTrace();
    		response.setMessage("Exception occurred");
            response.setCode("500 INTERNAL SERVER ERROR");
    	}
  
    	return response;
    	
    }
    
    
   
//INSERT_ALL_EMPLOYEE_DETAILS(MULTIPLE/LIST)
    
    public EMSInsertMultipleResponseDTO insertEmployeeDetailsAll(EMSInsertMultipleRequestDTO insertData) {
    	EMSInsertMultipleResponseDTO response = new EMSInsertMultipleResponseDTO();
    	String message = "FAILURE";
    	
    	try {
    		List<EMSModel> dtoList = insertData.getEmployeeDetailsRequestAll();
 
    		if (dtoList != null && !dtoList.isEmpty()) {
    			
    			List<EMSModel> entityList = new ArrayList<>();
    			
    			for (EMSModel dto : dtoList){
    				
    			EMSModel entity = new EMSModel();
    			 entity.setId(dto.getId());
    			 entity.setRid(dto.getRid());
    			 entity.setName(dto.getName());
    			 entity.setParentName(dto.getParentName());
    			 entity.setStreamName(dto.getStreamName());
    			 entity.setDOB(dto.getDOB());
    			 entity.setPOY(dto.getPOY());
    			 entity.setMobileNumber(dto.getMobileNumber());
    			 entity.setMailID(dto.getMailID());
    			 entity.setAddress(dto.getAddress());
    			 entity.setStatus(dto.getStatus());
    			 
    			 entityList.add(entity);
    			}
    			
    			List<EMSModel> savedEntities = emsRepository.saveAll(entityList);
                

                if (savedEntities != null && !savedEntities.isEmpty()) {
                    message = "SUCCESS";
                    response.setMessage(message);
                    response.setCode("200 OK");
                } else {
                    response.setMessage("Insert failed");
                    response.setCode("500 INTERNAL SERVER ERROR");
                }
    			
    		}else {
    			response.setMessage("Input list is null or empty");
                response.setCode("400 BAD REQUEST");
    		}
    	}catch (Exception e) {
    		e.printStackTrace();
    		response.setMessage("Exception occurred");
            response.setCode("500 INTERNAL SERVER ERROR");
    	}
    	return response;
    }
    
//UPDATE
    public EMSUpdateResponseDTO updateEmployeeDetails(EMSUpdateRequestDTO insertData) {
    	EMSUpdateResponseDTO response =new EMSUpdateResponseDTO();
    	List<EMSModel> saveEntities =  new ArrayList<>();
    	try {
    		Optional<EMSModel> dbResponse = emsRepository.findById(insertData.getId());
    		if(dbResponse.isPresent()) {
    			EMSModel entity = new EMSModel();
    			
    			if(insertData.getId()!=null && insertData.getRid()!=null) {
    			
    				entity.setId(dbResponse.get().getId());
    				entity.setRid(insertData.getRid());
    				entity.setName(dbResponse.get().getName());
    				entity.setParentName(dbResponse.get().getParentName());
    				entity.setStreamName(dbResponse.get().getStreamName());
    				entity.setDOB(dbResponse.get().getDOB());
    				entity.setPOY(dbResponse.get().getPOY());
    				entity.setMobileNumber(dbResponse.get().getMobileNumber());
    				entity.setMailID(dbResponse.get().getMailID());
    				entity.setAddress(dbResponse.get().getAddress());
    				entity.setStatus(dbResponse.get().getStatus());
    				
    				saveEntities.add(entity);
    				
    				
    			}else if(insertData.getId()!=null && insertData.getName()!=null) {
    				entity.setId(dbResponse.get().getId());
    				entity.setRid(dbResponse.get().getRid());
    				entity.setName(insertData.getName());
    				entity.setParentName(dbResponse.get().getParentName());
    				entity.setStreamName(dbResponse.get().getStreamName());
    				entity.setDOB(dbResponse.get().getDOB());
    				entity.setPOY(dbResponse.get().getPOY());
    				entity.setMobileNumber(dbResponse.get().getMobileNumber());
    				entity.setMailID(dbResponse.get().getMailID());
    				entity.setAddress(dbResponse.get().getAddress());
    				entity.setStatus(dbResponse.get().getStatus());
    				
    				saveEntities.add(entity);
    			}else if(insertData.getId()!=null && insertData.getParentName()!=null) {
    				entity.setId(dbResponse.get().getId());
    				entity.setRid(dbResponse.get().getRid());
    				entity.setName(dbResponse.get().getName());
    				entity.setParentName(insertData.getParentName());
    				entity.setStreamName(dbResponse.get().getStreamName());
    				entity.setDOB(dbResponse.get().getDOB());
    				entity.setPOY(dbResponse.get().getPOY());
    				entity.setMobileNumber(dbResponse.get().getMobileNumber());
    				entity.setMailID(dbResponse.get().getMailID());
    				entity.setAddress(dbResponse.get().getAddress());
    				entity.setStatus(dbResponse.get().getStatus());
    				
    				saveEntities.add(entity);
    			}else if(insertData.getId()!=null && insertData.getStreamName()!=null) {
    				entity.setId(dbResponse.get().getId());
    				entity.setRid(dbResponse.get().getRid());
    				entity.setName(dbResponse.get().getName());
    				entity.setParentName(insertData.getParentName());
    				entity.setStreamName(dbResponse.get().getStreamName());
    				entity.setDOB(dbResponse.get().getDOB());
    				entity.setPOY(dbResponse.get().getPOY());
    				entity.setMobileNumber(dbResponse.get().getMobileNumber());
    				entity.setMailID(dbResponse.get().getMailID());
    				entity.setAddress(dbResponse.get().getAddress());
    				entity.setStatus(dbResponse.get().getStatus());
    				
    				saveEntities.add(entity);
    			}else if(insertData.getId()!=null && insertData.getDOB()!=null) {
    				
    			}else if(insertData.getId()!=null && insertData.getPOY()!=null) {
    				
    			}else if(insertData.getId()!=null && insertData.getMobileNumber()!=null) {
    				
    			}else if(insertData.getId()!=null && insertData.getMailID()!=null) {
    				
    			}else if(insertData.getId()!=null && insertData.getAddress()!=null) {
    				
    			}else (insertData.getId()!=null && insertData.getStatus()!=null) {
    				
    			}
    			
    		}
    	}catch() {
    		
    	}
    }
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2038)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2243)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3278)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3055)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2025-06-10 23:49:54.566
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2038)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2243)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3278)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3055)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2025-06-10 23:49:54.568
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2038)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2243)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3278)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3055)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core 4 4 2025-06-10 23:49:56.950
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package com.example.EMSbackend.Service;

import java.util.ArrayList;
import java.util.List;
import java.util.Optional;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import com.example.EMSbackend.DTO.EMSGetAllDTO;
import com.example.EMSbackend.DTO.EMSInsertMultipleRequestDTO;
import com.example.EMSbackend.DTO.EMSInsertMultipleResponseDTO;
import com.example.EMSbackend.DTO.EMSInsertSingleRequestDTO;
import com.example.EMSbackend.DTO.EMSInsertSingleResponseDTO;
import com.example.EMSbackend.DTO.EMSUpdateRequestDTO;
import com.example.EMSbackend.DTO.EMSUpdateResponseDTO;
import com.example.EMSbackend.Model.EMSModel;
import com.example.EMSbackend.Repository.EMSRepository;

import lombok.extern.slf4j.Slf4j;

@Slf4j
@Service
public class EMSService {

	@Autowired
	private EMSRepository emsRepository;
	
	
//GET_ALL_EMPLOYEE_DETAILS
    public EMSGetAllDTO getEmployeeDetailsAll() {
    	EMSGetAllDTO response = new EMSGetAllDTO();
    
    	
    	//try { 	
    	List<EMSModel> modelDetails = (List<EMSModel>) emsRepository.findAll();
    	response.setEmployeeDetailsAll(modelDetails);
    	
    	/*if(modelDetails!=null) {
    		response.setEmployeeDetailsAll(modelDetails);
    	}
    	else {
    		System.out.println("Employee not found");
    		//log.info("Service response not found");
    	}
    	
    	}catch (Exception e) {
            System.out.println("Error while fetching employee list: " + e.getMessage());
            e.printStackTrace();
        }*/
    	    
    	return response;
    }
    
//INSERT_ALL_EMPLOYEE_DETAILS(SINGLE_DATA/NOT_LIST)
    public EMSInsertSingleResponseDTO insertEmployeeDetails(EMSInsertSingleRequestDTO requestData) {
    	EMSInsertSingleResponseDTO response = new EMSInsertSingleResponseDTO();
    	String message = "FAILURE";
    	List<EMSModel> entityList = new ArrayList<>();
  
    	try {
    	if (requestData != null) {
    		EMSModel entity = new EMSModel();
    		entity.setId(requestData.getId());
			entity.setRid(requestData.getRid());
			entity.setName(requestData.getName());
			entity.setParentName(requestData.getParentName());
			entity.setStreamName(requestData.getStreamName());
			entity.setDOB(requestData.getDOB());
			entity.setPOY(requestData.getPOY());
			entity.setMobileNumber(requestData.getMobileNumber());
			entity.setMailID(requestData.getMailID());
			entity.setAddress(requestData.getAddress());
			entity.setStatus(requestData.getStatus());
			 
			c
   
			List<EMSModel> savedEntities = emsRepository.saveAll(entityList);
			if (savedEntities != null && !savedEntities.isEmpty()) {
	            message = "SUCCESS";
	            response.setMessage(message);
	            response.setCode("200 OK");
	        } else {
	            response.setMessage("Insert failed");
	            response.setCode("500 INTERNAL SERVER ERROR");
	        }
    	}else {
            response.setMessage("Input list is null or empty");
            response.setCode("400 BAD REQUEST");
        }
    	}catch (Exception e) {
    		e.printStackTrace();
    		response.setMessage("Exception occurred");
            response.setCode("500 INTERNAL SERVER ERROR");
    	}
  
    	return response;
    	
    }
    
    
   
//INSERT_ALL_EMPLOYEE_DETAILS(MULTIPLE/LIST)
    
    public EMSInsertMultipleResponseDTO insertEmployeeDetailsAll(EMSInsertMultipleRequestDTO insertData) {
    	EMSInsertMultipleResponseDTO response = new EMSInsertMultipleResponseDTO();
    	String message = "FAILURE";
    	
    	try {
    		List<EMSModel> dtoList = insertData.getEmployeeDetailsRequestAll();
 
    		if (dtoList != null && !dtoList.isEmpty()) {
    			
    			List<EMSModel> entityList = new ArrayList<>();
    			
    			for (EMSModel dto : dtoList){
    				
    			EMSModel entity = new EMSModel();
    			 entity.setId(dto.getId());
    			 entity.setRid(dto.getRid());
    			 entity.setName(dto.getName());
    			 entity.setParentName(dto.getParentName());
    			 entity.setStreamName(dto.getStreamName());
    			 entity.setDOB(dto.getDOB());
    			 entity.setPOY(dto.getPOY());
    			 entity.setMobileNumber(dto.getMobileNumber());
    			 entity.setMailID(dto.getMailID());
    			 entity.setAddress(dto.getAddress());
    			 entity.setStatus(dto.getStatus());
    			 
    			 entityList.add(entity);
    			}
    			
    			List<EMSModel> savedEntities = emsRepository.saveAll(entityList);
                

                if (savedEntities != null && !savedEntities.isEmpty()) {
                    message = "SUCCESS";
                    response.setMessage(message);
                    response.setCode("200 OK");
                } else {
                    response.setMessage("Insert failed");
                    response.setCode("500 INTERNAL SERVER ERROR");
                }
    			
    		}else {
    			response.setMessage("Input list is null or empty");
                response.setCode("400 BAD REQUEST");
    		}
    	}catch (Exception e) {
    		e.printStackTrace();
    		response.setMessage("Exception occurred");
            response.setCode("500 INTERNAL SERVER ERROR");
    	}
    	return response;
    }
    
//UPDATE
    public EMSUpdateResponseDTO updateEmployeeDetails(EMSUpdateRequestDTO insertData) {
    	EMSUpdateResponseDTO response =new EMSUpdateResponseDTO();
    	List<EMSModel> saveEntities =  new ArrayList<>();
    	try {
    		Optional<EMSModel> dbResponse = emsRepository.findById(insertData.getId());
    		if(dbResponse.isPresent()) {
    			EMSModel entity = new EMSModel();
    			
    			if(insertData.getId()!=null && insertData.getRid()!=null) {
    			
    				entity.setId(dbResponse.get().getId());
    				entity.setRid(insertData.getRid());
    				entity.setName(dbResponse.get().getName());
    				entity.setParentName(dbResponse.get().getParentName());
    				entity.setStreamName(dbResponse.get().getStreamName());
    				entity.setDOB(dbResponse.get().getDOB());
    				entity.setPOY(dbResponse.get().getPOY());
    				entity.setMobileNumber(dbResponse.get().getMobileNumber());
    				entity.setMailID(dbResponse.get().getMailID());
    				entity.setAddress(dbResponse.get().getAddress());
    				entity.setStatus(dbResponse.get().getStatus());
    				
    				saveEntities.add(entity);
    				
    				
    			}else if(insertData.getId()!=null && insertData.getName()!=null) {
    				entity.setId(dbResponse.get().getId());
    				entity.setRid(dbResponse.get().getRid());
    				entity.setName(insertData.getName());
    				entity.setParentName(dbResponse.get().getParentName());
    				entity.setStreamName(dbResponse.get().getStreamName());
    				entity.setDOB(dbResponse.get().getDOB());
    				entity.setPOY(dbResponse.get().getPOY());
    				entity.setMobileNumber(dbResponse.get().getMobileNumber());
    				entity.setMailID(dbResponse.get().getMailID());
    				entity.setAddress(dbResponse.get().getAddress());
    				entity.setStatus(dbResponse.get().getStatus());
    				
    				saveEntities.add(entity);
    			}else if(insertData.getId()!=null && insertData.getParentName()!=null) {
    				entity.setId(dbResponse.get().getId());
    				entity.setRid(dbResponse.get().getRid());
    				entity.setName(dbResponse.get().getName());
    				entity.setParentName(insertData.getParentName());
    				entity.setStreamName(dbResponse.get().getStreamName());
    				entity.setDOB(dbResponse.get().getDOB());
    				entity.setPOY(dbResponse.get().getPOY());
    				entity.setMobileNumber(dbResponse.get().getMobileNumber());
    				entity.setMailID(dbResponse.get().getMailID());
    				entity.setAddress(dbResponse.get().getAddress());
    				entity.setStatus(dbResponse.get().getStatus());
    				
    				saveEntities.add(entity);
    			}else if(insertData.getId()!=null && insertData.getStreamName()!=null) {
    				entity.setId(dbResponse.get().getId());
    				entity.setRid(dbResponse.get().getRid());
    				entity.setName(dbResponse.get().getName());
    				entity.setParentName(insertData.getParentName());
    				entity.setStreamName(dbResponse.get().getStreamName());
    				entity.setDOB(dbResponse.get().getDOB());
    				entity.setPOY(dbResponse.get().getPOY());
    				entity.setMobileNumber(dbResponse.get().getMobileNumber());
    				entity.setMailID(dbResponse.get().getMailID());
    				entity.setAddress(dbResponse.get().getAddress());
    				entity.setStatus(dbResponse.get().getStatus());
    				
    				saveEntities.add(entity);
    			}else if(insertData.getId()!=null && insertData.getDOB()!=null) {
    				
    			}else if(insertData.getId()!=null && insertData.getPOY()!=null) {
    				
    			}else if(insertData.getId()!=null && insertData.getMobileNumber()!=null) {
    				
    			}else if(insertData.getId()!=null && insertData.getMailID()!=null) {
    				
    			}else if(insertData.getId()!=null && insertData.getAddress()!=null) {
    				
    			}else (insertData.getId()!=null && insertData.getStatus()!=null) {
    				
    			}
    			
    		}
    	}catch() {
    		
    	}
    }
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2038)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2243)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3278)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3055)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getHoveredASTNode(JavadocHover.java:1003)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getInfoText(JavadocHover.java:799)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getHoverInfo(JavadocHover.java:743)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.internalGetHoverInfo(JavadocHover.java:666)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getHoverInfo2(JavadocHover.java:658)
	at org.eclipse.lsp4e.jdt.LSJavaHoverProvider.lambda$0(LSJavaHoverProvider.java:68)
	at java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1804)
	at java.base/java.util.concurrent.CompletableFuture$AsyncRun.exec(CompletableFuture.java:1796)
	at java.base/java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:373)
	at java.base/java.util.concurrent.ForkJoinPool$WorkQueue.topLevelExec(ForkJoinPool.java:1182)
	at java.base/java.util.concurrent.ForkJoinPool.scan(ForkJoinPool.java:1655)
	at java.base/java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1622)
	at java.base/java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:165)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2025-06-10 23:49:56.954
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2038)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2243)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3278)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3055)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getHoveredASTNode(JavadocHover.java:1003)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getInfoText(JavadocHover.java:799)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getHoverInfo(JavadocHover.java:743)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.internalGetHoverInfo(JavadocHover.java:666)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getHoverInfo2(JavadocHover.java:658)
	at org.eclipse.lsp4e.jdt.LSJavaHoverProvider.lambda$0(LSJavaHoverProvider.java:68)
	at java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1804)
	at java.base/java.util.concurrent.CompletableFuture$AsyncRun.exec(CompletableFuture.java:1796)
	at java.base/java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:373)
	at java.base/java.util.concurrent.ForkJoinPool$WorkQueue.topLevelExec(ForkJoinPool.java:1182)
	at java.base/java.util.concurrent.ForkJoinPool.scan(ForkJoinPool.java:1655)
	at java.base/java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1622)
	at java.base/java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:165)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2025-06-10 23:49:56.957
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2038)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2243)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3278)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3055)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getHoveredASTNode(JavadocHover.java:1003)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getInfoText(JavadocHover.java:799)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getHoverInfo(JavadocHover.java:743)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.internalGetHoverInfo(JavadocHover.java:666)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getHoverInfo2(JavadocHover.java:658)
	at org.eclipse.lsp4e.jdt.LSJavaHoverProvider.lambda$0(LSJavaHoverProvider.java:68)
	at java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1804)
	at java.base/java.util.concurrent.CompletableFuture$AsyncRun.exec(CompletableFuture.java:1796)
	at java.base/java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:373)
	at java.base/java.util.concurrent.ForkJoinPool$WorkQueue.topLevelExec(ForkJoinPool.java:1182)
	at java.base/java.util.concurrent.ForkJoinPool.scan(ForkJoinPool.java:1655)
	at java.base/java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1622)
	at java.base/java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:165)

!ENTRY org.eclipse.jdt.core 4 4 2025-06-10 23:49:56.972
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package com.example.EMSbackend.Service;

import java.util.ArrayList;
import java.util.List;
import java.util.Optional;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import com.example.EMSbackend.DTO.EMSGetAllDTO;
import com.example.EMSbackend.DTO.EMSInsertMultipleRequestDTO;
import com.example.EMSbackend.DTO.EMSInsertMultipleResponseDTO;
import com.example.EMSbackend.DTO.EMSInsertSingleRequestDTO;
import com.example.EMSbackend.DTO.EMSInsertSingleResponseDTO;
import com.example.EMSbackend.DTO.EMSUpdateRequestDTO;
import com.example.EMSbackend.DTO.EMSUpdateResponseDTO;
import com.example.EMSbackend.Model.EMSModel;
import com.example.EMSbackend.Repository.EMSRepository;

import lombok.extern.slf4j.Slf4j;

@Slf4j
@Service
public class EMSService {

	@Autowired
	private EMSRepository emsRepository;
	
	
//GET_ALL_EMPLOYEE_DETAILS
    public EMSGetAllDTO getEmployeeDetailsAll() {
    	EMSGetAllDTO response = new EMSGetAllDTO();
    
    	
    	//try { 	
    	List<EMSModel> modelDetails = (List<EMSModel>) emsRepository.findAll();
    	response.setEmployeeDetailsAll(modelDetails);
    	
    	/*if(modelDetails!=null) {
    		response.setEmployeeDetailsAll(modelDetails);
    	}
    	else {
    		System.out.println("Employee not found");
    		//log.info("Service response not found");
    	}
    	
    	}catch (Exception e) {
            System.out.println("Error while fetching employee list: " + e.getMessage());
            e.printStackTrace();
        }*/
    	    
    	return response;
    }
    
//INSERT_ALL_EMPLOYEE_DETAILS(SINGLE_DATA/NOT_LIST)
    public EMSInsertSingleResponseDTO insertEmployeeDetails(EMSInsertSingleRequestDTO requestData) {
    	EMSInsertSingleResponseDTO response = new EMSInsertSingleResponseDTO();
    	String message = "FAILURE";
    	List<EMSModel> entityList = new ArrayList<>();
  
    	try {
    	if (requestData != null) {
    		EMSModel entity = new EMSModel();
    		entity.setId(requestData.getId());
			entity.setRid(requestData.getRid());
			entity.setName(requestData.getName());
			entity.setParentName(requestData.getParentName());
			entity.setStreamName(requestData.getStreamName());
			entity.setDOB(requestData.getDOB());
			entity.setPOY(requestData.getPOY());
			entity.setMobileNumber(requestData.getMobileNumber());
			entity.setMailID(requestData.getMailID());
			entity.setAddress(requestData.getAddress());
			entity.setStatus(requestData.getStatus());
			 
			c
   
			List<EMSModel> savedEntities = emsRepository.saveAll(entityList);
			if (savedEntities != null && !savedEntities.isEmpty()) {
	            message = "SUCCESS";
	            response.setMessage(message);
	            response.setCode("200 OK");
	        } else {
	            response.setMessage("Insert failed");
	            response.setCode("500 INTERNAL SERVER ERROR");
	        }
    	}else {
            response.setMessage("Input list is null or empty");
            response.setCode("400 BAD REQUEST");
        }
    	}catch (Exception e) {
    		e.printStackTrace();
    		response.setMessage("Exception occurred");
            response.setCode("500 INTERNAL SERVER ERROR");
    	}
  
    	return response;
    	
    }
    
    
   
//INSERT_ALL_EMPLOYEE_DETAILS(MULTIPLE/LIST)
    
    public EMSInsertMultipleResponseDTO insertEmployeeDetailsAll(EMSInsertMultipleRequestDTO insertData) {
    	EMSInsertMultipleResponseDTO response = new EMSInsertMultipleResponseDTO();
    	String message = "FAILURE";
    	
    	try {
    		List<EMSModel> dtoList = insertData.getEmployeeDetailsRequestAll();
 
    		if (dtoList != null && !dtoList.isEmpty()) {
    			
    			List<EMSModel> entityList = new ArrayList<>();
    			
    			for (EMSModel dto : dtoList){
    				
    			EMSModel entity = new EMSModel();
    			 entity.setId(dto.getId());
    			 entity.setRid(dto.getRid());
    			 entity.setName(dto.getName());
    			 entity.setParentName(dto.getParentName());
    			 entity.setStreamName(dto.getStreamName());
    			 entity.setDOB(dto.getDOB());
    			 entity.setPOY(dto.getPOY());
    			 entity.setMobileNumber(dto.getMobileNumber());
    			 entity.setMailID(dto.getMailID());
    			 entity.setAddress(dto.getAddress());
    			 entity.setStatus(dto.getStatus());
    			 
    			 entityList.add(entity);
    			}
    			
    			List<EMSModel> savedEntities = emsRepository.saveAll(entityList);
                

                if (savedEntities != null && !savedEntities.isEmpty()) {
                    message = "SUCCESS";
                    response.setMessage(message);
                    response.setCode("200 OK");
                } else {
                    response.setMessage("Insert failed");
                    response.setCode("500 INTERNAL SERVER ERROR");
                }
    			
    		}else {
    			response.setMessage("Input list is null or empty");
                response.setCode("400 BAD REQUEST");
    		}
    	}catch (Exception e) {
    		e.printStackTrace();
    		response.setMessage("Exception occurred");
            response.setCode("500 INTERNAL SERVER ERROR");
    	}
    	return response;
    }
    
//UPDATE
    public EMSUpdateResponseDTO updateEmployeeDetails(EMSUpdateRequestDTO insertData) {
    	EMSUpdateResponseDTO response =new EMSUpdateResponseDTO();
    	List<EMSModel> saveEntities =  new ArrayList<>();
    	try {
    		Optional<EMSModel> dbResponse = emsRepository.findById(insertData.getId());
    		if(dbResponse.isPresent()) {
    			EMSModel entity = new EMSModel();
    			
    			if(insertData.getId()!=null && insertData.getRid()!=null) {
    			
    				entity.setId(dbResponse.get().getId());
    				entity.setRid(insertData.getRid());
    				entity.setName(dbResponse.get().getName());
    				entity.setParentName(dbResponse.get().getParentName());
    				entity.setStreamName(dbResponse.get().getStreamName());
    				entity.setDOB(dbResponse.get().getDOB());
    				entity.setPOY(dbResponse.get().getPOY());
    				entity.setMobileNumber(dbResponse.get().getMobileNumber());
    				entity.setMailID(dbResponse.get().getMailID());
    				entity.setAddress(dbResponse.get().getAddress());
    				entity.setStatus(dbResponse.get().getStatus());
    				
    				saveEntities.add(entity);
    				
    				
    			}else if(insertData.getId()!=null && insertData.getName()!=null) {
    				entity.setId(dbResponse.get().getId());
    				entity.setRid(dbResponse.get().getRid());
    				entity.setName(insertData.getName());
    				entity.setParentName(dbResponse.get().getParentName());
    				entity.setStreamName(dbResponse.get().getStreamName());
    				entity.setDOB(dbResponse.get().getDOB());
    				entity.setPOY(dbResponse.get().getPOY());
    				entity.setMobileNumber(dbResponse.get().getMobileNumber());
    				entity.setMailID(dbResponse.get().getMailID());
    				entity.setAddress(dbResponse.get().getAddress());
    				entity.setStatus(dbResponse.get().getStatus());
    				
    				saveEntities.add(entity);
    			}else if(insertData.getId()!=null && insertData.getParentName()!=null) {
    				entity.setId(dbResponse.get().getId());
    				entity.setRid(dbResponse.get().getRid());
    				entity.setName(dbResponse.get().getName());
    				entity.setParentName(insertData.getParentName());
    				entity.setStreamName(dbResponse.get().getStreamName());
    				entity.setDOB(dbResponse.get().getDOB());
    				entity.setPOY(dbResponse.get().getPOY());
    				entity.setMobileNumber(dbResponse.get().getMobileNumber());
    				entity.setMailID(dbResponse.get().getMailID());
    				entity.setAddress(dbResponse.get().getAddress());
    				entity.setStatus(dbResponse.get().getStatus());
    				
    				saveEntities.add(entity);
    			}else if(insertData.getId()!=null && insertData.getStreamName()!=null) {
    				entity.setId(dbResponse.get().getId());
    				entity.setRid(dbResponse.get().getRid());
    				entity.setName(dbResponse.get().getName());
    				entity.setParentName(insertData.getParentName());
    				entity.setStreamName(dbResponse.get().getStreamName());
    				entity.setDOB(dbResponse.get().getDOB());
    				entity.setPOY(dbResponse.get().getPOY());
    				entity.setMobileNumber(dbResponse.get().getMobileNumber());
    				entity.setMailID(dbResponse.get().getMailID());
    				entity.setAddress(dbResponse.get().getAddress());
    				entity.setStatus(dbResponse.get().getStatus());
    				
    				saveEntities.add(entity);
    			}else if(insertData.getId()!=null && insertData.getDOB()!=null) {
    				
    			}else if(insertData.getId()!=null && insertData.getPOY()!=null) {
    				
    			}else if(insertData.getId()!=null && insertData.getMobileNumber()!=null) {
    				
    			}else if(insertData.getId()!=null && insertData.getMailID()!=null) {
    				
    			}else if(insertData.getId()!=null && insertData.getAddress()!=null) {
    				
    			}else (insertData.getId()!=null && insertData.getStatus()!=null) {
    				
    			}
    			
    		}
    	}catch() {
    		
    	}
    }
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2038)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2243)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3278)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3055)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getHoveredASTNode(JavadocHover.java:1003)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getHoveredNodeBinding(JavadocHover.java:882)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getAnnotations(JavadocHover.java:1173)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.addAnnotations(JavadocHover.java:1137)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getHoverInfo(JavadocHover.java:745)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.internalGetHoverInfo(JavadocHover.java:666)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getHoverInfo2(JavadocHover.java:658)
	at org.eclipse.lsp4e.jdt.LSJavaHoverProvider.lambda$0(LSJavaHoverProvider.java:68)
	at java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1804)
	at java.base/java.util.concurrent.CompletableFuture$AsyncRun.exec(CompletableFuture.java:1796)
	at java.base/java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:373)
	at java.base/java.util.concurrent.ForkJoinPool$WorkQueue.topLevelExec(ForkJoinPool.java:1182)
	at java.base/java.util.concurrent.ForkJoinPool.scan(ForkJoinPool.java:1655)
	at java.base/java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1622)
	at java.base/java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:165)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2025-06-10 23:49:56.975
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2038)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2243)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3278)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3055)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getHoveredASTNode(JavadocHover.java:1003)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getHoveredNodeBinding(JavadocHover.java:882)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getAnnotations(JavadocHover.java:1173)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.addAnnotations(JavadocHover.java:1137)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getHoverInfo(JavadocHover.java:745)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.internalGetHoverInfo(JavadocHover.java:666)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getHoverInfo2(JavadocHover.java:658)
	at org.eclipse.lsp4e.jdt.LSJavaHoverProvider.lambda$0(LSJavaHoverProvider.java:68)
	at java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1804)
	at java.base/java.util.concurrent.CompletableFuture$AsyncRun.exec(CompletableFuture.java:1796)
	at java.base/java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:373)
	at java.base/java.util.concurrent.ForkJoinPool$WorkQueue.topLevelExec(ForkJoinPool.java:1182)
	at java.base/java.util.concurrent.ForkJoinPool.scan(ForkJoinPool.java:1655)
	at java.base/java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1622)
	at java.base/java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:165)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2025-06-10 23:49:56.978
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2038)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2243)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3278)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3055)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getHoveredASTNode(JavadocHover.java:1003)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getHoveredNodeBinding(JavadocHover.java:882)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getAnnotations(JavadocHover.java:1173)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.addAnnotations(JavadocHover.java:1137)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getHoverInfo(JavadocHover.java:745)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.internalGetHoverInfo(JavadocHover.java:666)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getHoverInfo2(JavadocHover.java:658)
	at org.eclipse.lsp4e.jdt.LSJavaHoverProvider.lambda$0(LSJavaHoverProvider.java:68)
	at java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1804)
	at java.base/java.util.concurrent.CompletableFuture$AsyncRun.exec(CompletableFuture.java:1796)
	at java.base/java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:373)
	at java.base/java.util.concurrent.ForkJoinPool$WorkQueue.topLevelExec(ForkJoinPool.java:1182)
	at java.base/java.util.concurrent.ForkJoinPool.scan(ForkJoinPool.java:1655)
	at java.base/java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1622)
	at java.base/java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:165)

!ENTRY org.eclipse.jdt.core 4 4 2025-06-10 23:49:57.002
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package com.example.EMSbackend.Service;

import java.util.ArrayList;
import java.util.List;
import java.util.Optional;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import com.example.EMSbackend.DTO.EMSGetAllDTO;
import com.example.EMSbackend.DTO.EMSInsertMultipleRequestDTO;
import com.example.EMSbackend.DTO.EMSInsertMultipleResponseDTO;
import com.example.EMSbackend.DTO.EMSInsertSingleRequestDTO;
import com.example.EMSbackend.DTO.EMSInsertSingleResponseDTO;
import com.example.EMSbackend.DTO.EMSUpdateRequestDTO;
import com.example.EMSbackend.DTO.EMSUpdateResponseDTO;
import com.example.EMSbackend.Model.EMSModel;
import com.example.EMSbackend.Repository.EMSRepository;

import lombok.extern.slf4j.Slf4j;

@Slf4j
@Service
public class EMSService {

	@Autowired
	private EMSRepository emsRepository;
	
	
//GET_ALL_EMPLOYEE_DETAILS
    public EMSGetAllDTO getEmployeeDetailsAll() {
    	EMSGetAllDTO response = new EMSGetAllDTO();
    
    	
    	//try { 	
    	List<EMSModel> modelDetails = (List<EMSModel>) emsRepository.findAll();
    	response.setEmployeeDetailsAll(modelDetails);
    	
    	/*if(modelDetails!=null) {
    		response.setEmployeeDetailsAll(modelDetails);
    	}
    	else {
    		System.out.println("Employee not found");
    		//log.info("Service response not found");
    	}
    	
    	}catch (Exception e) {
            System.out.println("Error while fetching employee list: " + e.getMessage());
            e.printStackTrace();
        }*/
    	    
    	return response;
    }
    
//INSERT_ALL_EMPLOYEE_DETAILS(SINGLE_DATA/NOT_LIST)
    public EMSInsertSingleResponseDTO insertEmployeeDetails(EMSInsertSingleRequestDTO requestData) {
    	EMSInsertSingleResponseDTO response = new EMSInsertSingleResponseDTO();
    	String message = "FAILURE";
    	List<EMSModel> entityList = new ArrayList<>();
  
    	try {
    	if (requestData != null) {
    		EMSModel entity = new EMSModel();
    		entity.setId(requestData.getId());
			entity.setRid(requestData.getRid());
			entity.setName(requestData.getName());
			entity.setParentName(requestData.getParentName());
			entity.setStreamName(requestData.getStreamName());
			entity.setDOB(requestData.getDOB());
			entity.setPOY(requestData.getPOY());
			entity.setMobileNumber(requestData.getMobileNumber());
			entity.setMailID(requestData.getMailID());
			entity.setAddress(requestData.getAddress());
			entity.setStatus(requestData.getStatus());
			 
			c
   
			List<EMSModel> savedEntities = emsRepository.saveAll(entityList);
			if (savedEntities != null && !savedEntities.isEmpty()) {
	            message = "SUCCESS";
	            response.setMessage(message);
	            response.setCode("200 OK");
	        } else {
	            response.setMessage("Insert failed");
	            response.setCode("500 INTERNAL SERVER ERROR");
	        }
    	}else {
            response.setMessage("Input list is null or empty");
            response.setCode("400 BAD REQUEST");
        }
    	}catch (Exception e) {
    		e.printStackTrace();
    		response.setMessage("Exception occurred");
            response.setCode("500 INTERNAL SERVER ERROR");
    	}
  
    	return response;
    	
    }
    
    
   
//INSERT_ALL_EMPLOYEE_DETAILS(MULTIPLE/LIST)
    
    public EMSInsertMultipleResponseDTO insertEmployeeDetailsAll(EMSInsertMultipleRequestDTO insertData) {
    	EMSInsertMultipleResponseDTO response = new EMSInsertMultipleResponseDTO();
    	String message = "FAILURE";
    	
    	try {
    		List<EMSModel> dtoList = insertData.getEmployeeDetailsRequestAll();
 
    		if (dtoList != null && !dtoList.isEmpty()) {
    			
    			List<EMSModel> entityList = new ArrayList<>();
    			
    			for (EMSModel dto : dtoList){
    				
    			EMSModel entity = new EMSModel();
    			 entity.setId(dto.getId());
    			 entity.setRid(dto.getRid());
    			 entity.setName(dto.getName());
    			 entity.setParentName(dto.getParentName());
    			 entity.setStreamName(dto.getStreamName());
    			 entity.setDOB(dto.getDOB());
    			 entity.setPOY(dto.getPOY());
    			 entity.setMobileNumber(dto.getMobileNumber());
    			 entity.setMailID(dto.getMailID());
    			 entity.setAddress(dto.getAddress());
    			 entity.setStatus(dto.getStatus());
    			 
    			 entityList.add(entity);
    			}
    			
    			List<EMSModel> savedEntities = emsRepository.saveAll(entityList);
                

                if (savedEntities != null && !savedEntities.isEmpty()) {
                    message = "SUCCESS";
                    response.setMessage(message);
                    response.setCode("200 OK");
                } else {
                    response.setMessage("Insert failed");
                    response.setCode("500 INTERNAL SERVER ERROR");
                }
    			
    		}else {
    			response.setMessage("Input list is null or empty");
                response.setCode("400 BAD REQUEST");
    		}
    	}catch (Exception e) {
    		e.printStackTrace();
    		response.setMessage("Exception occurred");
            response.setCode("500 INTERNAL SERVER ERROR");
    	}
    	return response;
    }
    
//UPDATE
    public EMSUpdateResponseDTO updateEmployeeDetails(EMSUpdateRequestDTO insertData) {
    	EMSUpdateResponseDTO response =new EMSUpdateResponseDTO();
    	List<EMSModel> saveEntities =  new ArrayList<>();
    	try {
    		Optional<EMSModel> dbResponse = emsRepository.findById(insertData.getId());
    		if(dbResponse.isPresent()) {
    			EMSModel entity = new EMSModel();
    			
    			if(insertData.getId()!=null && insertData.getRid()!=null) {
    			
    				entity.setId(dbResponse.get().getId());
    				entity.setRid(insertData.getRid());
    				entity.setName(dbResponse.get().getName());
    				entity.setParentName(dbResponse.get().getParentName());
    				entity.setStreamName(dbResponse.get().getStreamName());
    				entity.setDOB(dbResponse.get().getDOB());
    				entity.setPOY(dbResponse.get().getPOY());
    				entity.setMobileNumber(dbResponse.get().getMobileNumber());
    				entity.setMailID(dbResponse.get().getMailID());
    				entity.setAddress(dbResponse.get().getAddress());
    				entity.setStatus(dbResponse.get().getStatus());
    				
    				saveEntities.add(entity);
    				
    				
    			}else if(insertData.getId()!=null && insertData.getName()!=null) {
    				entity.setId(dbResponse.get().getId());
    				entity.setRid(dbResponse.get().getRid());
    				entity.setName(insertData.getName());
    				entity.setParentName(dbResponse.get().getParentName());
    				entity.setStreamName(dbResponse.get().getStreamName());
    				entity.setDOB(dbResponse.get().getDOB());
    				entity.setPOY(dbResponse.get().getPOY());
    				entity.setMobileNumber(dbResponse.get().getMobileNumber());
    				entity.setMailID(dbResponse.get().getMailID());
    				entity.setAddress(dbResponse.get().getAddress());
    				entity.setStatus(dbResponse.get().getStatus());
    				
    				saveEntities.add(entity);
    			}else if(insertData.getId()!=null && insertData.getParentName()!=null) {
    				entity.setId(dbResponse.get().getId());
    				entity.setRid(dbResponse.get().getRid());
    				entity.setName(dbResponse.get().getName());
    				entity.setParentName(insertData.getParentName());
    				entity.setStreamName(dbResponse.get().getStreamName());
    				entity.setDOB(dbResponse.get().getDOB());
    				entity.setPOY(dbResponse.get().getPOY());
    				entity.setMobileNumber(dbResponse.get().getMobileNumber());
    				entity.setMailID(dbResponse.get().getMailID());
    				entity.setAddress(dbResponse.get().getAddress());
    				entity.setStatus(dbResponse.get().getStatus());
    				
    				saveEntities.add(entity);
    			}else if(insertData.getId()!=null && insertData.getStreamName()!=null) {
    				entity.setId(dbResponse.get().getId());
    				entity.setRid(dbResponse.get().getRid());
    				entity.setName(dbResponse.get().getName());
    				entity.setParentName(insertData.getParentName());
    				entity.setStreamName(dbResponse.get().getStreamName());
    				entity.setDOB(dbResponse.get().getDOB());
    				entity.setPOY(dbResponse.get().getPOY());
    				entity.setMobileNumber(dbResponse.get().getMobileNumber());
    				entity.setMailID(dbResponse.get().getMailID());
    				entity.setAddress(dbResponse.get().getAddress());
    				entity.setStatus(dbResponse.get().getStatus());
    				
    				saveEntities.add(entity);
    			}else if(insertData.getId()!=null && insertData.getDOB()!=null) {
    				
    			}else if(insertData.getId()!=null && insertData.getPOY()!=null) {
    				
    			}else if(insertData.getId()!=null && insertData.getMobileNumber()!=null) {
    				
    			}else if(insertData.getId()!=null && insertData.getMailID()!=null) {
    				
    			}else if(insertData.getId()!=null && insertData.getAddress()!=null) {
    				
    			}else (insertData.getId()!=null && insertData.getStatus()!=null) {
    				
    			}
    			
    		}
    	}catch() {
    		
    	}
    }
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2038)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2243)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3278)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3055)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.internalGetHoverInfo(NLSStringHover.java:141)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.getHoverInfo2(NLSStringHover.java:120)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:163)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:130)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:89)
	at org.eclipse.jface.text.TextViewerHoverManager$1.run(TextViewerHoverManager.java:155)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2025-06-10 23:49:57.006
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2038)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2243)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3278)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3055)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.internalGetHoverInfo(NLSStringHover.java:141)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.getHoverInfo2(NLSStringHover.java:120)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:163)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:130)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:89)
	at org.eclipse.jface.text.TextViewerHoverManager$1.run(TextViewerHoverManager.java:155)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2025-06-10 23:49:57.008
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2038)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2243)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3278)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3055)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.internalGetHoverInfo(NLSStringHover.java:141)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.getHoverInfo2(NLSStringHover.java:120)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:163)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:130)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:89)
	at org.eclipse.jface.text.TextViewerHoverManager$1.run(TextViewerHoverManager.java:155)

!ENTRY org.eclipse.jdt.core 4 4 2025-06-10 23:49:57.039
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package com.example.EMSbackend.Service;

import java.util.ArrayList;
import java.util.List;
import java.util.Optional;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import com.example.EMSbackend.DTO.EMSGetAllDTO;
import com.example.EMSbackend.DTO.EMSInsertMultipleRequestDTO;
import com.example.EMSbackend.DTO.EMSInsertMultipleResponseDTO;
import com.example.EMSbackend.DTO.EMSInsertSingleRequestDTO;
import com.example.EMSbackend.DTO.EMSInsertSingleResponseDTO;
import com.example.EMSbackend.DTO.EMSUpdateRequestDTO;
import com.example.EMSbackend.DTO.EMSUpdateResponseDTO;
import com.example.EMSbackend.Model.EMSModel;
import com.example.EMSbackend.Repository.EMSRepository;

import lombok.extern.slf4j.Slf4j;

@Slf4j
@Service
public class EMSService {

	@Autowired
	private EMSRepository emsRepository;
	
	
//GET_ALL_EMPLOYEE_DETAILS
    public EMSGetAllDTO getEmployeeDetailsAll() {
    	EMSGetAllDTO response = new EMSGetAllDTO();
    
    	
    	//try { 	
    	List<EMSModel> modelDetails = (List<EMSModel>) emsRepository.findAll();
    	response.setEmployeeDetailsAll(modelDetails);
    	
    	/*if(modelDetails!=null) {
    		response.setEmployeeDetailsAll(modelDetails);
    	}
    	else {
    		System.out.println("Employee not found");
    		//log.info("Service response not found");
    	}
    	
    	}catch (Exception e) {
            System.out.println("Error while fetching employee list: " + e.getMessage());
            e.printStackTrace();
        }*/
    	    
    	return response;
    }
    
//INSERT_ALL_EMPLOYEE_DETAILS(SINGLE_DATA/NOT_LIST)
    public EMSInsertSingleResponseDTO insertEmployeeDetails(EMSInsertSingleRequestDTO requestData) {
    	EMSInsertSingleResponseDTO response = new EMSInsertSingleResponseDTO();
    	String message = "FAILURE";
    	List<EMSModel> entityList = new ArrayList<>();
  
    	try {
    	if (requestData != null) {
    		EMSModel entity = new EMSModel();
    		entity.setId(requestData.getId());
			entity.setRid(requestData.getRid());
			entity.setName(requestData.getName());
			entity.setParentName(requestData.getParentName());
			entity.setStreamName(requestData.getStreamName());
			entity.setDOB(requestData.getDOB());
			entity.setPOY(requestData.getPOY());
			entity.setMobileNumber(requestData.getMobileNumber());
			entity.setMailID(requestData.getMailID());
			entity.setAddress(requestData.getAddress());
			entity.setStatus(requestData.getStatus());
			 
			c
   
			List<EMSModel> savedEntities = emsRepository.saveAll(entityList);
			if (savedEntities != null && !savedEntities.isEmpty()) {
	            message = "SUCCESS";
	            response.setMessage(message);
	            response.setCode("200 OK");
	        } else {
	            response.setMessage("Insert failed");
	            response.setCode("500 INTERNAL SERVER ERROR");
	        }
    	}else {
            response.setMessage("Input list is null or empty");
            response.setCode("400 BAD REQUEST");
        }
    	}catch (Exception e) {
    		e.printStackTrace();
    		response.setMessage("Exception occurred");
            response.setCode("500 INTERNAL SERVER ERROR");
    	}
  
    	return response;
    	
    }
    
    
   
//INSERT_ALL_EMPLOYEE_DETAILS(MULTIPLE/LIST)
    
    public EMSInsertMultipleResponseDTO insertEmployeeDetailsAll(EMSInsertMultipleRequestDTO insertData) {
    	EMSInsertMultipleResponseDTO response = new EMSInsertMultipleResponseDTO();
    	String message = "FAILURE";
    	
    	try {
    		List<EMSModel> dtoList = insertData.getEmployeeDetailsRequestAll();
 
    		if (dtoList != null && !dtoList.isEmpty()) {
    			
    			List<EMSModel> entityList = new ArrayList<>();
    			
    			for (EMSModel dto : dtoList){
    				
    			EMSModel entity = new EMSModel();
    			 entity.setId(dto.getId());
    			 entity.setRid(dto.getRid());
    			 entity.setName(dto.getName());
    			 entity.setParentName(dto.getParentName());
    			 entity.setStreamName(dto.getStreamName());
    			 entity.setDOB(dto.getDOB());
    			 entity.setPOY(dto.getPOY());
    			 entity.setMobileNumber(dto.getMobileNumber());
    			 entity.setMailID(dto.getMailID());
    			 entity.setAddress(dto.getAddress());
    			 entity.setStatus(dto.getStatus());
    			 
    			 entityList.add(entity);
    			}
    			
    			List<EMSModel> savedEntities = emsRepository.saveAll(entityList);
                

                if (savedEntities != null && !savedEntities.isEmpty()) {
                    message = "SUCCESS";
                    response.setMessage(message);
                    response.setCode("200 OK");
                } else {
                    response.setMessage("Insert failed");
                    response.setCode("500 INTERNAL SERVER ERROR");
                }
    			
    		}else {
    			response.setMessage("Input list is null or empty");
                response.setCode("400 BAD REQUEST");
    		}
    	}catch (Exception e) {
    		e.printStackTrace();
    		response.setMessage("Exception occurred");
            response.setCode("500 INTERNAL SERVER ERROR");
    	}
    	return response;
    }
    
//UPDATE
    public EMSUpdateResponseDTO updateEmployeeDetails(EMSUpdateRequestDTO insertData) {
    	EMSUpdateResponseDTO response =new EMSUpdateResponseDTO();
    	List<EMSModel> saveEntities =  new ArrayList<>();
    	try {
    		Optional<EMSModel> dbResponse = emsRepository.findById(insertData.getId());
    		if(dbResponse.isPresent()) {
    			EMSModel entity = new EMSModel();
    			
    			if(insertData.getId()!=null && insertData.getRid()!=null) {
    			
    				entity.setId(dbResponse.get().getId());
    				entity.setRid(insertData.getRid());
    				entity.setName(dbResponse.get().getName());
    				entity.setParentName(dbResponse.get().getParentName());
    				entity.setStreamName(dbResponse.get().getStreamName());
    				entity.setDOB(dbResponse.get().getDOB());
    				entity.setPOY(dbResponse.get().getPOY());
    				entity.setMobileNumber(dbResponse.get().getMobileNumber());
    				entity.setMailID(dbResponse.get().getMailID());
    				entity.setAddress(dbResponse.get().getAddress());
    				entity.setStatus(dbResponse.get().getStatus());
    				
    				saveEntities.add(entity);
    				
    				
    			}else if(insertData.getId()!=null && insertData.getName()!=null) {
    				entity.setId(dbResponse.get().getId());
    				entity.setRid(dbResponse.get().getRid());
    				entity.setName(insertData.getName());
    				entity.setParentName(dbResponse.get().getParentName());
    				entity.setStreamName(dbResponse.get().getStreamName());
    				entity.setDOB(dbResponse.get().getDOB());
    				entity.setPOY(dbResponse.get().getPOY());
    				entity.setMobileNumber(dbResponse.get().getMobileNumber());
    				entity.setMailID(dbResponse.get().getMailID());
    				entity.setAddress(dbResponse.get().getAddress());
    				entity.setStatus(dbResponse.get().getStatus());
    				
    				saveEntities.add(entity);
    			}else if(insertData.getId()!=null && insertData.getParentName()!=null) {
    				entity.setId(dbResponse.get().getId());
    				entity.setRid(dbResponse.get().getRid());
    				entity.setName(dbResponse.get().getName());
    				entity.setParentName(insertData.getParentName());
    				entity.setStreamName(dbResponse.get().getStreamName());
    				entity.setDOB(dbResponse.get().getDOB());
    				entity.setPOY(dbResponse.get().getPOY());
    				entity.setMobileNumber(dbResponse.get().getMobileNumber());
    				entity.setMailID(dbResponse.get().getMailID());
    				entity.setAddress(dbResponse.get().getAddress());
    				entity.setStatus(dbResponse.get().getStatus());
    				
    				saveEntities.add(entity);
    			}else if(insertData.getId()!=null && insertData.getStreamName()!=null) {
    				entity.setId(dbResponse.get().getId());
    				entity.setRid(dbResponse.get().getRid());
    				entity.setName(dbResponse.get().getName());
    				entity.setParentName(insertData.getParentName());
    				entity.setStreamName(dbResponse.get().getStreamName());
    				entity.setDOB(dbResponse.get().getDOB());
    				entity.setPOY(dbResponse.get().getPOY());
    				entity.setMobileNumber(dbResponse.get().getMobileNumber());
    				entity.setMailID(dbResponse.get().getMailID());
    				entity.setAddress(dbResponse.get().getAddress());
    				entity.setStatus(dbResponse.get().getStatus());
    				
    				saveEntities.add(entity);
    			}else if(insertData.getId()!=null && insertData.getDOB()!=null) {
    				
    			}else if(insertData.getId()!=null && insertData.getPOY()!=null) {
    				
    			}else if(insertData.getId()!=null && insertData.getMobileNumber()!=null) {
    				
    			}else if(insertData.getId()!=null && insertData.getMailID()!=null) {
    				
    			}else if(insertData.getId()!=null && insertData.getAddress()!=null) {
    				
    			}else (insertData.getId()!=null && insertData.getStatus()!=null) {
    				
    			}
    			
    		}
    	}catch() {
    		
    	}
    }
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2038)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2243)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3278)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3055)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getHoveredASTNode(JavadocHover.java:1003)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getInfoText(JavadocHover.java:799)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getHoverInfo(JavadocHover.java:743)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.internalGetHoverInfo(JavadocHover.java:666)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getHoverInfo2(JavadocHover.java:658)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:163)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:130)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:89)
	at org.eclipse.jface.text.TextViewerHoverManager$1.run(TextViewerHoverManager.java:155)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2025-06-10 23:49:57.042
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2038)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2243)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3278)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3055)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getHoveredASTNode(JavadocHover.java:1003)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getInfoText(JavadocHover.java:799)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getHoverInfo(JavadocHover.java:743)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.internalGetHoverInfo(JavadocHover.java:666)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getHoverInfo2(JavadocHover.java:658)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:163)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:130)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:89)
	at org.eclipse.jface.text.TextViewerHoverManager$1.run(TextViewerHoverManager.java:155)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2025-06-10 23:49:57.044
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2038)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2243)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3278)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3055)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getHoveredASTNode(JavadocHover.java:1003)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getInfoText(JavadocHover.java:799)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getHoverInfo(JavadocHover.java:743)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.internalGetHoverInfo(JavadocHover.java:666)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getHoverInfo2(JavadocHover.java:658)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:163)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:130)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:89)
	at org.eclipse.jface.text.TextViewerHoverManager$1.run(TextViewerHoverManager.java:155)

!ENTRY org.eclipse.jdt.core 4 4 2025-06-10 23:49:57.060
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package com.example.EMSbackend.Service;

import java.util.ArrayList;
import java.util.List;
import java.util.Optional;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import com.example.EMSbackend.DTO.EMSGetAllDTO;
import com.example.EMSbackend.DTO.EMSInsertMultipleRequestDTO;
import com.example.EMSbackend.DTO.EMSInsertMultipleResponseDTO;
import com.example.EMSbackend.DTO.EMSInsertSingleRequestDTO;
import com.example.EMSbackend.DTO.EMSInsertSingleResponseDTO;
import com.example.EMSbackend.DTO.EMSUpdateRequestDTO;
import com.example.EMSbackend.DTO.EMSUpdateResponseDTO;
import com.example.EMSbackend.Model.EMSModel;
import com.example.EMSbackend.Repository.EMSRepository;

import lombok.extern.slf4j.Slf4j;

@Slf4j
@Service
public class EMSService {

	@Autowired
	private EMSRepository emsRepository;
	
	
//GET_ALL_EMPLOYEE_DETAILS
    public EMSGetAllDTO getEmployeeDetailsAll() {
    	EMSGetAllDTO response = new EMSGetAllDTO();
    
    	
    	//try { 	
    	List<EMSModel> modelDetails = (List<EMSModel>) emsRepository.findAll();
    	response.setEmployeeDetailsAll(modelDetails);
    	
    	/*if(modelDetails!=null) {
    		response.setEmployeeDetailsAll(modelDetails);
    	}
    	else {
    		System.out.println("Employee not found");
    		//log.info("Service response not found");
    	}
    	
    	}catch (Exception e) {
            System.out.println("Error while fetching employee list: " + e.getMessage());
            e.printStackTrace();
        }*/
    	    
    	return response;
    }
    
//INSERT_ALL_EMPLOYEE_DETAILS(SINGLE_DATA/NOT_LIST)
    public EMSInsertSingleResponseDTO insertEmployeeDetails(EMSInsertSingleRequestDTO requestData) {
    	EMSInsertSingleResponseDTO response = new EMSInsertSingleResponseDTO();
    	String message = "FAILURE";
    	List<EMSModel> entityList = new ArrayList<>();
  
    	try {
    	if (requestData != null) {
    		EMSModel entity = new EMSModel();
    		entity.setId(requestData.getId());
			entity.setRid(requestData.getRid());
			entity.setName(requestData.getName());
			entity.setParentName(requestData.getParentName());
			entity.setStreamName(requestData.getStreamName());
			entity.setDOB(requestData.getDOB());
			entity.setPOY(requestData.getPOY());
			entity.setMobileNumber(requestData.getMobileNumber());
			entity.setMailID(requestData.getMailID());
			entity.setAddress(requestData.getAddress());
			entity.setStatus(requestData.getStatus());
			 
			c
   
			List<EMSModel> savedEntities = emsRepository.saveAll(entityList);
			if (savedEntities != null && !savedEntities.isEmpty()) {
	            message = "SUCCESS";
	            response.setMessage(message);
	            response.setCode("200 OK");
	        } else {
	            response.setMessage("Insert failed");
	            response.setCode("500 INTERNAL SERVER ERROR");
	        }
    	}else {
            response.setMessage("Input list is null or empty");
            response.setCode("400 BAD REQUEST");
        }
    	}catch (Exception e) {
    		e.printStackTrace();
    		response.setMessage("Exception occurred");
            response.setCode("500 INTERNAL SERVER ERROR");
    	}
  
    	return response;
    	
    }
    
    
   
//INSERT_ALL_EMPLOYEE_DETAILS(MULTIPLE/LIST)
    
    public EMSInsertMultipleResponseDTO insertEmployeeDetailsAll(EMSInsertMultipleRequestDTO insertData) {
    	EMSInsertMultipleResponseDTO response = new EMSInsertMultipleResponseDTO();
    	String message = "FAILURE";
    	
    	try {
    		List<EMSModel> dtoList = insertData.getEmployeeDetailsRequestAll();
 
    		if (dtoList != null && !dtoList.isEmpty()) {
    			
    			List<EMSModel> entityList = new ArrayList<>();
    			
    			for (EMSModel dto : dtoList){
    				
    			EMSModel entity = new EMSModel();
    			 entity.setId(dto.getId());
    			 entity.setRid(dto.getRid());
    			 entity.setName(dto.getName());
    			 entity.setParentName(dto.getParentName());
    			 entity.setStreamName(dto.getStreamName());
    			 entity.setDOB(dto.getDOB());
    			 entity.setPOY(dto.getPOY());
    			 entity.setMobileNumber(dto.getMobileNumber());
    			 entity.setMailID(dto.getMailID());
    			 entity.setAddress(dto.getAddress());
    			 entity.setStatus(dto.getStatus());
    			 
    			 entityList.add(entity);
    			}
    			
    			List<EMSModel> savedEntities = emsRepository.saveAll(entityList);
                

                if (savedEntities != null && !savedEntities.isEmpty()) {
                    message = "SUCCESS";
                    response.setMessage(message);
                    response.setCode("200 OK");
                } else {
                    response.setMessage("Insert failed");
                    response.setCode("500 INTERNAL SERVER ERROR");
                }
    			
    		}else {
    			response.setMessage("Input list is null or empty");
                response.setCode("400 BAD REQUEST");
    		}
    	}catch (Exception e) {
    		e.printStackTrace();
    		response.setMessage("Exception occurred");
            response.setCode("500 INTERNAL SERVER ERROR");
    	}
    	return response;
    }
    
//UPDATE
    public EMSUpdateResponseDTO updateEmployeeDetails(EMSUpdateRequestDTO insertData) {
    	EMSUpdateResponseDTO response =new EMSUpdateResponseDTO();
    	List<EMSModel> saveEntities =  new ArrayList<>();
    	try {
    		Optional<EMSModel> dbResponse = emsRepository.findById(insertData.getId());
    		if(dbResponse.isPresent()) {
    			EMSModel entity = new EMSModel();
    			
    			if(insertData.getId()!=null && insertData.getRid()!=null) {
    			
    				entity.setId(dbResponse.get().getId());
    				entity.setRid(insertData.getRid());
    				entity.setName(dbResponse.get().getName());
    				entity.setParentName(dbResponse.get().getParentName());
    				entity.setStreamName(dbResponse.get().getStreamName());
    				entity.setDOB(dbResponse.get().getDOB());
    				entity.setPOY(dbResponse.get().getPOY());
    				entity.setMobileNumber(dbResponse.get().getMobileNumber());
    				entity.setMailID(dbResponse.get().getMailID());
    				entity.setAddress(dbResponse.get().getAddress());
    				entity.setStatus(dbResponse.get().getStatus());
    				
    				saveEntities.add(entity);
    				
    				
    			}else if(insertData.getId()!=null && insertData.getName()!=null) {
    				entity.setId(dbResponse.get().getId());
    				entity.setRid(dbResponse.get().getRid());
    				entity.setName(insertData.getName());
    				entity.setParentName(dbResponse.get().getParentName());
    				entity.setStreamName(dbResponse.get().getStreamName());
    				entity.setDOB(dbResponse.get().getDOB());
    				entity.setPOY(dbResponse.get().getPOY());
    				entity.setMobileNumber(dbResponse.get().getMobileNumber());
    				entity.setMailID(dbResponse.get().getMailID());
    				entity.setAddress(dbResponse.get().getAddress());
    				entity.setStatus(dbResponse.get().getStatus());
    				
    				saveEntities.add(entity);
    			}else if(insertData.getId()!=null && insertData.getParentName()!=null) {
    				entity.setId(dbResponse.get().getId());
    				entity.setRid(dbResponse.get().getRid());
    				entity.setName(dbResponse.get().getName());
    				entity.setParentName(insertData.getParentName());
    				entity.setStreamName(dbResponse.get().getStreamName());
    				entity.setDOB(dbResponse.get().getDOB());
    				entity.setPOY(dbResponse.get().getPOY());
    				entity.setMobileNumber(dbResponse.get().getMobileNumber());
    				entity.setMailID(dbResponse.get().getMailID());
    				entity.setAddress(dbResponse.get().getAddress());
    				entity.setStatus(dbResponse.get().getStatus());
    				
    				saveEntities.add(entity);
    			}else if(insertData.getId()!=null && insertData.getStreamName()!=null) {
    				entity.setId(dbResponse.get().getId());
    				entity.setRid(dbResponse.get().getRid());
    				entity.setName(dbResponse.get().getName());
    				entity.setParentName(insertData.getParentName());
    				entity.setStreamName(dbResponse.get().getStreamName());
    				entity.setDOB(dbResponse.get().getDOB());
    				entity.setPOY(dbResponse.get().getPOY());
    				entity.setMobileNumber(dbResponse.get().getMobileNumber());
    				entity.setMailID(dbResponse.get().getMailID());
    				entity.setAddress(dbResponse.get().getAddress());
    				entity.setStatus(dbResponse.get().getStatus());
    				
    				saveEntities.add(entity);
    			}else if(insertData.getId()!=null && insertData.getDOB()!=null) {
    				
    			}else if(insertData.getId()!=null && insertData.getPOY()!=null) {
    				
    			}else if(insertData.getId()!=null && insertData.getMobileNumber()!=null) {
    				
    			}else if(insertData.getId()!=null && insertData.getMailID()!=null) {
    				
    			}else if(insertData.getId()!=null && insertData.getAddress()!=null) {
    				
    			}else (insertData.getId()!=null && insertData.getStatus()!=null) {
    				
    			}
    			
    		}
    	}catch() {
    		
    	}
    }
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2038)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2243)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3278)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3055)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getHoveredASTNode(JavadocHover.java:1003)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getHoveredNodeBinding(JavadocHover.java:882)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getAnnotations(JavadocHover.java:1173)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.addAnnotations(JavadocHover.java:1137)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getHoverInfo(JavadocHover.java:745)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.internalGetHoverInfo(JavadocHover.java:666)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getHoverInfo2(JavadocHover.java:658)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:163)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:130)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:89)
	at org.eclipse.jface.text.TextViewerHoverManager$1.run(TextViewerHoverManager.java:155)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2025-06-10 23:49:57.063
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2038)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2243)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3278)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3055)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getHoveredASTNode(JavadocHover.java:1003)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getHoveredNodeBinding(JavadocHover.java:882)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getAnnotations(JavadocHover.java:1173)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.addAnnotations(JavadocHover.java:1137)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getHoverInfo(JavadocHover.java:745)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.internalGetHoverInfo(JavadocHover.java:666)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getHoverInfo2(JavadocHover.java:658)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:163)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:130)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:89)
	at org.eclipse.jface.text.TextViewerHoverManager$1.run(TextViewerHoverManager.java:155)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2025-06-10 23:49:57.065
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2038)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2243)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3278)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3055)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getHoveredASTNode(JavadocHover.java:1003)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getHoveredNodeBinding(JavadocHover.java:882)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getAnnotations(JavadocHover.java:1173)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.addAnnotations(JavadocHover.java:1137)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getHoverInfo(JavadocHover.java:745)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.internalGetHoverInfo(JavadocHover.java:666)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getHoverInfo2(JavadocHover.java:658)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:163)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:130)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:89)
	at org.eclipse.jface.text.TextViewerHoverManager$1.run(TextViewerHoverManager.java:155)

!ENTRY org.eclipse.jdt.core 4 4 2025-06-10 23:50:06.967
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package com.example.EMSbackend.Service;

import java.util.ArrayList;
import java.util.List;
import java.util.Optional;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import com.example.EMSbackend.DTO.EMSGetAllDTO;
import com.example.EMSbackend.DTO.EMSInsertMultipleRequestDTO;
import com.example.EMSbackend.DTO.EMSInsertMultipleResponseDTO;
import com.example.EMSbackend.DTO.EMSInsertSingleRequestDTO;
import com.example.EMSbackend.DTO.EMSInsertSingleResponseDTO;
import com.example.EMSbackend.DTO.EMSUpdateRequestDTO;
import com.example.EMSbackend.DTO.EMSUpdateResponseDTO;
import com.example.EMSbackend.Model.EMSModel;
import com.example.EMSbackend.Repository.EMSRepository;

import lombok.extern.slf4j.Slf4j;

@Slf4j
@Service
public class EMSService {

	@Autowired
	private EMSRepository emsRepository;
	
	
//GET_ALL_EMPLOYEE_DETAILS
    public EMSGetAllDTO getEmployeeDetailsAll() {
    	EMSGetAllDTO response = new EMSGetAllDTO();
    
    	
    	//try { 	
    	List<EMSModel> modelDetails = (List<EMSModel>) emsRepository.findAll();
    	response.setEmployeeDetailsAll(modelDetails);
    	
    	/*if(modelDetails!=null) {
    		response.setEmployeeDetailsAll(modelDetails);
    	}
    	else {
    		System.out.println("Employee not found");
    		//log.info("Service response not found");
    	}
    	
    	}catch (Exception e) {
            System.out.println("Error while fetching employee list: " + e.getMessage());
            e.printStackTrace();
        }*/
    	    
    	return response;
    }
    
//INSERT_ALL_EMPLOYEE_DETAILS(SINGLE_DATA/NOT_LIST)
    public EMSInsertSingleResponseDTO insertEmployeeDetails(EMSInsertSingleRequestDTO requestData) {
    	EMSInsertSingleResponseDTO response = new EMSInsertSingleResponseDTO();
    	String message = "FAILURE";
    	List<EMSModel> entityList = new ArrayList<>();
  
    	try {
    	if (requestData != null) {
    		EMSModel entity = new EMSModel();
    		entity.setId(requestData.getId());
			entity.setRid(requestData.getRid());
			entity.setName(requestData.getName());
			entity.setParentName(requestData.getParentName());
			entity.setStreamName(requestData.getStreamName());
			entity.setDOB(requestData.getDOB());
			entity.setPOY(requestData.getPOY());
			entity.setMobileNumber(requestData.getMobileNumber());
			entity.setMailID(requestData.getMailID());
			entity.setAddress(requestData.getAddress());
			entity.setStatus(requestData.getStatus());
			 
			c
   
			List<EMSModel> savedEntities = emsRepository.saveAll(entityList);
			if (savedEntities != null && !savedEntities.isEmpty()) {
	            message = "SUCCESS";
	            response.setMessage(message);
	            response.setCode("200 OK");
	        } else {
	            response.setMessage("Insert failed");
	            response.setCode("500 INTERNAL SERVER ERROR");
	        }
    	}else {
            response.setMessage("Input list is null or empty");
            response.setCode("400 BAD REQUEST");
        }
    	}catch (Exception e) {
    		e.printStackTrace();
    		response.setMessage("Exception occurred");
            response.setCode("500 INTERNAL SERVER ERROR");
    	}
  
    	return response;
    	
    }
    
    
   
//INSERT_ALL_EMPLOYEE_DETAILS(MULTIPLE/LIST)
    
    public EMSInsertMultipleResponseDTO insertEmployeeDetailsAll(EMSInsertMultipleRequestDTO insertData) {
    	EMSInsertMultipleResponseDTO response = new EMSInsertMultipleResponseDTO();
    	String message = "FAILURE";
    	
    	try {
    		List<EMSModel> dtoList = insertData.getEmployeeDetailsRequestAll();
 
    		if (dtoList != null && !dtoList.isEmpty()) {
    			
    			List<EMSModel> entityList = new ArrayList<>();
    			
    			for (EMSModel dto : dtoList){
    				
    			EMSModel entity = new EMSModel();
    			 entity.setId(dto.getId());
    			 entity.setRid(dto.getRid());
    			 entity.setName(dto.getName());
    			 entity.setParentName(dto.getParentName());
    			 entity.setStreamName(dto.getStreamName());
    			 entity.setDOB(dto.getDOB());
    			 entity.setPOY(dto.getPOY());
    			 entity.setMobileNumber(dto.getMobileNumber());
    			 entity.setMailID(dto.getMailID());
    			 entity.setAddress(dto.getAddress());
    			 entity.setStatus(dto.getStatus());
    			 
    			 entityList.add(entity);
    			}
    			
    			List<EMSModel> savedEntities = emsRepository.saveAll(entityList);
                

                if (savedEntities != null && !savedEntities.isEmpty()) {
                    message = "SUCCESS";
                    response.setMessage(message);
                    response.setCode("200 OK");
                } else {
                    response.setMessage("Insert failed");
                    response.setCode("500 INTERNAL SERVER ERROR");
                }
    			
    		}else {
    			response.setMessage("Input list is null or empty");
                response.setCode("400 BAD REQUEST");
    		}
    	}catch (Exception e) {
    		e.printStackTrace();
    		response.setMessage("Exception occurred");
            response.setCode("500 INTERNAL SERVER ERROR");
    	}
    	return response;
    }
    
//UPDATE
    public EMSUpdateResponseDTO updateEmployeeDetails(EMSUpdateRequestDTO insertData) {
    	EMSUpdateResponseDTO response =new EMSUpdateResponseDTO();
    	List<EMSModel> saveEntities =  new ArrayList<>();
    	try {
    		Optional<EMSModel> dbResponse = emsRepository.findById(insertData.getId());
    		if(dbResponse.isPresent()) {
    			EMSModel entity = new EMSModel();
    			
    			if(insertData.getId()!=null && insertData.getRid()!=null) {
    			
    				entity.setId(dbResponse.get().getId());
    				entity.setRid(insertData.getRid());
    				entity.setName(dbResponse.get().getName());
    				entity.setParentName(dbResponse.get().getParentName());
    				entity.setStreamName(dbResponse.get().getStreamName());
    				entity.setDOB(dbResponse.get().getDOB());
    				entity.setPOY(dbResponse.get().getPOY());
    				entity.setMobileNumber(dbResponse.get().getMobileNumber());
    				entity.setMailID(dbResponse.get().getMailID());
    				entity.setAddress(dbResponse.get().getAddress());
    				entity.setStatus(dbResponse.get().getStatus());
    				
    				saveEntities.add(entity);
    				
    				
    			}else if(insertData.getId()!=null && insertData.getName()!=null) {
    				entity.setId(dbResponse.get().getId());
    				entity.setRid(dbResponse.get().getRid());
    				entity.setName(insertData.getName());
    				entity.setParentName(dbResponse.get().getParentName());
    				entity.setStreamName(dbResponse.get().getStreamName());
    				entity.setDOB(dbResponse.get().getDOB());
    				entity.setPOY(dbResponse.get().getPOY());
    				entity.setMobileNumber(dbResponse.get().getMobileNumber());
    				entity.setMailID(dbResponse.get().getMailID());
    				entity.setAddress(dbResponse.get().getAddress());
    				entity.setStatus(dbResponse.get().getStatus());
    				
    				saveEntities.add(entity);
    			}else if(insertData.getId()!=null && insertData.getParentName()!=null) {
    				entity.setId(dbResponse.get().getId());
    				entity.setRid(dbResponse.get().getRid());
    				entity.setName(dbResponse.get().getName());
    				entity.setParentName(insertData.getParentName());
    				entity.setStreamName(dbResponse.get().getStreamName());
    				entity.setDOB(dbResponse.get().getDOB());
    				entity.setPOY(dbResponse.get().getPOY());
    				entity.setMobileNumber(dbResponse.get().getMobileNumber());
    				entity.setMailID(dbResponse.get().getMailID());
    				entity.setAddress(dbResponse.get().getAddress());
    				entity.setStatus(dbResponse.get().getStatus());
    				
    				saveEntities.add(entity);
    			}else if(insertData.getId()!=null && insertData.getStreamName()!=null) {
    				entity.setId(dbResponse.get().getId());
    				entity.setRid(dbResponse.get().getRid());
    				entity.setName(dbResponse.get().getName());
    				entity.setParentName(insertData.getParentName());
    				entity.setStreamName(dbResponse.get().getStreamName());
    				entity.setDOB(dbResponse.get().getDOB());
    				entity.setPOY(dbResponse.get().getPOY());
    				entity.setMobileNumber(dbResponse.get().getMobileNumber());
    				entity.setMailID(dbResponse.get().getMailID());
    				entity.setAddress(dbResponse.get().getAddress());
    				entity.setStatus(dbResponse.get().getStatus());
    				
    				saveEntities.add(entity);
    			}else if(insertData.getId()!=null && insertData.getDOB()!=null) {
    				
    			}else if(insertData.getId()!=null && insertData.getPOY()!=null) {
    				
    			}else if(insertData.getId()!=null && insertData.getMobileNumber()!=null) {
    				
    			}else if(insertData.getId()!=null && insertData.getMailID()!=null) {
    				
    			}else if(insertData.getId()!=null && insertData.getAddress()!=null) {
    				
    			}else (insertData.getId()!=null && insertData.getStatus()!=null) {
    				
    			}
    			
    		}
    	}catch() {
    		
    	}
    }
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2038)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2243)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3278)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3055)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getHoveredASTNode(JavadocHover.java:1003)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getInfoText(JavadocHover.java:799)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getHoverInfo(JavadocHover.java:743)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.internalGetHoverInfo(JavadocHover.java:666)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getHoverInfo2(JavadocHover.java:658)
	at org.eclipse.lsp4e.jdt.LSJavaHoverProvider.lambda$0(LSJavaHoverProvider.java:68)
	at java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1804)
	at java.base/java.util.concurrent.CompletableFuture$AsyncRun.exec(CompletableFuture.java:1796)
	at java.base/java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:373)
	at java.base/java.util.concurrent.ForkJoinPool$WorkQueue.topLevelExec(ForkJoinPool.java:1182)
	at java.base/java.util.concurrent.ForkJoinPool.scan(ForkJoinPool.java:1655)
	at java.base/java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1622)
	at java.base/java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:165)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2025-06-10 23:50:06.971
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2038)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2243)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3278)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3055)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getHoveredASTNode(JavadocHover.java:1003)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getInfoText(JavadocHover.java:799)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getHoverInfo(JavadocHover.java:743)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.internalGetHoverInfo(JavadocHover.java:666)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getHoverInfo2(JavadocHover.java:658)
	at org.eclipse.lsp4e.jdt.LSJavaHoverProvider.lambda$0(LSJavaHoverProvider.java:68)
	at java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1804)
	at java.base/java.util.concurrent.CompletableFuture$AsyncRun.exec(CompletableFuture.java:1796)
	at java.base/java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:373)
	at java.base/java.util.concurrent.ForkJoinPool$WorkQueue.topLevelExec(ForkJoinPool.java:1182)
	at java.base/java.util.concurrent.ForkJoinPool.scan(ForkJoinPool.java:1655)
	at java.base/java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1622)
	at java.base/java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:165)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2025-06-10 23:50:06.973
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2038)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2243)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3278)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3055)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getHoveredASTNode(JavadocHover.java:1003)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getInfoText(JavadocHover.java:799)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getHoverInfo(JavadocHover.java:743)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.internalGetHoverInfo(JavadocHover.java:666)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getHoverInfo2(JavadocHover.java:658)
	at org.eclipse.lsp4e.jdt.LSJavaHoverProvider.lambda$0(LSJavaHoverProvider.java:68)
	at java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1804)
	at java.base/java.util.concurrent.CompletableFuture$AsyncRun.exec(CompletableFuture.java:1796)
	at java.base/java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:373)
	at java.base/java.util.concurrent.ForkJoinPool$WorkQueue.topLevelExec(ForkJoinPool.java:1182)
	at java.base/java.util.concurrent.ForkJoinPool.scan(ForkJoinPool.java:1655)
	at java.base/java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1622)
	at java.base/java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:165)

!ENTRY org.eclipse.jdt.core 4 4 2025-06-10 23:50:06.991
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package com.example.EMSbackend.Service;

import java.util.ArrayList;
import java.util.List;
import java.util.Optional;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import com.example.EMSbackend.DTO.EMSGetAllDTO;
import com.example.EMSbackend.DTO.EMSInsertMultipleRequestDTO;
import com.example.EMSbackend.DTO.EMSInsertMultipleResponseDTO;
import com.example.EMSbackend.DTO.EMSInsertSingleRequestDTO;
import com.example.EMSbackend.DTO.EMSInsertSingleResponseDTO;
import com.example.EMSbackend.DTO.EMSUpdateRequestDTO;
import com.example.EMSbackend.DTO.EMSUpdateResponseDTO;
import com.example.EMSbackend.Model.EMSModel;
import com.example.EMSbackend.Repository.EMSRepository;

import lombok.extern.slf4j.Slf4j;

@Slf4j
@Service
public class EMSService {

	@Autowired
	private EMSRepository emsRepository;
	
	
//GET_ALL_EMPLOYEE_DETAILS
    public EMSGetAllDTO getEmployeeDetailsAll() {
    	EMSGetAllDTO response = new EMSGetAllDTO();
    
    	
    	//try { 	
    	List<EMSModel> modelDetails = (List<EMSModel>) emsRepository.findAll();
    	response.setEmployeeDetailsAll(modelDetails);
    	
    	/*if(modelDetails!=null) {
    		response.setEmployeeDetailsAll(modelDetails);
    	}
    	else {
    		System.out.println("Employee not found");
    		//log.info("Service response not found");
    	}
    	
    	}catch (Exception e) {
            System.out.println("Error while fetching employee list: " + e.getMessage());
            e.printStackTrace();
        }*/
    	    
    	return response;
    }
    
//INSERT_ALL_EMPLOYEE_DETAILS(SINGLE_DATA/NOT_LIST)
    public EMSInsertSingleResponseDTO insertEmployeeDetails(EMSInsertSingleRequestDTO requestData) {
    	EMSInsertSingleResponseDTO response = new EMSInsertSingleResponseDTO();
    	String message = "FAILURE";
    	List<EMSModel> entityList = new ArrayList<>();
  
    	try {
    	if (requestData != null) {
    		EMSModel entity = new EMSModel();
    		entity.setId(requestData.getId());
			entity.setRid(requestData.getRid());
			entity.setName(requestData.getName());
			entity.setParentName(requestData.getParentName());
			entity.setStreamName(requestData.getStreamName());
			entity.setDOB(requestData.getDOB());
			entity.setPOY(requestData.getPOY());
			entity.setMobileNumber(requestData.getMobileNumber());
			entity.setMailID(requestData.getMailID());
			entity.setAddress(requestData.getAddress());
			entity.setStatus(requestData.getStatus());
			 
			c
   
			List<EMSModel> savedEntities = emsRepository.saveAll(entityList);
			if (savedEntities != null && !savedEntities.isEmpty()) {
	            message = "SUCCESS";
	            response.setMessage(message);
	            response.setCode("200 OK");
	        } else {
	            response.setMessage("Insert failed");
	            response.setCode("500 INTERNAL SERVER ERROR");
	        }
    	}else {
            response.setMessage("Input list is null or empty");
            response.setCode("400 BAD REQUEST");
        }
    	}catch (Exception e) {
    		e.printStackTrace();
    		response.setMessage("Exception occurred");
            response.setCode("500 INTERNAL SERVER ERROR");
    	}
  
    	return response;
    	
    }
    
    
   
//INSERT_ALL_EMPLOYEE_DETAILS(MULTIPLE/LIST)
    
    public EMSInsertMultipleResponseDTO insertEmployeeDetailsAll(EMSInsertMultipleRequestDTO insertData) {
    	EMSInsertMultipleResponseDTO response = new EMSInsertMultipleResponseDTO();
    	String message = "FAILURE";
    	
    	try {
    		List<EMSModel> dtoList = insertData.getEmployeeDetailsRequestAll();
 
    		if (dtoList != null && !dtoList.isEmpty()) {
    			
    			List<EMSModel> entityList = new ArrayList<>();
    			
    			for (EMSModel dto : dtoList){
    				
    			EMSModel entity = new EMSModel();
    			 entity.setId(dto.getId());
    			 entity.setRid(dto.getRid());
    			 entity.setName(dto.getName());
    			 entity.setParentName(dto.getParentName());
    			 entity.setStreamName(dto.getStreamName());
    			 entity.setDOB(dto.getDOB());
    			 entity.setPOY(dto.getPOY());
    			 entity.setMobileNumber(dto.getMobileNumber());
    			 entity.setMailID(dto.getMailID());
    			 entity.setAddress(dto.getAddress());
    			 entity.setStatus(dto.getStatus());
    			 
    			 entityList.add(entity);
    			}
    			
    			List<EMSModel> savedEntities = emsRepository.saveAll(entityList);
                

                if (savedEntities != null && !savedEntities.isEmpty()) {
                    message = "SUCCESS";
                    response.setMessage(message);
                    response.setCode("200 OK");
                } else {
                    response.setMessage("Insert failed");
                    response.setCode("500 INTERNAL SERVER ERROR");
                }
    			
    		}else {
    			response.setMessage("Input list is null or empty");
                response.setCode("400 BAD REQUEST");
    		}
    	}catch (Exception e) {
    		e.printStackTrace();
    		response.setMessage("Exception occurred");
            response.setCode("500 INTERNAL SERVER ERROR");
    	}
    	return response;
    }
    
//UPDATE
    public EMSUpdateResponseDTO updateEmployeeDetails(EMSUpdateRequestDTO insertData) {
    	EMSUpdateResponseDTO response =new EMSUpdateResponseDTO();
    	List<EMSModel> saveEntities =  new ArrayList<>();
    	try {
    		Optional<EMSModel> dbResponse = emsRepository.findById(insertData.getId());
    		if(dbResponse.isPresent()) {
    			EMSModel entity = new EMSModel();
    			
    			if(insertData.getId()!=null && insertData.getRid()!=null) {
    			
    				entity.setId(dbResponse.get().getId());
    				entity.setRid(insertData.getRid());
    				entity.setName(dbResponse.get().getName());
    				entity.setParentName(dbResponse.get().getParentName());
    				entity.setStreamName(dbResponse.get().getStreamName());
    				entity.setDOB(dbResponse.get().getDOB());
    				entity.setPOY(dbResponse.get().getPOY());
    				entity.setMobileNumber(dbResponse.get().getMobileNumber());
    				entity.setMailID(dbResponse.get().getMailID());
    				entity.setAddress(dbResponse.get().getAddress());
    				entity.setStatus(dbResponse.get().getStatus());
    				
    				saveEntities.add(entity);
    				
    				
    			}else if(insertData.getId()!=null && insertData.getName()!=null) {
    				entity.setId(dbResponse.get().getId());
    				entity.setRid(dbResponse.get().getRid());
    				entity.setName(insertData.getName());
    				entity.setParentName(dbResponse.get().getParentName());
    				entity.setStreamName(dbResponse.get().getStreamName());
    				entity.setDOB(dbResponse.get().getDOB());
    				entity.setPOY(dbResponse.get().getPOY());
    				entity.setMobileNumber(dbResponse.get().getMobileNumber());
    				entity.setMailID(dbResponse.get().getMailID());
    				entity.setAddress(dbResponse.get().getAddress());
    				entity.setStatus(dbResponse.get().getStatus());
    				
    				saveEntities.add(entity);
    			}else if(insertData.getId()!=null && insertData.getParentName()!=null) {
    				entity.setId(dbResponse.get().getId());
    				entity.setRid(dbResponse.get().getRid());
    				entity.setName(dbResponse.get().getName());
    				entity.setParentName(insertData.getParentName());
    				entity.setStreamName(dbResponse.get().getStreamName());
    				entity.setDOB(dbResponse.get().getDOB());
    				entity.setPOY(dbResponse.get().getPOY());
    				entity.setMobileNumber(dbResponse.get().getMobileNumber());
    				entity.setMailID(dbResponse.get().getMailID());
    				entity.setAddress(dbResponse.get().getAddress());
    				entity.setStatus(dbResponse.get().getStatus());
    				
    				saveEntities.add(entity);
    			}else if(insertData.getId()!=null && insertData.getStreamName()!=null) {
    				entity.setId(dbResponse.get().getId());
    				entity.setRid(dbResponse.get().getRid());
    				entity.setName(dbResponse.get().getName());
    				entity.setParentName(insertData.getParentName());
    				entity.setStreamName(dbResponse.get().getStreamName());
    				entity.setDOB(dbResponse.get().getDOB());
    				entity.setPOY(dbResponse.get().getPOY());
    				entity.setMobileNumber(dbResponse.get().getMobileNumber());
    				entity.setMailID(dbResponse.get().getMailID());
    				entity.setAddress(dbResponse.get().getAddress());
    				entity.setStatus(dbResponse.get().getStatus());
    				
    				saveEntities.add(entity);
    			}else if(insertData.getId()!=null && insertData.getDOB()!=null) {
    				
    			}else if(insertData.getId()!=null && insertData.getPOY()!=null) {
    				
    			}else if(insertData.getId()!=null && insertData.getMobileNumber()!=null) {
    				
    			}else if(insertData.getId()!=null && insertData.getMailID()!=null) {
    				
    			}else if(insertData.getId()!=null && insertData.getAddress()!=null) {
    				
    			}else (insertData.getId()!=null && insertData.getStatus()!=null) {
    				
    			}
    			
    		}
    	}catch() {
    		
    	}
    }
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2038)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2243)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3278)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3055)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.internalGetHoverInfo(NLSStringHover.java:141)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.getHoverInfo2(NLSStringHover.java:120)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:163)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:130)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:89)
	at org.eclipse.jface.text.TextViewerHoverManager$1.run(TextViewerHoverManager.java:155)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2025-06-10 23:50:06.993
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2038)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2243)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3278)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3055)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.internalGetHoverInfo(NLSStringHover.java:141)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.getHoverInfo2(NLSStringHover.java:120)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:163)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:130)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:89)
	at org.eclipse.jface.text.TextViewerHoverManager$1.run(TextViewerHoverManager.java:155)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2025-06-10 23:50:06.996
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2038)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2243)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3278)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3055)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.internalGetHoverInfo(NLSStringHover.java:141)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.getHoverInfo2(NLSStringHover.java:120)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:163)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:130)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:89)
	at org.eclipse.jface.text.TextViewerHoverManager$1.run(TextViewerHoverManager.java:155)

!ENTRY org.eclipse.jdt.core 4 4 2025-06-10 23:50:07.024
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package com.example.EMSbackend.Service;

import java.util.ArrayList;
import java.util.List;
import java.util.Optional;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import com.example.EMSbackend.DTO.EMSGetAllDTO;
import com.example.EMSbackend.DTO.EMSInsertMultipleRequestDTO;
import com.example.EMSbackend.DTO.EMSInsertMultipleResponseDTO;
import com.example.EMSbackend.DTO.EMSInsertSingleRequestDTO;
import com.example.EMSbackend.DTO.EMSInsertSingleResponseDTO;
import com.example.EMSbackend.DTO.EMSUpdateRequestDTO;
import com.example.EMSbackend.DTO.EMSUpdateResponseDTO;
import com.example.EMSbackend.Model.EMSModel;
import com.example.EMSbackend.Repository.EMSRepository;

import lombok.extern.slf4j.Slf4j;

@Slf4j
@Service
public class EMSService {

	@Autowired
	private EMSRepository emsRepository;
	
	
//GET_ALL_EMPLOYEE_DETAILS
    public EMSGetAllDTO getEmployeeDetailsAll() {
    	EMSGetAllDTO response = new EMSGetAllDTO();
    
    	
    	//try { 	
    	List<EMSModel> modelDetails = (List<EMSModel>) emsRepository.findAll();
    	response.setEmployeeDetailsAll(modelDetails);
    	
    	/*if(modelDetails!=null) {
    		response.setEmployeeDetailsAll(modelDetails);
    	}
    	else {
    		System.out.println("Employee not found");
    		//log.info("Service response not found");
    	}
    	
    	}catch (Exception e) {
            System.out.println("Error while fetching employee list: " + e.getMessage());
            e.printStackTrace();
        }*/
    	    
    	return response;
    }
    
//INSERT_ALL_EMPLOYEE_DETAILS(SINGLE_DATA/NOT_LIST)
    public EMSInsertSingleResponseDTO insertEmployeeDetails(EMSInsertSingleRequestDTO requestData) {
    	EMSInsertSingleResponseDTO response = new EMSInsertSingleResponseDTO();
    	String message = "FAILURE";
    	List<EMSModel> entityList = new ArrayList<>();
  
    	try {
    	if (requestData != null) {
    		EMSModel entity = new EMSModel();
    		entity.setId(requestData.getId());
			entity.setRid(requestData.getRid());
			entity.setName(requestData.getName());
			entity.setParentName(requestData.getParentName());
			entity.setStreamName(requestData.getStreamName());
			entity.setDOB(requestData.getDOB());
			entity.setPOY(requestData.getPOY());
			entity.setMobileNumber(requestData.getMobileNumber());
			entity.setMailID(requestData.getMailID());
			entity.setAddress(requestData.getAddress());
			entity.setStatus(requestData.getStatus());
			 
			c
   
			List<EMSModel> savedEntities = emsRepository.saveAll(entityList);
			if (savedEntities != null && !savedEntities.isEmpty()) {
	            message = "SUCCESS";
	            response.setMessage(message);
	            response.setCode("200 OK");
	        } else {
	            response.setMessage("Insert failed");
	            response.setCode("500 INTERNAL SERVER ERROR");
	        }
    	}else {
            response.setMessage("Input list is null or empty");
            response.setCode("400 BAD REQUEST");
        }
    	}catch (Exception e) {
    		e.printStackTrace();
    		response.setMessage("Exception occurred");
            response.setCode("500 INTERNAL SERVER ERROR");
    	}
  
    	return response;
    	
    }
    
    
   
//INSERT_ALL_EMPLOYEE_DETAILS(MULTIPLE/LIST)
    
    public EMSInsertMultipleResponseDTO insertEmployeeDetailsAll(EMSInsertMultipleRequestDTO insertData) {
    	EMSInsertMultipleResponseDTO response = new EMSInsertMultipleResponseDTO();
    	String message = "FAILURE";
    	
    	try {
    		List<EMSModel> dtoList = insertData.getEmployeeDetailsRequestAll();
 
    		if (dtoList != null && !dtoList.isEmpty()) {
    			
    			List<EMSModel> entityList = new ArrayList<>();
    			
    			for (EMSModel dto : dtoList){
    				
    			EMSModel entity = new EMSModel();
    			 entity.setId(dto.getId());
    			 entity.setRid(dto.getRid());
    			 entity.setName(dto.getName());
    			 entity.setParentName(dto.getParentName());
    			 entity.setStreamName(dto.getStreamName());
    			 entity.setDOB(dto.getDOB());
    			 entity.setPOY(dto.getPOY());
    			 entity.setMobileNumber(dto.getMobileNumber());
    			 entity.setMailID(dto.getMailID());
    			 entity.setAddress(dto.getAddress());
    			 entity.setStatus(dto.getStatus());
    			 
    			 entityList.add(entity);
    			}
    			
    			List<EMSModel> savedEntities = emsRepository.saveAll(entityList);
                

                if (savedEntities != null && !savedEntities.isEmpty()) {
                    message = "SUCCESS";
                    response.setMessage(message);
                    response.setCode("200 OK");
                } else {
                    response.setMessage("Insert failed");
                    response.setCode("500 INTERNAL SERVER ERROR");
                }
    			
    		}else {
    			response.setMessage("Input list is null or empty");
                response.setCode("400 BAD REQUEST");
    		}
    	}catch (Exception e) {
    		e.printStackTrace();
    		response.setMessage("Exception occurred");
            response.setCode("500 INTERNAL SERVER ERROR");
    	}
    	return response;
    }
    
//UPDATE
    public EMSUpdateResponseDTO updateEmployeeDetails(EMSUpdateRequestDTO insertData) {
    	EMSUpdateResponseDTO response =new EMSUpdateResponseDTO();
    	List<EMSModel> saveEntities =  new ArrayList<>();
    	try {
    		Optional<EMSModel> dbResponse = emsRepository.findById(insertData.getId());
    		if(dbResponse.isPresent()) {
    			EMSModel entity = new EMSModel();
    			
    			if(insertData.getId()!=null && insertData.getRid()!=null) {
    			
    				entity.setId(dbResponse.get().getId());
    				entity.setRid(insertData.getRid());
    				entity.setName(dbResponse.get().getName());
    				entity.setParentName(dbResponse.get().getParentName());
    				entity.setStreamName(dbResponse.get().getStreamName());
    				entity.setDOB(dbResponse.get().getDOB());
    				entity.setPOY(dbResponse.get().getPOY());
    				entity.setMobileNumber(dbResponse.get().getMobileNumber());
    				entity.setMailID(dbResponse.get().getMailID());
    				entity.setAddress(dbResponse.get().getAddress());
    				entity.setStatus(dbResponse.get().getStatus());
    				
    				saveEntities.add(entity);
    				
    				
    			}else if(insertData.getId()!=null && insertData.getName()!=null) {
    				entity.setId(dbResponse.get().getId());
    				entity.setRid(dbResponse.get().getRid());
    				entity.setName(insertData.getName());
    				entity.setParentName(dbResponse.get().getParentName());
    				entity.setStreamName(dbResponse.get().getStreamName());
    				entity.setDOB(dbResponse.get().getDOB());
    				entity.setPOY(dbResponse.get().getPOY());
    				entity.setMobileNumber(dbResponse.get().getMobileNumber());
    				entity.setMailID(dbResponse.get().getMailID());
    				entity.setAddress(dbResponse.get().getAddress());
    				entity.setStatus(dbResponse.get().getStatus());
    				
    				saveEntities.add(entity);
    			}else if(insertData.getId()!=null && insertData.getParentName()!=null) {
    				entity.setId(dbResponse.get().getId());
    				entity.setRid(dbResponse.get().getRid());
    				entity.setName(dbResponse.get().getName());
    				entity.setParentName(insertData.getParentName());
    				entity.setStreamName(dbResponse.get().getStreamName());
    				entity.setDOB(dbResponse.get().getDOB());
    				entity.setPOY(dbResponse.get().getPOY());
    				entity.setMobileNumber(dbResponse.get().getMobileNumber());
    				entity.setMailID(dbResponse.get().getMailID());
    				entity.setAddress(dbResponse.get().getAddress());
    				entity.setStatus(dbResponse.get().getStatus());
    				
    				saveEntities.add(entity);
    			}else if(insertData.getId()!=null && insertData.getStreamName()!=null) {
    				entity.setId(dbResponse.get().getId());
    				entity.setRid(dbResponse.get().getRid());
    				entity.setName(dbResponse.get().getName());
    				entity.setParentName(insertData.getParentName());
    				entity.setStreamName(dbResponse.get().getStreamName());
    				entity.setDOB(dbResponse.get().getDOB());
    				entity.setPOY(dbResponse.get().getPOY());
    				entity.setMobileNumber(dbResponse.get().getMobileNumber());
    				entity.setMailID(dbResponse.get().getMailID());
    				entity.setAddress(dbResponse.get().getAddress());
    				entity.setStatus(dbResponse.get().getStatus());
    				
    				saveEntities.add(entity);
    			}else if(insertData.getId()!=null && insertData.getDOB()!=null) {
    				
    			}else if(insertData.getId()!=null && insertData.getPOY()!=null) {
    				
    			}else if(insertData.getId()!=null && insertData.getMobileNumber()!=null) {
    				
    			}else if(insertData.getId()!=null && insertData.getMailID()!=null) {
    				
    			}else if(insertData.getId()!=null && insertData.getAddress()!=null) {
    				
    			}else (insertData.getId()!=null && insertData.getStatus()!=null) {
    				
    			}
    			
    		}
    	}catch() {
    		
    	}
    }
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2038)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2243)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3278)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3055)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getHoveredASTNode(JavadocHover.java:1003)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getInfoText(JavadocHover.java:799)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getHoverInfo(JavadocHover.java:743)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.internalGetHoverInfo(JavadocHover.java:666)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getHoverInfo2(JavadocHover.java:658)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:163)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:130)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:89)
	at org.eclipse.jface.text.TextViewerHoverManager$1.run(TextViewerHoverManager.java:155)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2025-06-10 23:50:07.027
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2038)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2243)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3278)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3055)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getHoveredASTNode(JavadocHover.java:1003)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getInfoText(JavadocHover.java:799)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getHoverInfo(JavadocHover.java:743)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.internalGetHoverInfo(JavadocHover.java:666)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getHoverInfo2(JavadocHover.java:658)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:163)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:130)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:89)
	at org.eclipse.jface.text.TextViewerHoverManager$1.run(TextViewerHoverManager.java:155)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2025-06-10 23:50:07.029
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2038)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2243)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3278)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3055)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getHoveredASTNode(JavadocHover.java:1003)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getInfoText(JavadocHover.java:799)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getHoverInfo(JavadocHover.java:743)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.internalGetHoverInfo(JavadocHover.java:666)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getHoverInfo2(JavadocHover.java:658)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:163)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:130)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:89)
	at org.eclipse.jface.text.TextViewerHoverManager$1.run(TextViewerHoverManager.java:155)

!ENTRY org.eclipse.jdt.core 4 4 2025-06-10 23:50:12.513
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package com.example.EMSbackend.Service;

import java.util.ArrayList;
import java.util.List;
import java.util.Optional;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import com.example.EMSbackend.DTO.EMSGetAllDTO;
import com.example.EMSbackend.DTO.EMSInsertMultipleRequestDTO;
import com.example.EMSbackend.DTO.EMSInsertMultipleResponseDTO;
import com.example.EMSbackend.DTO.EMSInsertSingleRequestDTO;
import com.example.EMSbackend.DTO.EMSInsertSingleResponseDTO;
import com.example.EMSbackend.DTO.EMSUpdateRequestDTO;
import com.example.EMSbackend.DTO.EMSUpdateResponseDTO;
import com.example.EMSbackend.Model.EMSModel;
import com.example.EMSbackend.Repository.EMSRepository;

import lombok.extern.slf4j.Slf4j;

@Slf4j
@Service
public class EMSService {

	@Autowired
	private EMSRepository emsRepository;
	
	
//GET_ALL_EMPLOYEE_DETAILS
    public EMSGetAllDTO getEmployeeDetailsAll() {
    	EMSGetAllDTO response = new EMSGetAllDTO();
    
    	
    	//try { 	
    	List<EMSModel> modelDetails = (List<EMSModel>) emsRepository.findAll();
    	response.setEmployeeDetailsAll(modelDetails);
    	
    	/*if(modelDetails!=null) {
    		response.setEmployeeDetailsAll(modelDetails);
    	}
    	else {
    		System.out.println("Employee not found");
    		//log.info("Service response not found");
    	}
    	
    	}catch (Exception e) {
            System.out.println("Error while fetching employee list: " + e.getMessage());
            e.printStackTrace();
        }*/
    	    
    	return response;
    }
    
//INSERT_ALL_EMPLOYEE_DETAILS(SINGLE_DATA/NOT_LIST)
    public EMSInsertSingleResponseDTO insertEmployeeDetails(EMSInsertSingleRequestDTO requestData) {
    	EMSInsertSingleResponseDTO response = new EMSInsertSingleResponseDTO();
    	String message = "FAILURE";
    	List<EMSModel> entityList = new ArrayList<>();
  
    	try {
    	if (requestData != null) {
    		EMSModel entity = new EMSModel();
    		entity.setId(requestData.getId());
			entity.setRid(requestData.getRid());
			entity.setName(requestData.getName());
			entity.setParentName(requestData.getParentName());
			entity.setStreamName(requestData.getStreamName());
			entity.setDOB(requestData.getDOB());
			entity.setPOY(requestData.getPOY());
			entity.setMobileNumber(requestData.getMobileNumber());
			entity.setMailID(requestData.getMailID());
			entity.setAddress(requestData.getAddress());
			entity.setStatus(requestData.getStatus());
			 
			c
   
			List<EMSModel> savedEntities = emsRepository.saveAll(entityList);
			if (savedEntities != null && !savedEntities.isEmpty()) {
	            message = "SUCCESS";
	            response.setMessage(message);
	            response.setCode("200 OK");
	        } else {
	            response.setMessage("Insert failed");
	            response.setCode("500 INTERNAL SERVER ERROR");
	        }
    	}else {
            response.setMessage("Input list is null or empty");
            response.setCode("400 BAD REQUEST");
        }
    	}catch (Exception e) {
    		e.printStackTrace();
    		response.setMessage("Exception occurred");
            response.setCode("500 INTERNAL SERVER ERROR");
    	}
  
    	return response;
    	
    }
    
    
   
//INSERT_ALL_EMPLOYEE_DETAILS(MULTIPLE/LIST)
    
    public EMSInsertMultipleResponseDTO insertEmployeeDetailsAll(EMSInsertMultipleRequestDTO insertData) {
    	EMSInsertMultipleResponseDTO response = new EMSInsertMultipleResponseDTO();
    	String message = "FAILURE";
    	
    	try {
    		List<EMSModel> dtoList = insertData.getEmployeeDetailsRequestAll();
 
    		if (dtoList != null && !dtoList.isEmpty()) {
    			
    			List<EMSModel> entityList = new ArrayList<>();
    			
    			for (EMSModel dto : dtoList){
    				
    			EMSModel entity = new EMSModel();
    			 entity.setId(dto.getId());
    			 entity.setRid(dto.getRid());
    			 entity.setName(dto.getName());
    			 entity.setParentName(dto.getParentName());
    			 entity.setStreamName(dto.getStreamName());
    			 entity.setDOB(dto.getDOB());
    			 entity.setPOY(dto.getPOY());
    			 entity.setMobileNumber(dto.getMobileNumber());
    			 entity.setMailID(dto.getMailID());
    			 entity.setAddress(dto.getAddress());
    			 entity.setStatus(dto.getStatus());
    			 
    			 entityList.add(entity);
    			}
    			
    			List<EMSModel> savedEntities = emsRepository.saveAll(entityList);
                

                if (savedEntities != null && !savedEntities.isEmpty()) {
                    message = "SUCCESS";
                    response.setMessage(message);
                    response.setCode("200 OK");
                } else {
                    response.setMessage("Insert failed");
                    response.setCode("500 INTERNAL SERVER ERROR");
                }
    			
    		}else {
    			response.setMessage("Input list is null or empty");
                response.setCode("400 BAD REQUEST");
    		}
    	}catch (Exception e) {
    		e.printStackTrace();
    		response.setMessage("Exception occurred");
            response.setCode("500 INTERNAL SERVER ERROR");
    	}
    	return response;
    }
    
//UPDATE
    public EMSUpdateResponseDTO updateEmployeeDetails(EMSUpdateRequestDTO insertData) {
    	EMSUpdateResponseDTO response =new EMSUpdateResponseDTO();
    	List<EMSModel> saveEntities =  new ArrayList<>();
    	try {
    		Optional<EMSModel> dbResponse = emsRepository.findById(insertData.getId());
    		if(dbResponse.isPresent()) {
    			EMSModel entity = new EMSModel();
    			
    			if(insertData.getId()!=null && insertData.getRid()!=null) {
    			
    				entity.setId(dbResponse.get().getId());
    				entity.setRid(insertData.getRid());
    				entity.setName(dbResponse.get().getName());
    				entity.setParentName(dbResponse.get().getParentName());
    				entity.setStreamName(dbResponse.get().getStreamName());
    				entity.setDOB(dbResponse.get().getDOB());
    				entity.setPOY(dbResponse.get().getPOY());
    				entity.setMobileNumber(dbResponse.get().getMobileNumber());
    				entity.setMailID(dbResponse.get().getMailID());
    				entity.setAddress(dbResponse.get().getAddress());
    				entity.setStatus(dbResponse.get().getStatus());
    				
    				saveEntities.add(entity);
    				
    				
    			}else if(insertData.getId()!=null && insertData.getName()!=null) {
    				entity.setId(dbResponse.get().getId());
    				entity.setRid(dbResponse.get().getRid());
    				entity.setName(insertData.getName());
    				entity.setParentName(dbResponse.get().getParentName());
    				entity.setStreamName(dbResponse.get().getStreamName());
    				entity.setDOB(dbResponse.get().getDOB());
    				entity.setPOY(dbResponse.get().getPOY());
    				entity.setMobileNumber(dbResponse.get().getMobileNumber());
    				entity.setMailID(dbResponse.get().getMailID());
    				entity.setAddress(dbResponse.get().getAddress());
    				entity.setStatus(dbResponse.get().getStatus());
    				
    				saveEntities.add(entity);
    			}else if(insertData.getId()!=null && insertData.getParentName()!=null) {
    				entity.setId(dbResponse.get().getId());
    				entity.setRid(dbResponse.get().getRid());
    				entity.setName(dbResponse.get().getName());
    				entity.setParentName(insertData.getParentName());
    				entity.setStreamName(dbResponse.get().getStreamName());
    				entity.setDOB(dbResponse.get().getDOB());
    				entity.setPOY(dbResponse.get().getPOY());
    				entity.setMobileNumber(dbResponse.get().getMobileNumber());
    				entity.setMailID(dbResponse.get().getMailID());
    				entity.setAddress(dbResponse.get().getAddress());
    				entity.setStatus(dbResponse.get().getStatus());
    				
    				saveEntities.add(entity);
    			}else if(insertData.getId()!=null && insertData.getStreamName()!=null) {
    				entity.setId(dbResponse.get().getId());
    				entity.setRid(dbResponse.get().getRid());
    				entity.setName(dbResponse.get().getName());
    				entity.setParentName(insertData.getParentName());
    				entity.setStreamName(dbResponse.get().getStreamName());
    				entity.setDOB(dbResponse.get().getDOB());
    				entity.setPOY(dbResponse.get().getPOY());
    				entity.setMobileNumber(dbResponse.get().getMobileNumber());
    				entity.setMailID(dbResponse.get().getMailID());
    				entity.setAddress(dbResponse.get().getAddress());
    				entity.setStatus(dbResponse.get().getStatus());
    				
    				saveEntities.add(entity);
    			}else if(insertData.getId()!=null && insertData.getDOB()!=null) {
    				
    			}else if(insertData.getId()!=null && insertData.getPOY()!=null) {
    				
    			}else if(insertData.getId()!=null && insertData.getMobileNumber()!=null) {
    				
    			}else if(insertData.getId()!=null && insertData.getMailID()!=null) {
    				
    			}else if(insertData.getId()!=null && insertData.getAddress()!=null) {
    				
    			}else (insertData.getId()!=null && insertData.getStatus()!=null) {
    				
    			}
    			
    		}
    	}catch() {
    		
    	}
    }
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2038)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2243)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3278)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3055)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getHoveredASTNode(JavadocHover.java:1003)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getInfoText(JavadocHover.java:799)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getHoverInfo(JavadocHover.java:743)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.internalGetHoverInfo(JavadocHover.java:666)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getHoverInfo2(JavadocHover.java:658)
	at org.eclipse.lsp4e.jdt.LSJavaHoverProvider.lambda$0(LSJavaHoverProvider.java:68)
	at java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1804)
	at java.base/java.util.concurrent.CompletableFuture$AsyncRun.exec(CompletableFuture.java:1796)
	at java.base/java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:373)
	at java.base/java.util.concurrent.ForkJoinPool$WorkQueue.topLevelExec(ForkJoinPool.java:1182)
	at java.base/java.util.concurrent.ForkJoinPool.scan(ForkJoinPool.java:1655)
	at java.base/java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1622)
	at java.base/java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:165)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2025-06-10 23:50:12.516
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2038)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2243)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3278)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3055)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getHoveredASTNode(JavadocHover.java:1003)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getInfoText(JavadocHover.java:799)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getHoverInfo(JavadocHover.java:743)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.internalGetHoverInfo(JavadocHover.java:666)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getHoverInfo2(JavadocHover.java:658)
	at org.eclipse.lsp4e.jdt.LSJavaHoverProvider.lambda$0(LSJavaHoverProvider.java:68)
	at java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1804)
	at java.base/java.util.concurrent.CompletableFuture$AsyncRun.exec(CompletableFuture.java:1796)
	at java.base/java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:373)
	at java.base/java.util.concurrent.ForkJoinPool$WorkQueue.topLevelExec(ForkJoinPool.java:1182)
	at java.base/java.util.concurrent.ForkJoinPool.scan(ForkJoinPool.java:1655)
	at java.base/java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1622)
	at java.base/java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:165)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2025-06-10 23:50:12.518
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2038)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2243)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3278)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3055)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getHoveredASTNode(JavadocHover.java:1003)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getInfoText(JavadocHover.java:799)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getHoverInfo(JavadocHover.java:743)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.internalGetHoverInfo(JavadocHover.java:666)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getHoverInfo2(JavadocHover.java:658)
	at org.eclipse.lsp4e.jdt.LSJavaHoverProvider.lambda$0(LSJavaHoverProvider.java:68)
	at java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1804)
	at java.base/java.util.concurrent.CompletableFuture$AsyncRun.exec(CompletableFuture.java:1796)
	at java.base/java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:373)
	at java.base/java.util.concurrent.ForkJoinPool$WorkQueue.topLevelExec(ForkJoinPool.java:1182)
	at java.base/java.util.concurrent.ForkJoinPool.scan(ForkJoinPool.java:1655)
	at java.base/java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1622)
	at java.base/java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:165)

!ENTRY org.eclipse.jdt.core 4 4 2025-06-10 23:50:12.540
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package com.example.EMSbackend.Service;

import java.util.ArrayList;
import java.util.List;
import java.util.Optional;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import com.example.EMSbackend.DTO.EMSGetAllDTO;
import com.example.EMSbackend.DTO.EMSInsertMultipleRequestDTO;
import com.example.EMSbackend.DTO.EMSInsertMultipleResponseDTO;
import com.example.EMSbackend.DTO.EMSInsertSingleRequestDTO;
import com.example.EMSbackend.DTO.EMSInsertSingleResponseDTO;
import com.example.EMSbackend.DTO.EMSUpdateRequestDTO;
import com.example.EMSbackend.DTO.EMSUpdateResponseDTO;
import com.example.EMSbackend.Model.EMSModel;
import com.example.EMSbackend.Repository.EMSRepository;

import lombok.extern.slf4j.Slf4j;

@Slf4j
@Service
public class EMSService {

	@Autowired
	private EMSRepository emsRepository;
	
	
//GET_ALL_EMPLOYEE_DETAILS
    public EMSGetAllDTO getEmployeeDetailsAll() {
    	EMSGetAllDTO response = new EMSGetAllDTO();
    
    	
    	//try { 	
    	List<EMSModel> modelDetails = (List<EMSModel>) emsRepository.findAll();
    	response.setEmployeeDetailsAll(modelDetails);
    	
    	/*if(modelDetails!=null) {
    		response.setEmployeeDetailsAll(modelDetails);
    	}
    	else {
    		System.out.println("Employee not found");
    		//log.info("Service response not found");
    	}
    	
    	}catch (Exception e) {
            System.out.println("Error while fetching employee list: " + e.getMessage());
            e.printStackTrace();
        }*/
    	    
    	return response;
    }
    
//INSERT_ALL_EMPLOYEE_DETAILS(SINGLE_DATA/NOT_LIST)
    public EMSInsertSingleResponseDTO insertEmployeeDetails(EMSInsertSingleRequestDTO requestData) {
    	EMSInsertSingleResponseDTO response = new EMSInsertSingleResponseDTO();
    	String message = "FAILURE";
    	List<EMSModel> entityList = new ArrayList<>();
  
    	try {
    	if (requestData != null) {
    		EMSModel entity = new EMSModel();
    		entity.setId(requestData.getId());
			entity.setRid(requestData.getRid());
			entity.setName(requestData.getName());
			entity.setParentName(requestData.getParentName());
			entity.setStreamName(requestData.getStreamName());
			entity.setDOB(requestData.getDOB());
			entity.setPOY(requestData.getPOY());
			entity.setMobileNumber(requestData.getMobileNumber());
			entity.setMailID(requestData.getMailID());
			entity.setAddress(requestData.getAddress());
			entity.setStatus(requestData.getStatus());
			 
			c
   
			List<EMSModel> savedEntities = emsRepository.saveAll(entityList);
			if (savedEntities != null && !savedEntities.isEmpty()) {
	            message = "SUCCESS";
	            response.setMessage(message);
	            response.setCode("200 OK");
	        } else {
	            response.setMessage("Insert failed");
	            response.setCode("500 INTERNAL SERVER ERROR");
	        }
    	}else {
            response.setMessage("Input list is null or empty");
            response.setCode("400 BAD REQUEST");
        }
    	}catch (Exception e) {
    		e.printStackTrace();
    		response.setMessage("Exception occurred");
            response.setCode("500 INTERNAL SERVER ERROR");
    	}
  
    	return response;
    	
    }
    
    
   
//INSERT_ALL_EMPLOYEE_DETAILS(MULTIPLE/LIST)
    
    public EMSInsertMultipleResponseDTO insertEmployeeDetailsAll(EMSInsertMultipleRequestDTO insertData) {
    	EMSInsertMultipleResponseDTO response = new EMSInsertMultipleResponseDTO();
    	String message = "FAILURE";
    	
    	try {
    		List<EMSModel> dtoList = insertData.getEmployeeDetailsRequestAll();
 
    		if (dtoList != null && !dtoList.isEmpty()) {
    			
    			List<EMSModel> entityList = new ArrayList<>();
    			
    			for (EMSModel dto : dtoList){
    				
    			EMSModel entity = new EMSModel();
    			 entity.setId(dto.getId());
    			 entity.setRid(dto.getRid());
    			 entity.setName(dto.getName());
    			 entity.setParentName(dto.getParentName());
    			 entity.setStreamName(dto.getStreamName());
    			 entity.setDOB(dto.getDOB());
    			 entity.setPOY(dto.getPOY());
    			 entity.setMobileNumber(dto.getMobileNumber());
    			 entity.setMailID(dto.getMailID());
    			 entity.setAddress(dto.getAddress());
    			 entity.setStatus(dto.getStatus());
    			 
    			 entityList.add(entity);
    			}
    			
    			List<EMSModel> savedEntities = emsRepository.saveAll(entityList);
                

                if (savedEntities != null && !savedEntities.isEmpty()) {
                    message = "SUCCESS";
                    response.setMessage(message);
                    response.setCode("200 OK");
                } else {
                    response.setMessage("Insert failed");
                    response.setCode("500 INTERNAL SERVER ERROR");
                }
    			
    		}else {
    			response.setMessage("Input list is null or empty");
                response.setCode("400 BAD REQUEST");
    		}
    	}catch (Exception e) {
    		e.printStackTrace();
    		response.setMessage("Exception occurred");
            response.setCode("500 INTERNAL SERVER ERROR");
    	}
    	return response;
    }
    
//UPDATE
    public EMSUpdateResponseDTO updateEmployeeDetails(EMSUpdateRequestDTO insertData) {
    	EMSUpdateResponseDTO response =new EMSUpdateResponseDTO();
    	List<EMSModel> saveEntities =  new ArrayList<>();
    	try {
    		Optional<EMSModel> dbResponse = emsRepository.findById(insertData.getId());
    		if(dbResponse.isPresent()) {
    			EMSModel entity = new EMSModel();
    			
    			if(insertData.getId()!=null && insertData.getRid()!=null) {
    			
    				entity.setId(dbResponse.get().getId());
    				entity.setRid(insertData.getRid());
    				entity.setName(dbResponse.get().getName());
    				entity.setParentName(dbResponse.get().getParentName());
    				entity.setStreamName(dbResponse.get().getStreamName());
    				entity.setDOB(dbResponse.get().getDOB());
    				entity.setPOY(dbResponse.get().getPOY());
    				entity.setMobileNumber(dbResponse.get().getMobileNumber());
    				entity.setMailID(dbResponse.get().getMailID());
    				entity.setAddress(dbResponse.get().getAddress());
    				entity.setStatus(dbResponse.get().getStatus());
    				
    				saveEntities.add(entity);
    				
    				
    			}else if(insertData.getId()!=null && insertData.getName()!=null) {
    				entity.setId(dbResponse.get().getId());
    				entity.setRid(dbResponse.get().getRid());
    				entity.setName(insertData.getName());
    				entity.setParentName(dbResponse.get().getParentName());
    				entity.setStreamName(dbResponse.get().getStreamName());
    				entity.setDOB(dbResponse.get().getDOB());
    				entity.setPOY(dbResponse.get().getPOY());
    				entity.setMobileNumber(dbResponse.get().getMobileNumber());
    				entity.setMailID(dbResponse.get().getMailID());
    				entity.setAddress(dbResponse.get().getAddress());
    				entity.setStatus(dbResponse.get().getStatus());
    				
    				saveEntities.add(entity);
    			}else if(insertData.getId()!=null && insertData.getParentName()!=null) {
    				entity.setId(dbResponse.get().getId());
    				entity.setRid(dbResponse.get().getRid());
    				entity.setName(dbResponse.get().getName());
    				entity.setParentName(insertData.getParentName());
    				entity.setStreamName(dbResponse.get().getStreamName());
    				entity.setDOB(dbResponse.get().getDOB());
    				entity.setPOY(dbResponse.get().getPOY());
    				entity.setMobileNumber(dbResponse.get().getMobileNumber());
    				entity.setMailID(dbResponse.get().getMailID());
    				entity.setAddress(dbResponse.get().getAddress());
    				entity.setStatus(dbResponse.get().getStatus());
    				
    				saveEntities.add(entity);
    			}else if(insertData.getId()!=null && insertData.getStreamName()!=null) {
    				entity.setId(dbResponse.get().getId());
    				entity.setRid(dbResponse.get().getRid());
    				entity.setName(dbResponse.get().getName());
    				entity.setParentName(insertData.getParentName());
    				entity.setStreamName(dbResponse.get().getStreamName());
    				entity.setDOB(dbResponse.get().getDOB());
    				entity.setPOY(dbResponse.get().getPOY());
    				entity.setMobileNumber(dbResponse.get().getMobileNumber());
    				entity.setMailID(dbResponse.get().getMailID());
    				entity.setAddress(dbResponse.get().getAddress());
    				entity.setStatus(dbResponse.get().getStatus());
    				
    				saveEntities.add(entity);
    			}else if(insertData.getId()!=null && insertData.getDOB()!=null) {
    				
    			}else if(insertData.getId()!=null && insertData.getPOY()!=null) {
    				
    			}else if(insertData.getId()!=null && insertData.getMobileNumber()!=null) {
    				
    			}else if(insertData.getId()!=null && insertData.getMailID()!=null) {
    				
    			}else if(insertData.getId()!=null && insertData.getAddress()!=null) {
    				
    			}else (insertData.getId()!=null && insertData.getStatus()!=null) {
    				
    			}
    			
    		}
    	}catch() {
    		
    	}
    }
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2038)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2243)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3278)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3055)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.internalGetHoverInfo(NLSStringHover.java:141)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.getHoverInfo2(NLSStringHover.java:120)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:163)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:130)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:89)
	at org.eclipse.jface.text.TextViewerHoverManager$1.run(TextViewerHoverManager.java:155)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2025-06-10 23:50:12.543
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2038)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2243)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3278)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3055)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.internalGetHoverInfo(NLSStringHover.java:141)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.getHoverInfo2(NLSStringHover.java:120)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:163)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:130)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:89)
	at org.eclipse.jface.text.TextViewerHoverManager$1.run(TextViewerHoverManager.java:155)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2025-06-10 23:50:12.545
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2038)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2243)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3278)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3055)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.internalGetHoverInfo(NLSStringHover.java:141)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.getHoverInfo2(NLSStringHover.java:120)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:163)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:130)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:89)
	at org.eclipse.jface.text.TextViewerHoverManager$1.run(TextViewerHoverManager.java:155)

!ENTRY org.eclipse.jdt.core 4 4 2025-06-10 23:50:12.603
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package com.example.EMSbackend.Service;

import java.util.ArrayList;
import java.util.List;
import java.util.Optional;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import com.example.EMSbackend.DTO.EMSGetAllDTO;
import com.example.EMSbackend.DTO.EMSInsertMultipleRequestDTO;
import com.example.EMSbackend.DTO.EMSInsertMultipleResponseDTO;
import com.example.EMSbackend.DTO.EMSInsertSingleRequestDTO;
import com.example.EMSbackend.DTO.EMSInsertSingleResponseDTO;
import com.example.EMSbackend.DTO.EMSUpdateRequestDTO;
import com.example.EMSbackend.DTO.EMSUpdateResponseDTO;
import com.example.EMSbackend.Model.EMSModel;
import com.example.EMSbackend.Repository.EMSRepository;

import lombok.extern.slf4j.Slf4j;

@Slf4j
@Service
public class EMSService {

	@Autowired
	private EMSRepository emsRepository;
	
	
//GET_ALL_EMPLOYEE_DETAILS
    public EMSGetAllDTO getEmployeeDetailsAll() {
    	EMSGetAllDTO response = new EMSGetAllDTO();
    
    	
    	//try { 	
    	List<EMSModel> modelDetails = (List<EMSModel>) emsRepository.findAll();
    	response.setEmployeeDetailsAll(modelDetails);
    	
    	/*if(modelDetails!=null) {
    		response.setEmployeeDetailsAll(modelDetails);
    	}
    	else {
    		System.out.println("Employee not found");
    		//log.info("Service response not found");
    	}
    	
    	}catch (Exception e) {
            System.out.println("Error while fetching employee list: " + e.getMessage());
            e.printStackTrace();
        }*/
    	    
    	return response;
    }
    
//INSERT_ALL_EMPLOYEE_DETAILS(SINGLE_DATA/NOT_LIST)
    public EMSInsertSingleResponseDTO insertEmployeeDetails(EMSInsertSingleRequestDTO requestData) {
    	EMSInsertSingleResponseDTO response = new EMSInsertSingleResponseDTO();
    	String message = "FAILURE";
    	List<EMSModel> entityList = new ArrayList<>();
  
    	try {
    	if (requestData != null) {
    		EMSModel entity = new EMSModel();
    		entity.setId(requestData.getId());
			entity.setRid(requestData.getRid());
			entity.setName(requestData.getName());
			entity.setParentName(requestData.getParentName());
			entity.setStreamName(requestData.getStreamName());
			entity.setDOB(requestData.getDOB());
			entity.setPOY(requestData.getPOY());
			entity.setMobileNumber(requestData.getMobileNumber());
			entity.setMailID(requestData.getMailID());
			entity.setAddress(requestData.getAddress());
			entity.setStatus(requestData.getStatus());
			 
			c
   
			List<EMSModel> savedEntities = emsRepository.saveAll(entityList);
			if (savedEntities != null && !savedEntities.isEmpty()) {
	            message = "SUCCESS";
	            response.setMessage(message);
	            response.setCode("200 OK");
	        } else {
	            response.setMessage("Insert failed");
	            response.setCode("500 INTERNAL SERVER ERROR");
	        }
    	}else {
            response.setMessage("Input list is null or empty");
            response.setCode("400 BAD REQUEST");
        }
    	}catch (Exception e) {
    		e.printStackTrace();
    		response.setMessage("Exception occurred");
            response.setCode("500 INTERNAL SERVER ERROR");
    	}
  
    	return response;
    	
    }
    
    
   
//INSERT_ALL_EMPLOYEE_DETAILS(MULTIPLE/LIST)
    
    public EMSInsertMultipleResponseDTO insertEmployeeDetailsAll(EMSInsertMultipleRequestDTO insertData) {
    	EMSInsertMultipleResponseDTO response = new EMSInsertMultipleResponseDTO();
    	String message = "FAILURE";
    	
    	try {
    		List<EMSModel> dtoList = insertData.getEmployeeDetailsRequestAll();
 
    		if (dtoList != null && !dtoList.isEmpty()) {
    			
    			List<EMSModel> entityList = new ArrayList<>();
    			
    			for (EMSModel dto : dtoList){
    				
    			EMSModel entity = new EMSModel();
    			 entity.setId(dto.getId());
    			 entity.setRid(dto.getRid());
    			 entity.setName(dto.getName());
    			 entity.setParentName(dto.getParentName());
    			 entity.setStreamName(dto.getStreamName());
    			 entity.setDOB(dto.getDOB());
    			 entity.setPOY(dto.getPOY());
    			 entity.setMobileNumber(dto.getMobileNumber());
    			 entity.setMailID(dto.getMailID());
    			 entity.setAddress(dto.getAddress());
    			 entity.setStatus(dto.getStatus());
    			 
    			 entityList.add(entity);
    			}
    			
    			List<EMSModel> savedEntities = emsRepository.saveAll(entityList);
                

                if (savedEntities != null && !savedEntities.isEmpty()) {
                    message = "SUCCESS";
                    response.setMessage(message);
                    response.setCode("200 OK");
                } else {
                    response.setMessage("Insert failed");
                    response.setCode("500 INTERNAL SERVER ERROR");
                }
    			
    		}else {
    			response.setMessage("Input list is null or empty");
                response.setCode("400 BAD REQUEST");
    		}
    	}catch (Exception e) {
    		e.printStackTrace();
    		response.setMessage("Exception occurred");
            response.setCode("500 INTERNAL SERVER ERROR");
    	}
    	return response;
    }
    
//UPDATE
    public EMSUpdateResponseDTO updateEmployeeDetails(EMSUpdateRequestDTO insertData) {
    	EMSUpdateResponseDTO response =new EMSUpdateResponseDTO();
    	List<EMSModel> saveEntities =  new ArrayList<>();
    	try {
    		Optional<EMSModel> dbResponse = emsRepository.findById(insertData.getId());
    		if(dbResponse.isPresent()) {
    			EMSModel entity = new EMSModel();
    			
    			if(insertData.getId()!=null && insertData.getRid()!=null) {
    			
    				entity.setId(dbResponse.get().getId());
    				entity.setRid(insertData.getRid());
    				entity.setName(dbResponse.get().getName());
    				entity.setParentName(dbResponse.get().getParentName());
    				entity.setStreamName(dbResponse.get().getStreamName());
    				entity.setDOB(dbResponse.get().getDOB());
    				entity.setPOY(dbResponse.get().getPOY());
    				entity.setMobileNumber(dbResponse.get().getMobileNumber());
    				entity.setMailID(dbResponse.get().getMailID());
    				entity.setAddress(dbResponse.get().getAddress());
    				entity.setStatus(dbResponse.get().getStatus());
    				
    				saveEntities.add(entity);
    				
    				
    			}else if(insertData.getId()!=null && insertData.getName()!=null) {
    				entity.setId(dbResponse.get().getId());
    				entity.setRid(dbResponse.get().getRid());
    				entity.setName(insertData.getName());
    				entity.setParentName(dbResponse.get().getParentName());
    				entity.setStreamName(dbResponse.get().getStreamName());
    				entity.setDOB(dbResponse.get().getDOB());
    				entity.setPOY(dbResponse.get().getPOY());
    				entity.setMobileNumber(dbResponse.get().getMobileNumber());
    				entity.setMailID(dbResponse.get().getMailID());
    				entity.setAddress(dbResponse.get().getAddress());
    				entity.setStatus(dbResponse.get().getStatus());
    				
    				saveEntities.add(entity);
    			}else if(insertData.getId()!=null && insertData.getParentName()!=null) {
    				entity.setId(dbResponse.get().getId());
    				entity.setRid(dbResponse.get().getRid());
    				entity.setName(dbResponse.get().getName());
    				entity.setParentName(insertData.getParentName());
    				entity.setStreamName(dbResponse.get().getStreamName());
    				entity.setDOB(dbResponse.get().getDOB());
    				entity.setPOY(dbResponse.get().getPOY());
    				entity.setMobileNumber(dbResponse.get().getMobileNumber());
    				entity.setMailID(dbResponse.get().getMailID());
    				entity.setAddress(dbResponse.get().getAddress());
    				entity.setStatus(dbResponse.get().getStatus());
    				
    				saveEntities.add(entity);
    			}else if(insertData.getId()!=null && insertData.getStreamName()!=null) {
    				entity.setId(dbResponse.get().getId());
    				entity.setRid(dbResponse.get().getRid());
    				entity.setName(dbResponse.get().getName());
    				entity.setParentName(insertData.getParentName());
    				entity.setStreamName(dbResponse.get().getStreamName());
    				entity.setDOB(dbResponse.get().getDOB());
    				entity.setPOY(dbResponse.get().getPOY());
    				entity.setMobileNumber(dbResponse.get().getMobileNumber());
    				entity.setMailID(dbResponse.get().getMailID());
    				entity.setAddress(dbResponse.get().getAddress());
    				entity.setStatus(dbResponse.get().getStatus());
    				
    				saveEntities.add(entity);
    			}else if(insertData.getId()!=null && insertData.getDOB()!=null) {
    				
    			}else if(insertData.getId()!=null && insertData.getPOY()!=null) {
    				
    			}else if(insertData.getId()!=null && insertData.getMobileNumber()!=null) {
    				
    			}else if(insertData.getId()!=null && insertData.getMailID()!=null) {
    				
    			}else if(insertData.getId()!=null && insertData.getAddress()!=null) {
    				
    			}else (insertData.getId()!=null && insertData.getStatus()!=null) {
    				
    			}
    			
    		}
    	}catch() {
    		
    	}
    }
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2038)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2243)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3278)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3055)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getHoveredASTNode(JavadocHover.java:1003)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getInfoText(JavadocHover.java:799)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getHoverInfo(JavadocHover.java:743)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.internalGetHoverInfo(JavadocHover.java:666)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getHoverInfo2(JavadocHover.java:658)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:163)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:130)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:89)
	at org.eclipse.jface.text.TextViewerHoverManager$1.run(TextViewerHoverManager.java:155)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2025-06-10 23:50:12.606
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2038)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2243)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3278)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3055)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getHoveredASTNode(JavadocHover.java:1003)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getInfoText(JavadocHover.java:799)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getHoverInfo(JavadocHover.java:743)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.internalGetHoverInfo(JavadocHover.java:666)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getHoverInfo2(JavadocHover.java:658)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:163)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:130)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:89)
	at org.eclipse.jface.text.TextViewerHoverManager$1.run(TextViewerHoverManager.java:155)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2025-06-10 23:50:12.608
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2038)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2243)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3278)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3055)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getHoveredASTNode(JavadocHover.java:1003)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getInfoText(JavadocHover.java:799)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getHoverInfo(JavadocHover.java:743)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.internalGetHoverInfo(JavadocHover.java:666)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getHoverInfo2(JavadocHover.java:658)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:163)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:130)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:89)
	at org.eclipse.jface.text.TextViewerHoverManager$1.run(TextViewerHoverManager.java:155)

!ENTRY org.eclipse.jdt.core 4 4 2025-06-10 23:50:14.052
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package com.example.EMSbackend.Service;

import java.util.ArrayList;
import java.util.List;
import java.util.Optional;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import com.example.EMSbackend.DTO.EMSGetAllDTO;
import com.example.EMSbackend.DTO.EMSInsertMultipleRequestDTO;
import com.example.EMSbackend.DTO.EMSInsertMultipleResponseDTO;
import com.example.EMSbackend.DTO.EMSInsertSingleRequestDTO;
import com.example.EMSbackend.DTO.EMSInsertSingleResponseDTO;
import com.example.EMSbackend.DTO.EMSUpdateRequestDTO;
import com.example.EMSbackend.DTO.EMSUpdateResponseDTO;
import com.example.EMSbackend.Model.EMSModel;
import com.example.EMSbackend.Repository.EMSRepository;

import lombok.extern.slf4j.Slf4j;

@Slf4j
@Service
public class EMSService {

	@Autowired
	private EMSRepository emsRepository;
	
	
//GET_ALL_EMPLOYEE_DETAILS
    public EMSGetAllDTO getEmployeeDetailsAll() {
    	EMSGetAllDTO response = new EMSGetAllDTO();
    
    	
    	//try { 	
    	List<EMSModel> modelDetails = (List<EMSModel>) emsRepository.findAll();
    	response.setEmployeeDetailsAll(modelDetails);
    	
    	/*if(modelDetails!=null) {
    		response.setEmployeeDetailsAll(modelDetails);
    	}
    	else {
    		System.out.println("Employee not found");
    		//log.info("Service response not found");
    	}
    	
    	}catch (Exception e) {
            System.out.println("Error while fetching employee list: " + e.getMessage());
            e.printStackTrace();
        }*/
    	    
    	return response;
    }
    
//INSERT_ALL_EMPLOYEE_DETAILS(SINGLE_DATA/NOT_LIST)
    public EMSInsertSingleResponseDTO insertEmployeeDetails(EMSInsertSingleRequestDTO requestData) {
    	EMSInsertSingleResponseDTO response = new EMSInsertSingleResponseDTO();
    	String message = "FAILURE";
    	List<EMSModel> entityList = new ArrayList<>();
  
    	try {
    	if (requestData != null) {
    		EMSModel entity = new EMSModel();
    		entity.setId(requestData.getId());
			entity.setRid(requestData.getRid());
			entity.setName(requestData.getName());
			entity.setParentName(requestData.getParentName());
			entity.setStreamName(requestData.getStreamName());
			entity.setDOB(requestData.getDOB());
			entity.setPOY(requestData.getPOY());
			entity.setMobileNumber(requestData.getMobileNumber());
			entity.setMailID(requestData.getMailID());
			entity.setAddress(requestData.getAddress());
			entity.setStatus(requestData.getStatus());
			 
			c
   
			List<EMSModel> savedEntities = emsRepository.saveAll(entityList);
			if (savedEntities != null && !savedEntities.isEmpty()) {
	            message = "SUCCESS";
	            response.setMessage(message);
	            response.setCode("200 OK");
	        } else {
	            response.setMessage("Insert failed");
	            response.setCode("500 INTERNAL SERVER ERROR");
	        }
    	}else {
            response.setMessage("Input list is null or empty");
            response.setCode("400 BAD REQUEST");
        }
    	}catch (Exception e) {
    		e.printStackTrace();
    		response.setMessage("Exception occurred");
            response.setCode("500 INTERNAL SERVER ERROR");
    	}
  
    	return response;
    	
    }
    
    
   
//INSERT_ALL_EMPLOYEE_DETAILS(MULTIPLE/LIST)
    
    public EMSInsertMultipleResponseDTO insertEmployeeDetailsAll(EMSInsertMultipleRequestDTO insertData) {
    	EMSInsertMultipleResponseDTO response = new EMSInsertMultipleResponseDTO();
    	String message = "FAILURE";
    	
    	try {
    		List<EMSModel> dtoList = insertData.getEmployeeDetailsRequestAll();
 
    		if (dtoList != null && !dtoList.isEmpty()) {
    			
    			List<EMSModel> entityList = new ArrayList<>();
    			
    			for (EMSModel dto : dtoList){
    				
    			EMSModel entity = new EMSModel();
    			 entity.setId(dto.getId());
    			 entity.setRid(dto.getRid());
    			 entity.setName(dto.getName());
    			 entity.setParentName(dto.getParentName());
    			 entity.setStreamName(dto.getStreamName());
    			 entity.setDOB(dto.getDOB());
    			 entity.setPOY(dto.getPOY());
    			 entity.setMobileNumber(dto.getMobileNumber());
    			 entity.setMailID(dto.getMailID());
    			 entity.setAddress(dto.getAddress());
    			 entity.setStatus(dto.getStatus());
    			 
    			 entityList.add(entity);
    			}
    			
    			List<EMSModel> savedEntities = emsRepository.saveAll(entityList);
                

                if (savedEntities != null && !savedEntities.isEmpty()) {
                    message = "SUCCESS";
                    response.setMessage(message);
                    response.setCode("200 OK");
                } else {
                    response.setMessage("Insert failed");
                    response.setCode("500 INTERNAL SERVER ERROR");
                }
    			
    		}else {
    			response.setMessage("Input list is null or empty");
                response.setCode("400 BAD REQUEST");
    		}
    	}catch (Exception e) {
    		e.printStackTrace();
    		response.setMessage("Exception occurred");
            response.setCode("500 INTERNAL SERVER ERROR");
    	}
    	return response;
    }
    
//UPDATE
    public EMSUpdateResponseDTO updateEmployeeDetails(EMSUpdateRequestDTO insertData) {
    	EMSUpdateResponseDTO response =new EMSUpdateResponseDTO();
    	List<EMSModel> saveEntities =  new ArrayList<>();
    	try {
    		Optional<EMSModel> dbResponse = emsRepository.findById(insertData.getId());
    		if(dbResponse.isPresent()) {
    			EMSModel entity = new EMSModel();
    			
    			if(insertData.getId()!=null && insertData.getRid()!=null) {
    			
    				entity.setId(dbResponse.get().getId());
    				entity.setRid(insertData.getRid());
    				entity.setName(dbResponse.get().getName());
    				entity.setParentName(dbResponse.get().getParentName());
    				entity.setStreamName(dbResponse.get().getStreamName());
    				entity.setDOB(dbResponse.get().getDOB());
    				entity.setPOY(dbResponse.get().getPOY());
    				entity.setMobileNumber(dbResponse.get().getMobileNumber());
    				entity.setMailID(dbResponse.get().getMailID());
    				entity.setAddress(dbResponse.get().getAddress());
    				entity.setStatus(dbResponse.get().getStatus());
    				
    				saveEntities.add(entity);
    				
    				
    			}else if(insertData.getId()!=null && insertData.getName()!=null) {
    				entity.setId(dbResponse.get().getId());
    				entity.setRid(dbResponse.get().getRid());
    				entity.setName(insertData.getName());
    				entity.setParentName(dbResponse.get().getParentName());
    				entity.setStreamName(dbResponse.get().getStreamName());
    				entity.setDOB(dbResponse.get().getDOB());
    				entity.setPOY(dbResponse.get().getPOY());
    				entity.setMobileNumber(dbResponse.get().getMobileNumber());
    				entity.setMailID(dbResponse.get().getMailID());
    				entity.setAddress(dbResponse.get().getAddress());
    				entity.setStatus(dbResponse.get().getStatus());
    				
    				saveEntities.add(entity);
    			}else if(insertData.getId()!=null && insertData.getParentName()!=null) {
    				entity.setId(dbResponse.get().getId());
    				entity.setRid(dbResponse.get().getRid());
    				entity.setName(dbResponse.get().getName());
    				entity.setParentName(insertData.getParentName());
    				entity.setStreamName(dbResponse.get().getStreamName());
    				entity.setDOB(dbResponse.get().getDOB());
    				entity.setPOY(dbResponse.get().getPOY());
    				entity.setMobileNumber(dbResponse.get().getMobileNumber());
    				entity.setMailID(dbResponse.get().getMailID());
    				entity.setAddress(dbResponse.get().getAddress());
    				entity.setStatus(dbResponse.get().getStatus());
    				
    				saveEntities.add(entity);
    			}else if(insertData.getId()!=null && insertData.getStreamName()!=null) {
    				entity.setId(dbResponse.get().getId());
    				entity.setRid(dbResponse.get().getRid());
    				entity.setName(dbResponse.get().getName());
    				entity.setParentName(insertData.getParentName());
    				entity.setStreamName(dbResponse.get().getStreamName());
    				entity.setDOB(dbResponse.get().getDOB());
    				entity.setPOY(dbResponse.get().getPOY());
    				entity.setMobileNumber(dbResponse.get().getMobileNumber());
    				entity.setMailID(dbResponse.get().getMailID());
    				entity.setAddress(dbResponse.get().getAddress());
    				entity.setStatus(dbResponse.get().getStatus());
    				
    				saveEntities.add(entity);
    			}else if(insertData.getId()!=null && insertData.getDOB()!=null) {
    				
    			}else if(insertData.getId()!=null && insertData.getPOY()!=null) {
    				
    			}else if(insertData.getId()!=null && insertData.getMobileNumber()!=null) {
    				
    			}else if(insertData.getId()!=null && insertData.getMailID()!=null) {
    				
    			}else if(insertData.getId()!=null && insertData.getAddress()!=null) {
    				
    			}else (insertData.getId()!=null && insertData.getStatus()!=null) {
    				
    			}
    			
    		}
    	}catch() {
    		
    	}
    }
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2038)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2243)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3278)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3055)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2025-06-10 23:50:14.057
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2038)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2243)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3278)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3055)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2025-06-10 23:50:14.060
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2038)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2243)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3278)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3055)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core 4 4 2025-06-10 23:50:14.903
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package com.example.EMSbackend.Service;

import java.util.ArrayList;
import java.util.List;
import java.util.Optional;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import com.example.EMSbackend.DTO.EMSGetAllDTO;
import com.example.EMSbackend.DTO.EMSInsertMultipleRequestDTO;
import com.example.EMSbackend.DTO.EMSInsertMultipleResponseDTO;
import com.example.EMSbackend.DTO.EMSInsertSingleRequestDTO;
import com.example.EMSbackend.DTO.EMSInsertSingleResponseDTO;
import com.example.EMSbackend.DTO.EMSUpdateRequestDTO;
import com.example.EMSbackend.DTO.EMSUpdateResponseDTO;
import com.example.EMSbackend.Model.EMSModel;
import com.example.EMSbackend.Repository.EMSRepository;

import lombok.extern.slf4j.Slf4j;

@Slf4j
@Service
public class EMSService {

	@Autowired
	private EMSRepository emsRepository;
	
	
//GET_ALL_EMPLOYEE_DETAILS
    public EMSGetAllDTO getEmployeeDetailsAll() {
    	EMSGetAllDTO response = new EMSGetAllDTO();
    
    	
    	//try { 	
    	List<EMSModel> modelDetails = (List<EMSModel>) emsRepository.findAll();
    	response.setEmployeeDetailsAll(modelDetails);
    	
    	/*if(modelDetails!=null) {
    		response.setEmployeeDetailsAll(modelDetails);
    	}
    	else {
    		System.out.println("Employee not found");
    		//log.info("Service response not found");
    	}
    	
    	}catch (Exception e) {
            System.out.println("Error while fetching employee list: " + e.getMessage());
            e.printStackTrace();
        }*/
    	    
    	return response;
    }
    
//INSERT_ALL_EMPLOYEE_DETAILS(SINGLE_DATA/NOT_LIST)
    public EMSInsertSingleResponseDTO insertEmployeeDetails(EMSInsertSingleRequestDTO requestData) {
    	EMSInsertSingleResponseDTO response = new EMSInsertSingleResponseDTO();
    	String message = "FAILURE";
    	List<EMSModel> entityList = new ArrayList<>();
  
    	try {
    	if (requestData != null) {
    		EMSModel entity = new EMSModel();
    		entity.setId(requestData.getId());
			entity.setRid(requestData.getRid());
			entity.setName(requestData.getName());
			entity.setParentName(requestData.getParentName());
			entity.setStreamName(requestData.getStreamName());
			entity.setDOB(requestData.getDOB());
			entity.setPOY(requestData.getPOY());
			entity.setMobileNumber(requestData.getMobileNumber());
			entity.setMailID(requestData.getMailID());
			entity.setAddress(requestData.getAddress());
			entity.setStatus(requestData.getStatus());
			 
			c
   
			List<EMSModel> savedEntities = emsRepository.saveAll(entityList);
			if (savedEntities != null && !savedEntities.isEmpty()) {
	            message = "SUCCESS";
	            response.setMessage(message);
	            response.setCode("200 OK");
	        } else {
	            response.setMessage("Insert failed");
	            response.setCode("500 INTERNAL SERVER ERROR");
	        }
    	}else {
            response.setMessage("Input list is null or empty");
            response.setCode("400 BAD REQUEST");
        }
    	}catch (Exception e) {
    		e.printStackTrace();
    		response.setMessage("Exception occurred");
            response.setCode("500 INTERNAL SERVER ERROR");
    	}
  
    	return response;
    	
    }
    
    
   
//INSERT_ALL_EMPLOYEE_DETAILS(MULTIPLE/LIST)
    
    public EMSInsertMultipleResponseDTO insertEmployeeDetailsAll(EMSInsertMultipleRequestDTO insertData) {
    	EMSInsertMultipleResponseDTO response = new EMSInsertMultipleResponseDTO();
    	String message = "FAILURE";
    	
    	try {
    		List<EMSModel> dtoList = insertData.getEmployeeDetailsRequestAll();
 
    		if (dtoList != null && !dtoList.isEmpty()) {
    			
    			List<EMSModel> entityList = new ArrayList<>();
    			
    			for (EMSModel dto : dtoList){
    				
    			EMSModel entity = new EMSModel();
    			 entity.setId(dto.getId());
    			 entity.setRid(dto.getRid());
    			 entity.setName(dto.getName());
    			 entity.setParentName(dto.getParentName());
    			 entity.setStreamName(dto.getStreamName());
    			 entity.setDOB(dto.getDOB());
    			 entity.setPOY(dto.getPOY());
    			 entity.setMobileNumber(dto.getMobileNumber());
    			 entity.setMailID(dto.getMailID());
    			 entity.setAddress(dto.getAddress());
    			 entity.setStatus(dto.getStatus());
    			 
    			 entityList.add(entity);
    			}
    			
    			List<EMSModel> savedEntities = emsRepository.saveAll(entityList);
                

                if (savedEntities != null && !savedEntities.isEmpty()) {
                    message = "SUCCESS";
                    response.setMessage(message);
                    response.setCode("200 OK");
                } else {
                    response.setMessage("Insert failed");
                    response.setCode("500 INTERNAL SERVER ERROR");
                }
    			
    		}else {
    			response.setMessage("Input list is null or empty");
                response.setCode("400 BAD REQUEST");
    		}
    	}catch (Exception e) {
    		e.printStackTrace();
    		response.setMessage("Exception occurred");
            response.setCode("500 INTERNAL SERVER ERROR");
    	}
    	return response;
    }
    
//UPDATE
    public EMSUpdateResponseDTO updateEmployeeDetails(EMSUpdateRequestDTO insertData) {
    	EMSUpdateResponseDTO response =new EMSUpdateResponseDTO();
    	List<EMSModel> saveEntities =  new ArrayList<>();
    	try {
    		Optional<EMSModel> dbResponse = emsRepository.findById(insertData.getId());
    		if(dbResponse.isPresent()) {
    			EMSModel entity = new EMSModel();
    			
    			if(insertData.getId()!=null && insertData.getRid()!=null) {
    			
    				entity.setId(dbResponse.get().getId());
    				entity.setRid(insertData.getRid());
    				entity.setName(dbResponse.get().getName());
    				entity.setParentName(dbResponse.get().getParentName());
    				entity.setStreamName(dbResponse.get().getStreamName());
    				entity.setDOB(dbResponse.get().getDOB());
    				entity.setPOY(dbResponse.get().getPOY());
    				entity.setMobileNumber(dbResponse.get().getMobileNumber());
    				entity.setMailID(dbResponse.get().getMailID());
    				entity.setAddress(dbResponse.get().getAddress());
    				entity.setStatus(dbResponse.get().getStatus());
    				
    				saveEntities.add(entity);
    				
    				
    			}else if(insertData.getId()!=null && insertData.getName()!=null) {
    				entity.setId(dbResponse.get().getId());
    				entity.setRid(dbResponse.get().getRid());
    				entity.setName(insertData.getName());
    				entity.setParentName(dbResponse.get().getParentName());
    				entity.setStreamName(dbResponse.get().getStreamName());
    				entity.setDOB(dbResponse.get().getDOB());
    				entity.setPOY(dbResponse.get().getPOY());
    				entity.setMobileNumber(dbResponse.get().getMobileNumber());
    				entity.setMailID(dbResponse.get().getMailID());
    				entity.setAddress(dbResponse.get().getAddress());
    				entity.setStatus(dbResponse.get().getStatus());
    				
    				saveEntities.add(entity);
    			}else if(insertData.getId()!=null && insertData.getParentName()!=null) {
    				entity.setId(dbResponse.get().getId());
    				entity.setRid(dbResponse.get().getRid());
    				entity.setName(dbResponse.get().getName());
    				entity.setParentName(insertData.getParentName());
    				entity.setStreamName(dbResponse.get().getStreamName());
    				entity.setDOB(dbResponse.get().getDOB());
    				entity.setPOY(dbResponse.get().getPOY());
    				entity.setMobileNumber(dbResponse.get().getMobileNumber());
    				entity.setMailID(dbResponse.get().getMailID());
    				entity.setAddress(dbResponse.get().getAddress());
    				entity.setStatus(dbResponse.get().getStatus());
    				
    				saveEntities.add(entity);
    			}else if(insertData.getId()!=null && insertData.getStreamName()!=null) {
    				entity.setId(dbResponse.get().getId());
    				entity.setRid(dbResponse.get().getRid());
    				entity.setName(dbResponse.get().getName());
    				entity.setParentName(insertData.getParentName());
    				entity.setStreamName(dbResponse.get().getStreamName());
    				entity.setDOB(dbResponse.get().getDOB());
    				entity.setPOY(dbResponse.get().getPOY());
    				entity.setMobileNumber(dbResponse.get().getMobileNumber());
    				entity.setMailID(dbResponse.get().getMailID());
    				entity.setAddress(dbResponse.get().getAddress());
    				entity.setStatus(dbResponse.get().getStatus());
    				
    				saveEntities.add(entity);
    			}else if(insertData.getId()!=null && insertData.getDOB()!=null) {
    				
    			}else if(insertData.getId()!=null && insertData.getPOY()!=null) {
    				
    			}else if(insertData.getId()!=null && insertData.getMobileNumber()!=null) {
    				
    			}else if(insertData.getId()!=null && insertData.getMailID()!=null) {
    				
    			}else if(insertData.getId()!=null && insertData.getAddress()!=null) {
    				
    			}else (insertData.getId()!=null && insertData.getStatus()!=null) {
    				
    			}
    			
    		}
    	}catch() {
    		
    	}
    }
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2038)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2243)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3278)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3055)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2025-06-10 23:50:14.907
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2038)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2243)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3278)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3055)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2025-06-10 23:50:14.909
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2038)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2243)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3278)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3055)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core 4 4 2025-06-10 23:50:15.254
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package com.example.EMSbackend.Service;

import java.util.ArrayList;
import java.util.List;
import java.util.Optional;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import com.example.EMSbackend.DTO.EMSGetAllDTO;
import com.example.EMSbackend.DTO.EMSInsertMultipleRequestDTO;
import com.example.EMSbackend.DTO.EMSInsertMultipleResponseDTO;
import com.example.EMSbackend.DTO.EMSInsertSingleRequestDTO;
import com.example.EMSbackend.DTO.EMSInsertSingleResponseDTO;
import com.example.EMSbackend.DTO.EMSUpdateRequestDTO;
import com.example.EMSbackend.DTO.EMSUpdateResponseDTO;
import com.example.EMSbackend.Model.EMSModel;
import com.example.EMSbackend.Repository.EMSRepository;

import lombok.extern.slf4j.Slf4j;

@Slf4j
@Service
public class EMSService {

	@Autowired
	private EMSRepository emsRepository;
	
	
//GET_ALL_EMPLOYEE_DETAILS
    public EMSGetAllDTO getEmployeeDetailsAll() {
    	EMSGetAllDTO response = new EMSGetAllDTO();
    
    	
    	//try { 	
    	List<EMSModel> modelDetails = (List<EMSModel>) emsRepository.findAll();
    	response.setEmployeeDetailsAll(modelDetails);
    	
    	/*if(modelDetails!=null) {
    		response.setEmployeeDetailsAll(modelDetails);
    	}
    	else {
    		System.out.println("Employee not found");
    		//log.info("Service response not found");
    	}
    	
    	}catch (Exception e) {
            System.out.println("Error while fetching employee list: " + e.getMessage());
            e.printStackTrace();
        }*/
    	    
    	return response;
    }
    
//INSERT_ALL_EMPLOYEE_DETAILS(SINGLE_DATA/NOT_LIST)
    public EMSInsertSingleResponseDTO insertEmployeeDetails(EMSInsertSingleRequestDTO requestData) {
    	EMSInsertSingleResponseDTO response = new EMSInsertSingleResponseDTO();
    	String message = "FAILURE";
    	List<EMSModel> entityList = new ArrayList<>();
  
    	try {
    	if (requestData != null) {
    		EMSModel entity = new EMSModel();
    		entity.setId(requestData.getId());
			entity.setRid(requestData.getRid());
			entity.setName(requestData.getName());
			entity.setParentName(requestData.getParentName());
			entity.setStreamName(requestData.getStreamName());
			entity.setDOB(requestData.getDOB());
			entity.setPOY(requestData.getPOY());
			entity.setMobileNumber(requestData.getMobileNumber());
			entity.setMailID(requestData.getMailID());
			entity.setAddress(requestData.getAddress());
			entity.setStatus(requestData.getStatus());
			 
			c
   
			List<EMSModel> savedEntities = emsRepository.saveAll(entityList);
			if (savedEntities != null && !savedEntities.isEmpty()) {
	            message = "SUCCESS";
	            response.setMessage(message);
	            response.setCode("200 OK");
	        } else {
	            response.setMessage("Insert failed");
	            response.setCode("500 INTERNAL SERVER ERROR");
	        }
    	}else {
            response.setMessage("Input list is null or empty");
            response.setCode("400 BAD REQUEST");
        }
    	}catch (Exception e) {
    		e.printStackTrace();
    		response.setMessage("Exception occurred");
            response.setCode("500 INTERNAL SERVER ERROR");
    	}
  
    	return response;
    	
    }
    
    
   
//INSERT_ALL_EMPLOYEE_DETAILS(MULTIPLE/LIST)
    
    public EMSInsertMultipleResponseDTO insertEmployeeDetailsAll(EMSInsertMultipleRequestDTO insertData) {
    	EMSInsertMultipleResponseDTO response = new EMSInsertMultipleResponseDTO();
    	String message = "FAILURE";
    	
    	try {
    		List<EMSModel> dtoList = insertData.getEmployeeDetailsRequestAll();
 
    		if (dtoList != null && !dtoList.isEmpty()) {
    			
    			List<EMSModel> entityList = new ArrayList<>();
    			
    			for (EMSModel dto : dtoList){
    				
    			EMSModel entity = new EMSModel();
    			 entity.setId(dto.getId());
    			 entity.setRid(dto.getRid());
    			 entity.setName(dto.getName());
    			 entity.setParentName(dto.getParentName());
    			 entity.setStreamName(dto.getStreamName());
    			 entity.setDOB(dto.getDOB());
    			 entity.setPOY(dto.getPOY());
    			 entity.setMobileNumber(dto.getMobileNumber());
    			 entity.setMailID(dto.getMailID());
    			 entity.setAddress(dto.getAddress());
    			 entity.setStatus(dto.getStatus());
    			 
    			 entityList.add(entity);
    			}
    			
    			List<EMSModel> savedEntities = emsRepository.saveAll(entityList);
                

                if (savedEntities != null && !savedEntities.isEmpty()) {
                    message = "SUCCESS";
                    response.setMessage(message);
                    response.setCode("200 OK");
                } else {
                    response.setMessage("Insert failed");
                    response.setCode("500 INTERNAL SERVER ERROR");
                }
    			
    		}else {
    			response.setMessage("Input list is null or empty");
                response.setCode("400 BAD REQUEST");
    		}
    	}catch (Exception e) {
    		e.printStackTrace();
    		response.setMessage("Exception occurred");
            response.setCode("500 INTERNAL SERVER ERROR");
    	}
    	return response;
    }
    
//UPDATE
    public EMSUpdateResponseDTO updateEmployeeDetails(EMSUpdateRequestDTO insertData) {
    	EMSUpdateResponseDTO response =new EMSUpdateResponseDTO();
    	List<EMSModel> saveEntities =  new ArrayList<>();
    	try {
    		Optional<EMSModel> dbResponse = emsRepository.findById(insertData.getId());
    		if(dbResponse.isPresent()) {
    			EMSModel entity = new EMSModel();
    			
    			if(insertData.getId()!=null && insertData.getRid()!=null) {
    			
    				entity.setId(dbResponse.get().getId());
    				entity.setRid(insertData.getRid());
    				entity.setName(dbResponse.get().getName());
    				entity.setParentName(dbResponse.get().getParentName());
    				entity.setStreamName(dbResponse.get().getStreamName());
    				entity.setDOB(dbResponse.get().getDOB());
    				entity.setPOY(dbResponse.get().getPOY());
    				entity.setMobileNumber(dbResponse.get().getMobileNumber());
    				entity.setMailID(dbResponse.get().getMailID());
    				entity.setAddress(dbResponse.get().getAddress());
    				entity.setStatus(dbResponse.get().getStatus());
    				
    				saveEntities.add(entity);
    				
    				
    			}else if(insertData.getId()!=null && insertData.getName()!=null) {
    				entity.setId(dbResponse.get().getId());
    				entity.setRid(dbResponse.get().getRid());
    				entity.setName(insertData.getName());
    				entity.setParentName(dbResponse.get().getParentName());
    				entity.setStreamName(dbResponse.get().getStreamName());
    				entity.setDOB(dbResponse.get().getDOB());
    				entity.setPOY(dbResponse.get().getPOY());
    				entity.setMobileNumber(dbResponse.get().getMobileNumber());
    				entity.setMailID(dbResponse.get().getMailID());
    				entity.setAddress(dbResponse.get().getAddress());
    				entity.setStatus(dbResponse.get().getStatus());
    				
    				saveEntities.add(entity);
    			}else if(insertData.getId()!=null && insertData.getParentName()!=null) {
    				entity.setId(dbResponse.get().getId());
    				entity.setRid(dbResponse.get().getRid());
    				entity.setName(dbResponse.get().getName());
    				entity.setParentName(insertData.getParentName());
    				entity.setStreamName(dbResponse.get().getStreamName());
    				entity.setDOB(dbResponse.get().getDOB());
    				entity.setPOY(dbResponse.get().getPOY());
    				entity.setMobileNumber(dbResponse.get().getMobileNumber());
    				entity.setMailID(dbResponse.get().getMailID());
    				entity.setAddress(dbResponse.get().getAddress());
    				entity.setStatus(dbResponse.get().getStatus());
    				
    				saveEntities.add(entity);
    			}else if(insertData.getId()!=null && insertData.getStreamName()!=null) {
    				entity.setId(dbResponse.get().getId());
    				entity.setRid(dbResponse.get().getRid());
    				entity.setName(dbResponse.get().getName());
    				entity.setParentName(insertData.getParentName());
    				entity.setStreamName(dbResponse.get().getStreamName());
    				entity.setDOB(dbResponse.get().getDOB());
    				entity.setPOY(dbResponse.get().getPOY());
    				entity.setMobileNumber(dbResponse.get().getMobileNumber());
    				entity.setMailID(dbResponse.get().getMailID());
    				entity.setAddress(dbResponse.get().getAddress());
    				entity.setStatus(dbResponse.get().getStatus());
    				
    				saveEntities.add(entity);
    			}else if(insertData.getId()!=null && insertData.getDOB()!=null) {
    				
    			}else if(insertData.getId()!=null && insertData.getPOY()!=null) {
    				
    			}else if(insertData.getId()!=null && insertData.getMobileNumber()!=null) {
    				
    			}else if(insertData.getId()!=null && insertData.getMailID()!=null) {
    				
    			}else if(insertData.getId()!=null && insertData.getAddress()!=null) {
    				
    			}else (insertData.getId()!=null && insertData.getStatus()!=null) {
    				
    			}
    			
    		}
    	}catch() {
    		
    	}
    }
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2038)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2243)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3278)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3055)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.internalGetHoverInfo(NLSStringHover.java:141)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.getHoverInfo2(NLSStringHover.java:120)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:163)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:130)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:89)
	at org.eclipse.jface.text.TextViewerHoverManager$1.run(TextViewerHoverManager.java:155)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2025-06-10 23:50:15.258
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2038)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2243)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3278)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3055)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.internalGetHoverInfo(NLSStringHover.java:141)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.getHoverInfo2(NLSStringHover.java:120)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:163)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:130)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:89)
	at org.eclipse.jface.text.TextViewerHoverManager$1.run(TextViewerHoverManager.java:155)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2025-06-10 23:50:15.261
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2038)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2243)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3278)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3055)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.internalGetHoverInfo(NLSStringHover.java:141)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.getHoverInfo2(NLSStringHover.java:120)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:163)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:130)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:89)
	at org.eclipse.jface.text.TextViewerHoverManager$1.run(TextViewerHoverManager.java:155)

!ENTRY org.eclipse.jdt.core 4 4 2025-06-10 23:50:15.889
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package com.example.EMSbackend.Service;

import java.util.ArrayList;
import java.util.List;
import java.util.Optional;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import com.example.EMSbackend.DTO.EMSGetAllDTO;
import com.example.EMSbackend.DTO.EMSInsertMultipleRequestDTO;
import com.example.EMSbackend.DTO.EMSInsertMultipleResponseDTO;
import com.example.EMSbackend.DTO.EMSInsertSingleRequestDTO;
import com.example.EMSbackend.DTO.EMSInsertSingleResponseDTO;
import com.example.EMSbackend.DTO.EMSUpdateRequestDTO;
import com.example.EMSbackend.DTO.EMSUpdateResponseDTO;
import com.example.EMSbackend.Model.EMSModel;
import com.example.EMSbackend.Repository.EMSRepository;

import lombok.extern.slf4j.Slf4j;

@Slf4j
@Service
public class EMSService {

	@Autowired
	private EMSRepository emsRepository;
	
	
//GET_ALL_EMPLOYEE_DETAILS
    public EMSGetAllDTO getEmployeeDetailsAll() {
    	EMSGetAllDTO response = new EMSGetAllDTO();
    
    	
    	//try { 	
    	List<EMSModel> modelDetails = (List<EMSModel>) emsRepository.findAll();
    	response.setEmployeeDetailsAll(modelDetails);
    	
    	/*if(modelDetails!=null) {
    		response.setEmployeeDetailsAll(modelDetails);
    	}
    	else {
    		System.out.println("Employee not found");
    		//log.info("Service response not found");
    	}
    	
    	}catch (Exception e) {
            System.out.println("Error while fetching employee list: " + e.getMessage());
            e.printStackTrace();
        }*/
    	    
    	return response;
    }
    
//INSERT_ALL_EMPLOYEE_DETAILS(SINGLE_DATA/NOT_LIST)
    public EMSInsertSingleResponseDTO insertEmployeeDetails(EMSInsertSingleRequestDTO requestData) {
    	EMSInsertSingleResponseDTO response = new EMSInsertSingleResponseDTO();
    	String message = "FAILURE";
    	List<EMSModel> entityList = new ArrayList<>();
  
    	try {
    	if (requestData != null) {
    		EMSModel entity = new EMSModel();
    		entity.setId(requestData.getId());
			entity.setRid(requestData.getRid());
			entity.setName(requestData.getName());
			entity.setParentName(requestData.getParentName());
			entity.setStreamName(requestData.getStreamName());
			entity.setDOB(requestData.getDOB());
			entity.setPOY(requestData.getPOY());
			entity.setMobileNumber(requestData.getMobileNumber());
			entity.setMailID(requestData.getMailID());
			entity.setAddress(requestData.getAddress());
			entity.setStatus(requestData.getStatus());
			 
			c
   
			List<EMSModel> savedEntities = emsRepository.saveAll(entityList);
			if (savedEntities != null && !savedEntities.isEmpty()) {
	            message = "SUCCESS";
	            response.setMessage(message);
	            response.setCode("200 OK");
	        } else {
	            response.setMessage("Insert failed");
	            response.setCode("500 INTERNAL SERVER ERROR");
	        }
    	}else {
            response.setMessage("Input list is null or empty");
            response.setCode("400 BAD REQUEST");
        }
    	}catch (Exception e) {
    		e.printStackTrace();
    		response.setMessage("Exception occurred");
            response.setCode("500 INTERNAL SERVER ERROR");
    	}
  
    	return response;
    	
    }
    
    
   
//INSERT_ALL_EMPLOYEE_DETAILS(MULTIPLE/LIST)
    
    public EMSInsertMultipleResponseDTO insertEmployeeDetailsAll(EMSInsertMultipleRequestDTO insertData) {
    	EMSInsertMultipleResponseDTO response = new EMSInsertMultipleResponseDTO();
    	String message = "FAILURE";
    	
    	try {
    		List<EMSModel> dtoList = insertData.getEmployeeDetailsRequestAll();
 
    		if (dtoList != null && !dtoList.isEmpty()) {
    			
    			List<EMSModel> entityList = new ArrayList<>();
    			
    			for (EMSModel dto : dtoList){
    				
    			EMSModel entity = new EMSModel();
    			 entity.setId(dto.getId());
    			 entity.setRid(dto.getRid());
    			 entity.setName(dto.getName());
    			 entity.setParentName(dto.getParentName());
    			 entity.setStreamName(dto.getStreamName());
    			 entity.setDOB(dto.getDOB());
    			 entity.setPOY(dto.getPOY());
    			 entity.setMobileNumber(dto.getMobileNumber());
    			 entity.setMailID(dto.getMailID());
    			 entity.setAddress(dto.getAddress());
    			 entity.setStatus(dto.getStatus());
    			 
    			 entityList.add(entity);
    			}
    			
    			List<EMSModel> savedEntities = emsRepository.saveAll(entityList);
                

                if (savedEntities != null && !savedEntities.isEmpty()) {
                    message = "SUCCESS";
                    response.setMessage(message);
                    response.setCode("200 OK");
                } else {
                    response.setMessage("Insert failed");
                    response.setCode("500 INTERNAL SERVER ERROR");
                }
    			
    		}else {
    			response.setMessage("Input list is null or empty");
                response.setCode("400 BAD REQUEST");
    		}
    	}catch (Exception e) {
    		e.printStackTrace();
    		response.setMessage("Exception occurred");
            response.setCode("500 INTERNAL SERVER ERROR");
    	}
    	return response;
    }
    
//UPDATE
    public EMSUpdateResponseDTO updateEmployeeDetails(EMSUpdateRequestDTO insertData) {
    	EMSUpdateResponseDTO response =new EMSUpdateResponseDTO();
    	List<EMSModel> saveEntities =  new ArrayList<>();
    	try {
    		Optional<EMSModel> dbResponse = emsRepository.findById(insertData.getId());
    		if(dbResponse.isPresent()) {
    			EMSModel entity = new EMSModel();
    			
    			if(insertData.getId()!=null && insertData.getRid()!=null) {
    			
    				entity.setId(dbResponse.get().getId());
    				entity.setRid(insertData.getRid());
    				entity.setName(dbResponse.get().getName());
    				entity.setParentName(dbResponse.get().getParentName());
    				entity.setStreamName(dbResponse.get().getStreamName());
    				entity.setDOB(dbResponse.get().getDOB());
    				entity.setPOY(dbResponse.get().getPOY());
    				entity.setMobileNumber(dbResponse.get().getMobileNumber());
    				entity.setMailID(dbResponse.get().getMailID());
    				entity.setAddress(dbResponse.get().getAddress());
    				entity.setStatus(dbResponse.get().getStatus());
    				
    				saveEntities.add(entity);
    				
    				
    			}else if(insertData.getId()!=null && insertData.getName()!=null) {
    				entity.setId(dbResponse.get().getId());
    				entity.setRid(dbResponse.get().getRid());
    				entity.setName(insertData.getName());
    				entity.setParentName(dbResponse.get().getParentName());
    				entity.setStreamName(dbResponse.get().getStreamName());
    				entity.setDOB(dbResponse.get().getDOB());
    				entity.setPOY(dbResponse.get().getPOY());
    				entity.setMobileNumber(dbResponse.get().getMobileNumber());
    				entity.setMailID(dbResponse.get().getMailID());
    				entity.setAddress(dbResponse.get().getAddress());
    				entity.setStatus(dbResponse.get().getStatus());
    				
    				saveEntities.add(entity);
    			}else if(insertData.getId()!=null && insertData.getParentName()!=null) {
    				entity.setId(dbResponse.get().getId());
    				entity.setRid(dbResponse.get().getRid());
    				entity.setName(dbResponse.get().getName());
    				entity.setParentName(insertData.getParentName());
    				entity.setStreamName(dbResponse.get().getStreamName());
    				entity.setDOB(dbResponse.get().getDOB());
    				entity.setPOY(dbResponse.get().getPOY());
    				entity.setMobileNumber(dbResponse.get().getMobileNumber());
    				entity.setMailID(dbResponse.get().getMailID());
    				entity.setAddress(dbResponse.get().getAddress());
    				entity.setStatus(dbResponse.get().getStatus());
    				
    				saveEntities.add(entity);
    			}else if(insertData.getId()!=null && insertData.getStreamName()!=null) {
    				entity.setId(dbResponse.get().getId());
    				entity.setRid(dbResponse.get().getRid());
    				entity.setName(dbResponse.get().getName());
    				entity.setParentName();
    				entity.setStreamName(dbResponse.get().getStreamName());
    				entity.setDOB(dbResponse.get().getDOB());
    				entity.setPOY(dbResponse.get().getPOY());
    				entity.setMobileNumber(dbResponse.get().getMobileNumber());
    				entity.setMailID(dbResponse.get().getMailID());
    				entity.setAddress(dbResponse.get().getAddress());
    				entity.setStatus(dbResponse.get().getStatus());
    				
    				saveEntities.add(entity);
    			}else if(insertData.getId()!=null && insertData.getDOB()!=null) {
    				
    			}else if(insertData.getId()!=null && insertData.getPOY()!=null) {
    				
    			}else if(insertData.getId()!=null && insertData.getMobileNumber()!=null) {
    				
    			}else if(insertData.getId()!=null && insertData.getMailID()!=null) {
    				
    			}else if(insertData.getId()!=null && insertData.getAddress()!=null) {
    				
    			}else (insertData.getId()!=null && insertData.getStatus()!=null) {
    				
    			}
    			
    		}
    	}catch() {
    		
    	}
    }
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2038)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2243)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3278)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3055)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:540)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:132)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:94)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:91)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:158)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)

!ENTRY org.eclipse.jdt.ui 4 2 2025-06-10 23:50:15.894
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2038)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2243)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3278)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3055)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:540)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:132)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:94)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:91)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:158)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)

!ENTRY org.eclipse.jdt.ui 4 0 2025-06-10 23:50:15.896
!MESSAGE Error in JDT Core during reconcile
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2038)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2243)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3278)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3055)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:540)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1142)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1319)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:132)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:94)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:91)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:158)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)

!ENTRY org.eclipse.jdt.core 4 4 2025-06-10 23:50:15.985
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package com.example.EMSbackend.Service;

import java.util.ArrayList;
import java.util.List;
import java.util.Optional;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import com.example.EMSbackend.DTO.EMSGetAllDTO;
import com.example.EMSbackend.DTO.EMSInsertMultipleRequestDTO;
import com.example.EMSbackend.DTO.EMSInsertMultipleResponseDTO;
import com.example.EMSbackend.DTO.EMSInsertSingleRequestDTO;
import com.example.EMSbackend.DTO.EMSInsertSingleResponseDTO;
import com.example.EMSbackend.DTO.EMSUpdateRequestDTO;
import com.example.EMSbackend.DTO.EMSUpdateResponseDTO;
import com.example.EMSbackend.Model.EMSModel;
import com.example.EMSbackend.Repository.EMSRepository;

import lombok.extern.slf4j.Slf4j;

@Slf4j
@Service
public class EMSService {

	@Autowired
	private EMSRepository emsRepository;
	
	
//GET_ALL_EMPLOYEE_DETAILS
    public EMSGetAllDTO getEmployeeDetailsAll() {
    	EMSGetAllDTO response = new EMSGetAllDTO();
    
    	
    	//try { 	
    	List<EMSModel> modelDetails = (List<EMSModel>) emsRepository.findAll();
    	response.setEmployeeDetailsAll(modelDetails);
    	
    	/*if(modelDetails!=null) {
    		response.setEmployeeDetailsAll(modelDetails);
    	}
    	else {
    		System.out.println("Employee not found");
    		//log.info("Service response not found");
    	}
    	
    	}catch (Exception e) {
            System.out.println("Error while fetching employee list: " + e.getMessage());
            e.printStackTrace();
        }*/
    	    
    	return response;
    }
    
//INSERT_ALL_EMPLOYEE_DETAILS(SINGLE_DATA/NOT_LIST)
    public EMSInsertSingleResponseDTO insertEmployeeDetails(EMSInsertSingleRequestDTO requestData) {
    	EMSInsertSingleResponseDTO response = new EMSInsertSingleResponseDTO();
    	String message = "FAILURE";
    	List<EMSModel> entityList = new ArrayList<>();
  
    	try {
    	if (requestData != null) {
    		EMSModel entity = new EMSModel();
    		entity.setId(requestData.getId());
			entity.setRid(requestData.getRid());
			entity.setName(requestData.getName());
			entity.setParentName(requestData.getParentName());
			entity.setStreamName(requestData.getStreamName());
			entity.setDOB(requestData.getDOB());
			entity.setPOY(requestData.getPOY());
			entity.setMobileNumber(requestData.getMobileNumber());
			entity.setMailID(requestData.getMailID());
			entity.setAddress(requestData.getAddress());
			entity.setStatus(requestData.getStatus());
			 
			c
   
			List<EMSModel> savedEntities = emsRepository.saveAll(entityList);
			if (savedEntities != null && !savedEntities.isEmpty()) {
	            message = "SUCCESS";
	            response.setMessage(message);
	            response.setCode("200 OK");
	        } else {
	            response.setMessage("Insert failed");
	            response.setCode("500 INTERNAL SERVER ERROR");
	        }
    	}else {
            response.setMessage("Input list is null or empty");
            response.setCode("400 BAD REQUEST");
        }
    	}catch (Exception e) {
    		e.printStackTrace();
    		response.setMessage("Exception occurred");
            response.setCode("500 INTERNAL SERVER ERROR");
    	}
  
    	return response;
    	
    }
    
    
   
//INSERT_ALL_EMPLOYEE_DETAILS(MULTIPLE/LIST)
    
    public EMSInsertMultipleResponseDTO insertEmployeeDetailsAll(EMSInsertMultipleRequestDTO insertData) {
    	EMSInsertMultipleResponseDTO response = new EMSInsertMultipleResponseDTO();
    	String message = "FAILURE";
    	
    	try {
    		List<EMSModel> dtoList = insertData.getEmployeeDetailsRequestAll();
 
    		if (dtoList != null && !dtoList.isEmpty()) {
    			
    			List<EMSModel> entityList = new ArrayList<>();
    			
    			for (EMSModel dto : dtoList){
    				
    			EMSModel entity = new EMSModel();
    			 entity.setId(dto.getId());
    			 entity.setRid(dto.getRid());
    			 entity.setName(dto.getName());
    			 entity.setParentName(dto.getParentName());
    			 entity.setStreamName(dto.getStreamName());
    			 entity.setDOB(dto.getDOB());
    			 entity.setPOY(dto.getPOY());
    			 entity.setMobileNumber(dto.getMobileNumber());
    			 entity.setMailID(dto.getMailID());
    			 entity.setAddress(dto.getAddress());
    			 entity.setStatus(dto.getStatus());
    			 
    			 entityList.add(entity);
    			}
    			
    			List<EMSModel> savedEntities = emsRepository.saveAll(entityList);
                

                if (savedEntities != null && !savedEntities.isEmpty()) {
                    message = "SUCCESS";
                    response.setMessage(message);
                    response.setCode("200 OK");
                } else {
                    response.setMessage("Insert failed");
                    response.setCode("500 INTERNAL SERVER ERROR");
                }
    			
    		}else {
    			response.setMessage("Input list is null or empty");
                response.setCode("400 BAD REQUEST");
    		}
    	}catch (Exception e) {
    		e.printStackTrace();
    		response.setMessage("Exception occurred");
            response.setCode("500 INTERNAL SERVER ERROR");
    	}
    	return response;
    }
    
//UPDATE
    public EMSUpdateResponseDTO updateEmployeeDetails(EMSUpdateRequestDTO insertData) {
    	EMSUpdateResponseDTO response =new EMSUpdateResponseDTO();
    	List<EMSModel> saveEntities =  new ArrayList<>();
    	try {
    		Optional<EMSModel> dbResponse = emsRepository.findById(insertData.getId());
    		if(dbResponse.isPresent()) {
    			EMSModel entity = new EMSModel();
    			
    			if(insertData.getId()!=null && insertData.getRid()!=null) {
    			
    				entity.setId(dbResponse.get().getId());
    				entity.setRid(insertData.getRid());
    				entity.setName(dbResponse.get().getName());
    				entity.setParentName(dbResponse.get().getParentName());
    				entity.setStreamName(dbResponse.get().getStreamName());
    				entity.setDOB(dbResponse.get().getDOB());
    				entity.setPOY(dbResponse.get().getPOY());
    				entity.setMobileNumber(dbResponse.get().getMobileNumber());
    				entity.setMailID(dbResponse.get().getMailID());
    				entity.setAddress(dbResponse.get().getAddress());
    				entity.setStatus(dbResponse.get().getStatus());
    				
    				saveEntities.add(entity);
    				
    				
    			}else if(insertData.getId()!=null && insertData.getName()!=null) {
    				entity.setId(dbResponse.get().getId());
    				entity.setRid(dbResponse.get().getRid());
    				entity.setName(insertData.getName());
    				entity.setParentName(dbResponse.get().getParentName());
    				entity.setStreamName(dbResponse.get().getStreamName());
    				entity.setDOB(dbResponse.get().getDOB());
    				entity.setPOY(dbResponse.get().getPOY());
    				entity.setMobileNumber(dbResponse.get().getMobileNumber());
    				entity.setMailID(dbResponse.get().getMailID());
    				entity.setAddress(dbResponse.get().getAddress());
    				entity.setStatus(dbResponse.get().getStatus());
    				
    				saveEntities.add(entity);
    			}else if(insertData.getId()!=null && insertData.getParentName()!=null) {
    				entity.setId(dbResponse.get().getId());
    				entity.setRid(dbResponse.get().getRid());
    				entity.setName(dbResponse.get().getName());
    				entity.setParentName(insertData.getParentName());
    				entity.setStreamName(dbResponse.get().getStreamName());
    				entity.setDOB(dbResponse.get().getDOB());
    				entity.setPOY(dbResponse.get().getPOY());
    				entity.setMobileNumber(dbResponse.get().getMobileNumber());
    				entity.setMailID(dbResponse.get().getMailID());
    				entity.setAddress(dbResponse.get().getAddress());
    				entity.setStatus(dbResponse.get().getStatus());
    				
    				saveEntities.add(entity);
    			}else if(insertData.getId()!=null && insertData.getStreamName()!=null) {
    				entity.setId(dbResponse.get().getId());
    				entity.setRid(dbResponse.get().getRid());
    				entity.setName(dbResponse.get().getName());
    				entity.setParentName();
    				entity.setStreamName(dbResponse.get().getStreamName());
    				entity.setDOB(dbResponse.get().getDOB());
    				entity.setPOY(dbResponse.get().getPOY());
    				entity.setMobileNumber(dbResponse.get().getMobileNumber());
    				entity.setMailID(dbResponse.get().getMailID());
    				entity.setAddress(dbResponse.get().getAddress());
    				entity.setStatus(dbResponse.get().getStatus());
    				
    				saveEntities.add(entity);
    			}else if(insertData.getId()!=null && insertData.getDOB()!=null) {
    				
    			}else if(insertData.getId()!=null && insertData.getPOY()!=null) {
    				
    			}else if(insertData.getId()!=null && insertData.getMobileNumber()!=null) {
    				
    			}else if(insertData.getId()!=null && insertData.getMailID()!=null) {
    				
    			}else if(insertData.getId()!=null && insertData.getAddress()!=null) {
    				
    			}else (insertData.getId()!=null && insertData.getStatus()!=null) {
    				
    			}
    			
    		}
    	}catch() {
    		
    	}
    }
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:880)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2038)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2248)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2243)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3278)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3055)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)
